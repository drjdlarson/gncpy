Search.setIndex({"docnames": ["References", "_autosummary/gncpy", "_autosummary/gncpy/control/elqr/gncpy.control.elqr.ELQR", "_autosummary/gncpy/control/gncpy.control.elqr", "_autosummary/gncpy/control/gncpy.control.lqr", "_autosummary/gncpy/control/lqr/gncpy.control.lqr.LQR", "_autosummary/gncpy/coordinate_transforms/gncpy.coordinate_transforms.ecef_to_LLA", "_autosummary/gncpy/coordinate_transforms/gncpy.coordinate_transforms.ecef_to_NED", "_autosummary/gncpy/coordinate_transforms/gncpy.coordinate_transforms.lla_to_ECEF", "_autosummary/gncpy/coordinate_transforms/gncpy.coordinate_transforms.lla_to_NED", "_autosummary/gncpy/coordinate_transforms/gncpy.coordinate_transforms.ned_to_LLA", "_autosummary/gncpy/data_fusion/gncpy.data_fusion.GeneralizedCovarianceIntersection", "_autosummary/gncpy/distributions/gncpy.distributions.Particle", "_autosummary/gncpy/distributions/gncpy.distributions.ParticleDistribution", "_autosummary/gncpy/distributions/gncpy.distributions.QuadraturePoints", "_autosummary/gncpy/distributions/gncpy.distributions.SigmaPoints", "_autosummary/gncpy/distributions/gncpy.distributions.SimpleParticleDistribution", "_autosummary/gncpy/dynamics/aircraft/gncpy.dynamics.aircraft.simple_multirotor", "_autosummary/gncpy/dynamics/aircraft/simple_multirotor/gncpy.dynamics.aircraft.simple_multirotor.AeroParams", "_autosummary/gncpy/dynamics/aircraft/simple_multirotor/gncpy.dynamics.aircraft.simple_multirotor.AircraftParams", "_autosummary/gncpy/dynamics/aircraft/simple_multirotor/gncpy.dynamics.aircraft.simple_multirotor.Effector", "_autosummary/gncpy/dynamics/aircraft/simple_multirotor/gncpy.dynamics.aircraft.simple_multirotor.Environment", "_autosummary/gncpy/dynamics/aircraft/simple_multirotor/gncpy.dynamics.aircraft.simple_multirotor.GeoParams", "_autosummary/gncpy/dynamics/aircraft/simple_multirotor/gncpy.dynamics.aircraft.simple_multirotor.MassParams", "_autosummary/gncpy/dynamics/aircraft/simple_multirotor/gncpy.dynamics.aircraft.simple_multirotor.MotorParams", "_autosummary/gncpy/dynamics/aircraft/simple_multirotor/gncpy.dynamics.aircraft.simple_multirotor.PropParams", "_autosummary/gncpy/dynamics/aircraft/simple_multirotor/gncpy.dynamics.aircraft.simple_multirotor.SimpleMultirotor", "_autosummary/gncpy/dynamics/aircraft/simple_multirotor/gncpy.dynamics.aircraft.simple_multirotor.Vehicle", "_autosummary/gncpy/dynamics/basic/clohessy_wiltshire_orbit/gncpy.dynamics.basic.clohessy_wiltshire_orbit.ClohessyWiltshireOrbit", "_autosummary/gncpy/dynamics/basic/clohessy_wiltshire_orbit2d/gncpy.dynamics.basic.clohessy_wiltshire_orbit2d.ClohessyWiltshireOrbit2d", "_autosummary/gncpy/dynamics/basic/coordinated_turn_known/gncpy.dynamics.basic.coordinated_turn_known.CoordinatedTurnKnown", "_autosummary/gncpy/dynamics/basic/coordinated_turn_unknown/gncpy.dynamics.basic.coordinated_turn_unknown.CoordinatedTurnUnknown", "_autosummary/gncpy/dynamics/basic/curvilinear_motion/gncpy.dynamics.basic.curvilinear_motion.CurvilinearMotion", "_autosummary/gncpy/dynamics/basic/double_integrator/gncpy.dynamics.basic.double_integrator.DoubleIntegrator", "_autosummary/gncpy/dynamics/basic/dynamics_base/gncpy.dynamics.basic.dynamics_base.DynamicsBase", "_autosummary/gncpy/dynamics/basic/gncpy.dynamics.basic.clohessy_wiltshire_orbit", "_autosummary/gncpy/dynamics/basic/gncpy.dynamics.basic.clohessy_wiltshire_orbit2d", "_autosummary/gncpy/dynamics/basic/gncpy.dynamics.basic.coordinated_turn_known", "_autosummary/gncpy/dynamics/basic/gncpy.dynamics.basic.coordinated_turn_unknown", "_autosummary/gncpy/dynamics/basic/gncpy.dynamics.basic.curvilinear_motion", "_autosummary/gncpy/dynamics/basic/gncpy.dynamics.basic.double_integrator", "_autosummary/gncpy/dynamics/basic/gncpy.dynamics.basic.dynamics_base", "_autosummary/gncpy/dynamics/basic/gncpy.dynamics.basic.irobot_create", "_autosummary/gncpy/dynamics/basic/gncpy.dynamics.basic.karlgaard_orbit", "_autosummary/gncpy/dynamics/basic/gncpy.dynamics.basic.linear_dynamics_base", "_autosummary/gncpy/dynamics/basic/gncpy.dynamics.basic.nonlinear_dynamics_base", "_autosummary/gncpy/dynamics/basic/gncpy.dynamics.basic.tschauner_hempel_orbit", "_autosummary/gncpy/dynamics/basic/irobot_create/gncpy.dynamics.basic.irobot_create.IRobotCreate", "_autosummary/gncpy/dynamics/basic/karlgaard_orbit/gncpy.dynamics.basic.karlgaard_orbit.KarlgaardOrbit", "_autosummary/gncpy/dynamics/basic/linear_dynamics_base/gncpy.dynamics.basic.linear_dynamics_base.LinearDynamicsBase", "_autosummary/gncpy/dynamics/basic/nonlinear_dynamics_base/gncpy.dynamics.basic.nonlinear_dynamics_base.NonlinearDynamicsBase", "_autosummary/gncpy/dynamics/basic/tschauner_hempel_orbit/gncpy.dynamics.basic.tschauner_hempel_orbit.TschaunerHempelOrbit", "_autosummary/gncpy/dynamics/gncpy.dynamics.aircraft", "_autosummary/gncpy/dynamics/gncpy.dynamics.basic", "_autosummary/gncpy/errors/gncpy.errors.ExtremeMeasurementNoiseError", "_autosummary/gncpy/errors/gncpy.errors.ParticleDepletionError", "_autosummary/gncpy/errors/gncpy.errors.ParticleEstimationDomainError", "_autosummary/gncpy/filters/bayes_filter/gncpy.filters.bayes_filter.BayesFilter", "_autosummary/gncpy/filters/bootstrap_filter/gncpy.filters.bootstrap_filter.BootstrapFilter", "_autosummary/gncpy/filters/ekf_gaussian_scale_mixture_filter/gncpy.filters.ekf_gaussian_scale_mixture_filter.EKFGaussianScaleMixtureFilter", "_autosummary/gncpy/filters/extended_kalman_filter/gncpy.filters.extended_kalman_filter.ExtendedKalmanFilter", "_autosummary/gncpy/filters/gci_filter/gncpy.filters.gci_filter.GCIFilter", "_autosummary/gncpy/filters/gncpy.filters.bayes_filter", "_autosummary/gncpy/filters/gncpy.filters.bootstrap_filter", "_autosummary/gncpy/filters/gncpy.filters.ekf_gaussian_scale_mixture_filter", "_autosummary/gncpy/filters/gncpy.filters.extended_kalman_filter", "_autosummary/gncpy/filters/gncpy.filters.gci_filter", "_autosummary/gncpy/filters/gncpy.filters.gsm_filter_base", "_autosummary/gncpy/filters/gncpy.filters.imm_gci_filter", "_autosummary/gncpy/filters/gncpy.filters.interacting_multiple_model", "_autosummary/gncpy/filters/gncpy.filters.kalman_filter", "_autosummary/gncpy/filters/gncpy.filters.kf_gaussian_scale_mixture_filter", "_autosummary/gncpy/filters/gncpy.filters.max_corr_ent_ukf", "_autosummary/gncpy/filters/gncpy.filters.max_corr_ent_upf", "_autosummary/gncpy/filters/gncpy.filters.mcmc_particle_filter_base", "_autosummary/gncpy/filters/gncpy.filters.particle_filter", "_autosummary/gncpy/filters/gncpy.filters.qkf_gaussian_scale_mixture_filter", "_autosummary/gncpy/filters/gncpy.filters.quadrature_kalman_filter", "_autosummary/gncpy/filters/gncpy.filters.sqkf_gaussian_scale_mixture_filter", "_autosummary/gncpy/filters/gncpy.filters.square_root_qkf", "_autosummary/gncpy/filters/gncpy.filters.students_t_filter", "_autosummary/gncpy/filters/gncpy.filters.ukf_gaussian_scale_mixture_filter", "_autosummary/gncpy/filters/gncpy.filters.unscented_kalman_filter", "_autosummary/gncpy/filters/gncpy.filters.unscented_particle_filter", "_autosummary/gncpy/filters/gsm_filter_base/gncpy.filters.gsm_filter_base.GSMFilterBase", "_autosummary/gncpy/filters/imm_gci_filter/gncpy.filters.imm_gci_filter.IMMGCIFilter", "_autosummary/gncpy/filters/interacting_multiple_model/gncpy.filters.interacting_multiple_model.InteractingMultipleModel", "_autosummary/gncpy/filters/kalman_filter/gncpy.filters.kalman_filter.KalmanFilter", "_autosummary/gncpy/filters/kf_gaussian_scale_mixture_filter/gncpy.filters.kf_gaussian_scale_mixture_filter.KFGaussianScaleMixtureFilter", "_autosummary/gncpy/filters/max_corr_ent_ukf/gncpy.filters.max_corr_ent_ukf.MaxCorrEntUKF", "_autosummary/gncpy/filters/max_corr_ent_upf/gncpy.filters.max_corr_ent_upf.MaxCorrEntUPF", "_autosummary/gncpy/filters/mcmc_particle_filter_base/gncpy.filters.mcmc_particle_filter_base.MCMCParticleFilterBase", "_autosummary/gncpy/filters/particle_filter/gncpy.filters.particle_filter.ParticleFilter", "_autosummary/gncpy/filters/qkf_gaussian_scale_mixture_filter/gncpy.filters.qkf_gaussian_scale_mixture_filter.QKFGaussianScaleMixtureFilter", "_autosummary/gncpy/filters/quadrature_kalman_filter/gncpy.filters.quadrature_kalman_filter.QuadratureKalmanFilter", "_autosummary/gncpy/filters/sqkf_gaussian_scale_mixture_filter/gncpy.filters.sqkf_gaussian_scale_mixture_filter.SQKFGaussianScaleMixtureFilter", "_autosummary/gncpy/filters/square_root_qkf/gncpy.filters.square_root_qkf.SquareRootQKF", "_autosummary/gncpy/filters/students_t_filter/gncpy.filters.students_t_filter.StudentsTFilter", "_autosummary/gncpy/filters/ukf_gaussian_scale_mixture_filter/gncpy.filters.ukf_gaussian_scale_mixture_filter.UKFGaussianScaleMixtureFilter", "_autosummary/gncpy/filters/unscented_kalman_filter/gncpy.filters.unscented_kalman_filter.UnscentedKalmanFilter", "_autosummary/gncpy/filters/unscented_particle_filter/gncpy.filters.unscented_particle_filter.UnscentedParticleFilter", "_autosummary/gncpy/game_engine/base_game/gncpy.game_engine.base_game.Base2dParams", "_autosummary/gncpy/game_engine/base_game/gncpy.game_engine.base_game.BaseGame", "_autosummary/gncpy/game_engine/base_game/gncpy.game_engine.base_game.BaseGame2d", "_autosummary/gncpy/game_engine/base_game/gncpy.game_engine.base_game.BaseParams", "_autosummary/gncpy/game_engine/base_game/gncpy.game_engine.base_game.WindowParams", "_autosummary/gncpy/game_engine/base_game/gncpy.game_engine.base_game.ndarray_representer", "_autosummary/gncpy/game_engine/base_game/gncpy.game_engine.base_game.yaml", "_autosummary/gncpy/game_engine/components/gncpy.game_engine.components.CBirth", "_autosummary/gncpy/game_engine/components/gncpy.game_engine.components.CCapabilities", "_autosummary/gncpy/game_engine/components/gncpy.game_engine.components.CCollision", "_autosummary/gncpy/game_engine/components/gncpy.game_engine.components.CDynamics", "_autosummary/gncpy/game_engine/components/gncpy.game_engine.components.CEvents", "_autosummary/gncpy/game_engine/components/gncpy.game_engine.components.CHazard", "_autosummary/gncpy/game_engine/components/gncpy.game_engine.components.CPriority", "_autosummary/gncpy/game_engine/components/gncpy.game_engine.components.CShape", "_autosummary/gncpy/game_engine/components/gncpy.game_engine.components.CTransform", "_autosummary/gncpy/game_engine/components/gncpy.game_engine.components.library_asset_dir", "_autosummary/gncpy/game_engine/entities/gncpy.game_engine.entities.Entity", "_autosummary/gncpy/game_engine/entities/gncpy.game_engine.entities.EntityManager", "_autosummary/gncpy/game_engine/gncpy.game_engine.base_game", "_autosummary/gncpy/game_engine/gncpy.game_engine.components", "_autosummary/gncpy/game_engine/gncpy.game_engine.entities", "_autosummary/gncpy/game_engine/gncpy.game_engine.physics2d", "_autosummary/gncpy/game_engine/gncpy.game_engine.rendering2d", "_autosummary/gncpy/game_engine/physics2d/gncpy.game_engine.physics2d.Collision2dParams", "_autosummary/gncpy/game_engine/physics2d/gncpy.game_engine.physics2d.Physics2dParams", "_autosummary/gncpy/game_engine/physics2d/gncpy.game_engine.physics2d.check_collision2d", "_autosummary/gncpy/game_engine/physics2d/gncpy.game_engine.physics2d.clamp_window_bounds2d", "_autosummary/gncpy/game_engine/physics2d/gncpy.game_engine.physics2d.dist_to_pixels", "_autosummary/gncpy/game_engine/physics2d/gncpy.game_engine.physics2d.pixels_to_dist", "_autosummary/gncpy/game_engine/physics2d/gncpy.game_engine.physics2d.resolve_collision2d", "_autosummary/gncpy/game_engine/rendering2d/gncpy.game_engine.rendering2d.Shape2dParams", "_autosummary/gncpy/game_engine/rendering2d/gncpy.game_engine.rendering2d.get_drawable_entities", "_autosummary/gncpy/game_engine/rendering2d/gncpy.game_engine.rendering2d.init_rendering_system", "_autosummary/gncpy/game_engine/rendering2d/gncpy.game_engine.rendering2d.init_window", "_autosummary/gncpy/game_engine/rendering2d/gncpy.game_engine.rendering2d.render", "_autosummary/gncpy/game_engine/rendering2d/gncpy.game_engine.rendering2d.shutdown", "_autosummary/gncpy/games/SimpleUAV2d/gncpy.games.SimpleUAV2d.BirthModelParams", "_autosummary/gncpy/games/SimpleUAV2d/gncpy.games.SimpleUAV2d.ControlModelParams", "_autosummary/gncpy/games/SimpleUAV2d/gncpy.games.SimpleUAV2d.DynamicsParams", "_autosummary/gncpy/games/SimpleUAV2d/gncpy.games.SimpleUAV2d.EventType", "_autosummary/gncpy/games/SimpleUAV2d/gncpy.games.SimpleUAV2d.HazardParams", "_autosummary/gncpy/games/SimpleUAV2d/gncpy.games.SimpleUAV2d.ObstacleParams", "_autosummary/gncpy/games/SimpleUAV2d/gncpy.games.SimpleUAV2d.Params", "_autosummary/gncpy/games/SimpleUAV2d/gncpy.games.SimpleUAV2d.PlayerParams", "_autosummary/gncpy/games/SimpleUAV2d/gncpy.games.SimpleUAV2d.ScoreParams", "_autosummary/gncpy/games/SimpleUAV2d/gncpy.games.SimpleUAV2d.SimpleUAV2d", "_autosummary/gncpy/games/SimpleUAV2d/gncpy.games.SimpleUAV2d.StateConstraintParams", "_autosummary/gncpy/games/SimpleUAV2d/gncpy.games.SimpleUAV2d.TargetParams", "_autosummary/gncpy/games/gncpy.games.SimpleUAV2d", "_autosummary/gncpy/gncpy.control", "_autosummary/gncpy/gncpy.coordinate_transforms", "_autosummary/gncpy/gncpy.data_fusion", "_autosummary/gncpy/gncpy.distributions", "_autosummary/gncpy/gncpy.dynamics", "_autosummary/gncpy/gncpy.errors", "_autosummary/gncpy/gncpy.filters", "_autosummary/gncpy/gncpy.game_engine", "_autosummary/gncpy/gncpy.games", "_autosummary/gncpy/gncpy.math", "_autosummary/gncpy/gncpy.measurements", "_autosummary/gncpy/gncpy.orbital_mechanics", "_autosummary/gncpy/gncpy.planning", "_autosummary/gncpy/gncpy.plotting", "_autosummary/gncpy/gncpy.sampling", "_autosummary/gncpy/gncpy.utilities", "_autosummary/gncpy/gncpy.wgs84", "_autosummary/gncpy/math/gncpy.math.epanechnikov_kernel", "_autosummary/gncpy/math/gncpy.math.gamma_fnc", "_autosummary/gncpy/math/gncpy.math.gaussian_kernel", "_autosummary/gncpy/math/gncpy.math.get_elem_sym_fnc", "_autosummary/gncpy/math/gncpy.math.get_hessian", "_autosummary/gncpy/math/gncpy.math.get_input_jacobian", "_autosummary/gncpy/math/gncpy.math.get_jacobian", "_autosummary/gncpy/math/gncpy.math.get_state_jacobian", "_autosummary/gncpy/math/gncpy.math.log_sum_exp", "_autosummary/gncpy/math/gncpy.math.rk4", "_autosummary/gncpy/math/gncpy.math.rk4_backward", "_autosummary/gncpy/math/gncpy.math.weighted_sum_mat", "_autosummary/gncpy/math/gncpy.math.weighted_sum_vec", "_autosummary/gncpy/orbital_mechanics/gncpy.orbital_mechanics.correct_lon_ascend", "_autosummary/gncpy/orbital_mechanics/gncpy.orbital_mechanics.ecc_anom_from_mean", "_autosummary/gncpy/orbital_mechanics/gncpy.orbital_mechanics.ecef_from_orbit", "_autosummary/gncpy/orbital_mechanics/gncpy.orbital_mechanics.true_anom_from_ecc", "_autosummary/gncpy/planning/a_star/gncpy.planning.a_star.AStar", "_autosummary/gncpy/planning/a_star/gncpy.planning.a_star.Node", "_autosummary/gncpy/planning/gncpy.planning.a_star", "_autosummary/gncpy/planning/gncpy.planning.reinforcement_learning", "_autosummary/gncpy/planning/gncpy.planning.rrt_star", "_autosummary/gncpy/planning/reinforcement_learning/envs/gncpy.planning.reinforcement_learning.envs.simple2d", "_autosummary/gncpy/planning/reinforcement_learning/envs/simple2d/gncpy.planning.reinforcement_learning.envs.simple2d.simpleUAV2d", "_autosummary/gncpy/planning/reinforcement_learning/envs/simple2d/simpleUAV2d/gncpy.planning.reinforcement_learning.envs.simple2d.simpleUAV2d.SimpleUAV2d", "_autosummary/gncpy/planning/reinforcement_learning/envs/simple2d/simpleUAV2d/gncpy.planning.reinforcement_learning.envs.simple2d.simpleUAV2d.SimpleUAVHazards2d", "_autosummary/gncpy/planning/reinforcement_learning/gncpy.planning.reinforcement_learning.envs", "_autosummary/gncpy/planning/reinforcement_learning/gncpy.planning.reinforcement_learning.wrappers", "_autosummary/gncpy/planning/reinforcement_learning/wrappers/gncpy.planning.reinforcement_learning.wrappers.BufferFames", "_autosummary/gncpy/planning/reinforcement_learning/wrappers/gncpy.planning.reinforcement_learning.wrappers.GrayScaleObservation", "_autosummary/gncpy/planning/reinforcement_learning/wrappers/gncpy.planning.reinforcement_learning.wrappers.MaxFrames", "_autosummary/gncpy/planning/reinforcement_learning/wrappers/gncpy.planning.reinforcement_learning.wrappers.ResizeImage", "_autosummary/gncpy/planning/reinforcement_learning/wrappers/gncpy.planning.reinforcement_learning.wrappers.SkipFrames", "_autosummary/gncpy/planning/reinforcement_learning/wrappers/gncpy.planning.reinforcement_learning.wrappers.StackFrames", "_autosummary/gncpy/planning/rrt_star/gncpy.planning.rrt_star.ExtendedLQRRRTStar", "_autosummary/gncpy/planning/rrt_star/gncpy.planning.rrt_star.LQRRRTStar", "_autosummary/gncpy/planning/rrt_star/gncpy.planning.rrt_star.Node", "_autosummary/gncpy/plotting/gncpy.plotting.calc_error_ellipse", "_autosummary/gncpy/plotting/gncpy.plotting.get_cmap", "_autosummary/gncpy/plotting/gncpy.plotting.init_plotting_opts", "_autosummary/gncpy/plotting/gncpy.plotting.set_title_label", "_autosummary/gncpy/sampling/gncpy.sampling.MetropolisHastings", "_autosummary/gncpy/utilities/gncpy.utilities.ClassPropertyDescriptor", "_autosummary/gncpy/utilities/gncpy.utilities.ClassPropertyMetaClass", "_autosummary/gncpy/utilities/gncpy.utilities.classproperty", "_autosummary/gncpy/wgs84/gncpy.wgs84.calc_earth_rate", "_autosummary/gncpy/wgs84/gncpy.wgs84.calc_ew_rad", "_autosummary/gncpy/wgs84/gncpy.wgs84.calc_gravity", "_autosummary/gncpy/wgs84/gncpy.wgs84.calc_ns_rad", "_autosummary/gncpy/wgs84/gncpy.wgs84.calc_transport_rate", "_autosummary/gncpy/wgs84/gncpy.wgs84.convert_msl_to_wgs", "_autosummary/gncpy/wgs84/gncpy.wgs84.convert_wgs_to_msl", "_autosummary/gncpy/wgs84/gncpy.wgs84.init_egm_lookup_table", "api", "cicd", "index", "license", "toolchain", "usage", "usage/a_star", "usage/control", "usage/filters", "usage/planning", "usage/rrtstar"], "filenames": ["References.rst", "_autosummary/gncpy.rst", "_autosummary/gncpy/control/elqr/gncpy.control.elqr.ELQR.rst", "_autosummary/gncpy/control/gncpy.control.elqr.rst", "_autosummary/gncpy/control/gncpy.control.lqr.rst", "_autosummary/gncpy/control/lqr/gncpy.control.lqr.LQR.rst", "_autosummary/gncpy/coordinate_transforms/gncpy.coordinate_transforms.ecef_to_LLA.rst", "_autosummary/gncpy/coordinate_transforms/gncpy.coordinate_transforms.ecef_to_NED.rst", "_autosummary/gncpy/coordinate_transforms/gncpy.coordinate_transforms.lla_to_ECEF.rst", "_autosummary/gncpy/coordinate_transforms/gncpy.coordinate_transforms.lla_to_NED.rst", "_autosummary/gncpy/coordinate_transforms/gncpy.coordinate_transforms.ned_to_LLA.rst", "_autosummary/gncpy/data_fusion/gncpy.data_fusion.GeneralizedCovarianceIntersection.rst", "_autosummary/gncpy/distributions/gncpy.distributions.Particle.rst", "_autosummary/gncpy/distributions/gncpy.distributions.ParticleDistribution.rst", "_autosummary/gncpy/distributions/gncpy.distributions.QuadraturePoints.rst", "_autosummary/gncpy/distributions/gncpy.distributions.SigmaPoints.rst", "_autosummary/gncpy/distributions/gncpy.distributions.SimpleParticleDistribution.rst", "_autosummary/gncpy/dynamics/aircraft/gncpy.dynamics.aircraft.simple_multirotor.rst", "_autosummary/gncpy/dynamics/aircraft/simple_multirotor/gncpy.dynamics.aircraft.simple_multirotor.AeroParams.rst", "_autosummary/gncpy/dynamics/aircraft/simple_multirotor/gncpy.dynamics.aircraft.simple_multirotor.AircraftParams.rst", "_autosummary/gncpy/dynamics/aircraft/simple_multirotor/gncpy.dynamics.aircraft.simple_multirotor.Effector.rst", "_autosummary/gncpy/dynamics/aircraft/simple_multirotor/gncpy.dynamics.aircraft.simple_multirotor.Environment.rst", "_autosummary/gncpy/dynamics/aircraft/simple_multirotor/gncpy.dynamics.aircraft.simple_multirotor.GeoParams.rst", "_autosummary/gncpy/dynamics/aircraft/simple_multirotor/gncpy.dynamics.aircraft.simple_multirotor.MassParams.rst", "_autosummary/gncpy/dynamics/aircraft/simple_multirotor/gncpy.dynamics.aircraft.simple_multirotor.MotorParams.rst", "_autosummary/gncpy/dynamics/aircraft/simple_multirotor/gncpy.dynamics.aircraft.simple_multirotor.PropParams.rst", "_autosummary/gncpy/dynamics/aircraft/simple_multirotor/gncpy.dynamics.aircraft.simple_multirotor.SimpleMultirotor.rst", "_autosummary/gncpy/dynamics/aircraft/simple_multirotor/gncpy.dynamics.aircraft.simple_multirotor.Vehicle.rst", "_autosummary/gncpy/dynamics/basic/clohessy_wiltshire_orbit/gncpy.dynamics.basic.clohessy_wiltshire_orbit.ClohessyWiltshireOrbit.rst", "_autosummary/gncpy/dynamics/basic/clohessy_wiltshire_orbit2d/gncpy.dynamics.basic.clohessy_wiltshire_orbit2d.ClohessyWiltshireOrbit2d.rst", "_autosummary/gncpy/dynamics/basic/coordinated_turn_known/gncpy.dynamics.basic.coordinated_turn_known.CoordinatedTurnKnown.rst", "_autosummary/gncpy/dynamics/basic/coordinated_turn_unknown/gncpy.dynamics.basic.coordinated_turn_unknown.CoordinatedTurnUnknown.rst", "_autosummary/gncpy/dynamics/basic/curvilinear_motion/gncpy.dynamics.basic.curvilinear_motion.CurvilinearMotion.rst", "_autosummary/gncpy/dynamics/basic/double_integrator/gncpy.dynamics.basic.double_integrator.DoubleIntegrator.rst", "_autosummary/gncpy/dynamics/basic/dynamics_base/gncpy.dynamics.basic.dynamics_base.DynamicsBase.rst", "_autosummary/gncpy/dynamics/basic/gncpy.dynamics.basic.clohessy_wiltshire_orbit.rst", "_autosummary/gncpy/dynamics/basic/gncpy.dynamics.basic.clohessy_wiltshire_orbit2d.rst", "_autosummary/gncpy/dynamics/basic/gncpy.dynamics.basic.coordinated_turn_known.rst", "_autosummary/gncpy/dynamics/basic/gncpy.dynamics.basic.coordinated_turn_unknown.rst", "_autosummary/gncpy/dynamics/basic/gncpy.dynamics.basic.curvilinear_motion.rst", "_autosummary/gncpy/dynamics/basic/gncpy.dynamics.basic.double_integrator.rst", "_autosummary/gncpy/dynamics/basic/gncpy.dynamics.basic.dynamics_base.rst", "_autosummary/gncpy/dynamics/basic/gncpy.dynamics.basic.irobot_create.rst", "_autosummary/gncpy/dynamics/basic/gncpy.dynamics.basic.karlgaard_orbit.rst", "_autosummary/gncpy/dynamics/basic/gncpy.dynamics.basic.linear_dynamics_base.rst", "_autosummary/gncpy/dynamics/basic/gncpy.dynamics.basic.nonlinear_dynamics_base.rst", "_autosummary/gncpy/dynamics/basic/gncpy.dynamics.basic.tschauner_hempel_orbit.rst", "_autosummary/gncpy/dynamics/basic/irobot_create/gncpy.dynamics.basic.irobot_create.IRobotCreate.rst", "_autosummary/gncpy/dynamics/basic/karlgaard_orbit/gncpy.dynamics.basic.karlgaard_orbit.KarlgaardOrbit.rst", "_autosummary/gncpy/dynamics/basic/linear_dynamics_base/gncpy.dynamics.basic.linear_dynamics_base.LinearDynamicsBase.rst", "_autosummary/gncpy/dynamics/basic/nonlinear_dynamics_base/gncpy.dynamics.basic.nonlinear_dynamics_base.NonlinearDynamicsBase.rst", "_autosummary/gncpy/dynamics/basic/tschauner_hempel_orbit/gncpy.dynamics.basic.tschauner_hempel_orbit.TschaunerHempelOrbit.rst", "_autosummary/gncpy/dynamics/gncpy.dynamics.aircraft.rst", "_autosummary/gncpy/dynamics/gncpy.dynamics.basic.rst", "_autosummary/gncpy/errors/gncpy.errors.ExtremeMeasurementNoiseError.rst", "_autosummary/gncpy/errors/gncpy.errors.ParticleDepletionError.rst", "_autosummary/gncpy/errors/gncpy.errors.ParticleEstimationDomainError.rst", "_autosummary/gncpy/filters/bayes_filter/gncpy.filters.bayes_filter.BayesFilter.rst", "_autosummary/gncpy/filters/bootstrap_filter/gncpy.filters.bootstrap_filter.BootstrapFilter.rst", "_autosummary/gncpy/filters/ekf_gaussian_scale_mixture_filter/gncpy.filters.ekf_gaussian_scale_mixture_filter.EKFGaussianScaleMixtureFilter.rst", "_autosummary/gncpy/filters/extended_kalman_filter/gncpy.filters.extended_kalman_filter.ExtendedKalmanFilter.rst", "_autosummary/gncpy/filters/gci_filter/gncpy.filters.gci_filter.GCIFilter.rst", "_autosummary/gncpy/filters/gncpy.filters.bayes_filter.rst", "_autosummary/gncpy/filters/gncpy.filters.bootstrap_filter.rst", "_autosummary/gncpy/filters/gncpy.filters.ekf_gaussian_scale_mixture_filter.rst", "_autosummary/gncpy/filters/gncpy.filters.extended_kalman_filter.rst", "_autosummary/gncpy/filters/gncpy.filters.gci_filter.rst", "_autosummary/gncpy/filters/gncpy.filters.gsm_filter_base.rst", "_autosummary/gncpy/filters/gncpy.filters.imm_gci_filter.rst", "_autosummary/gncpy/filters/gncpy.filters.interacting_multiple_model.rst", "_autosummary/gncpy/filters/gncpy.filters.kalman_filter.rst", "_autosummary/gncpy/filters/gncpy.filters.kf_gaussian_scale_mixture_filter.rst", "_autosummary/gncpy/filters/gncpy.filters.max_corr_ent_ukf.rst", "_autosummary/gncpy/filters/gncpy.filters.max_corr_ent_upf.rst", "_autosummary/gncpy/filters/gncpy.filters.mcmc_particle_filter_base.rst", "_autosummary/gncpy/filters/gncpy.filters.particle_filter.rst", "_autosummary/gncpy/filters/gncpy.filters.qkf_gaussian_scale_mixture_filter.rst", "_autosummary/gncpy/filters/gncpy.filters.quadrature_kalman_filter.rst", "_autosummary/gncpy/filters/gncpy.filters.sqkf_gaussian_scale_mixture_filter.rst", "_autosummary/gncpy/filters/gncpy.filters.square_root_qkf.rst", "_autosummary/gncpy/filters/gncpy.filters.students_t_filter.rst", "_autosummary/gncpy/filters/gncpy.filters.ukf_gaussian_scale_mixture_filter.rst", "_autosummary/gncpy/filters/gncpy.filters.unscented_kalman_filter.rst", "_autosummary/gncpy/filters/gncpy.filters.unscented_particle_filter.rst", "_autosummary/gncpy/filters/gsm_filter_base/gncpy.filters.gsm_filter_base.GSMFilterBase.rst", "_autosummary/gncpy/filters/imm_gci_filter/gncpy.filters.imm_gci_filter.IMMGCIFilter.rst", "_autosummary/gncpy/filters/interacting_multiple_model/gncpy.filters.interacting_multiple_model.InteractingMultipleModel.rst", "_autosummary/gncpy/filters/kalman_filter/gncpy.filters.kalman_filter.KalmanFilter.rst", "_autosummary/gncpy/filters/kf_gaussian_scale_mixture_filter/gncpy.filters.kf_gaussian_scale_mixture_filter.KFGaussianScaleMixtureFilter.rst", "_autosummary/gncpy/filters/max_corr_ent_ukf/gncpy.filters.max_corr_ent_ukf.MaxCorrEntUKF.rst", "_autosummary/gncpy/filters/max_corr_ent_upf/gncpy.filters.max_corr_ent_upf.MaxCorrEntUPF.rst", "_autosummary/gncpy/filters/mcmc_particle_filter_base/gncpy.filters.mcmc_particle_filter_base.MCMCParticleFilterBase.rst", "_autosummary/gncpy/filters/particle_filter/gncpy.filters.particle_filter.ParticleFilter.rst", "_autosummary/gncpy/filters/qkf_gaussian_scale_mixture_filter/gncpy.filters.qkf_gaussian_scale_mixture_filter.QKFGaussianScaleMixtureFilter.rst", "_autosummary/gncpy/filters/quadrature_kalman_filter/gncpy.filters.quadrature_kalman_filter.QuadratureKalmanFilter.rst", "_autosummary/gncpy/filters/sqkf_gaussian_scale_mixture_filter/gncpy.filters.sqkf_gaussian_scale_mixture_filter.SQKFGaussianScaleMixtureFilter.rst", "_autosummary/gncpy/filters/square_root_qkf/gncpy.filters.square_root_qkf.SquareRootQKF.rst", "_autosummary/gncpy/filters/students_t_filter/gncpy.filters.students_t_filter.StudentsTFilter.rst", "_autosummary/gncpy/filters/ukf_gaussian_scale_mixture_filter/gncpy.filters.ukf_gaussian_scale_mixture_filter.UKFGaussianScaleMixtureFilter.rst", "_autosummary/gncpy/filters/unscented_kalman_filter/gncpy.filters.unscented_kalman_filter.UnscentedKalmanFilter.rst", "_autosummary/gncpy/filters/unscented_particle_filter/gncpy.filters.unscented_particle_filter.UnscentedParticleFilter.rst", "_autosummary/gncpy/game_engine/base_game/gncpy.game_engine.base_game.Base2dParams.rst", "_autosummary/gncpy/game_engine/base_game/gncpy.game_engine.base_game.BaseGame.rst", "_autosummary/gncpy/game_engine/base_game/gncpy.game_engine.base_game.BaseGame2d.rst", "_autosummary/gncpy/game_engine/base_game/gncpy.game_engine.base_game.BaseParams.rst", "_autosummary/gncpy/game_engine/base_game/gncpy.game_engine.base_game.WindowParams.rst", "_autosummary/gncpy/game_engine/base_game/gncpy.game_engine.base_game.ndarray_representer.rst", "_autosummary/gncpy/game_engine/base_game/gncpy.game_engine.base_game.yaml.rst", "_autosummary/gncpy/game_engine/components/gncpy.game_engine.components.CBirth.rst", "_autosummary/gncpy/game_engine/components/gncpy.game_engine.components.CCapabilities.rst", "_autosummary/gncpy/game_engine/components/gncpy.game_engine.components.CCollision.rst", "_autosummary/gncpy/game_engine/components/gncpy.game_engine.components.CDynamics.rst", "_autosummary/gncpy/game_engine/components/gncpy.game_engine.components.CEvents.rst", "_autosummary/gncpy/game_engine/components/gncpy.game_engine.components.CHazard.rst", "_autosummary/gncpy/game_engine/components/gncpy.game_engine.components.CPriority.rst", "_autosummary/gncpy/game_engine/components/gncpy.game_engine.components.CShape.rst", "_autosummary/gncpy/game_engine/components/gncpy.game_engine.components.CTransform.rst", "_autosummary/gncpy/game_engine/components/gncpy.game_engine.components.library_asset_dir.rst", "_autosummary/gncpy/game_engine/entities/gncpy.game_engine.entities.Entity.rst", "_autosummary/gncpy/game_engine/entities/gncpy.game_engine.entities.EntityManager.rst", "_autosummary/gncpy/game_engine/gncpy.game_engine.base_game.rst", "_autosummary/gncpy/game_engine/gncpy.game_engine.components.rst", "_autosummary/gncpy/game_engine/gncpy.game_engine.entities.rst", "_autosummary/gncpy/game_engine/gncpy.game_engine.physics2d.rst", "_autosummary/gncpy/game_engine/gncpy.game_engine.rendering2d.rst", "_autosummary/gncpy/game_engine/physics2d/gncpy.game_engine.physics2d.Collision2dParams.rst", "_autosummary/gncpy/game_engine/physics2d/gncpy.game_engine.physics2d.Physics2dParams.rst", "_autosummary/gncpy/game_engine/physics2d/gncpy.game_engine.physics2d.check_collision2d.rst", "_autosummary/gncpy/game_engine/physics2d/gncpy.game_engine.physics2d.clamp_window_bounds2d.rst", "_autosummary/gncpy/game_engine/physics2d/gncpy.game_engine.physics2d.dist_to_pixels.rst", "_autosummary/gncpy/game_engine/physics2d/gncpy.game_engine.physics2d.pixels_to_dist.rst", "_autosummary/gncpy/game_engine/physics2d/gncpy.game_engine.physics2d.resolve_collision2d.rst", "_autosummary/gncpy/game_engine/rendering2d/gncpy.game_engine.rendering2d.Shape2dParams.rst", "_autosummary/gncpy/game_engine/rendering2d/gncpy.game_engine.rendering2d.get_drawable_entities.rst", "_autosummary/gncpy/game_engine/rendering2d/gncpy.game_engine.rendering2d.init_rendering_system.rst", "_autosummary/gncpy/game_engine/rendering2d/gncpy.game_engine.rendering2d.init_window.rst", "_autosummary/gncpy/game_engine/rendering2d/gncpy.game_engine.rendering2d.render.rst", "_autosummary/gncpy/game_engine/rendering2d/gncpy.game_engine.rendering2d.shutdown.rst", "_autosummary/gncpy/games/SimpleUAV2d/gncpy.games.SimpleUAV2d.BirthModelParams.rst", "_autosummary/gncpy/games/SimpleUAV2d/gncpy.games.SimpleUAV2d.ControlModelParams.rst", "_autosummary/gncpy/games/SimpleUAV2d/gncpy.games.SimpleUAV2d.DynamicsParams.rst", "_autosummary/gncpy/games/SimpleUAV2d/gncpy.games.SimpleUAV2d.EventType.rst", "_autosummary/gncpy/games/SimpleUAV2d/gncpy.games.SimpleUAV2d.HazardParams.rst", "_autosummary/gncpy/games/SimpleUAV2d/gncpy.games.SimpleUAV2d.ObstacleParams.rst", "_autosummary/gncpy/games/SimpleUAV2d/gncpy.games.SimpleUAV2d.Params.rst", "_autosummary/gncpy/games/SimpleUAV2d/gncpy.games.SimpleUAV2d.PlayerParams.rst", "_autosummary/gncpy/games/SimpleUAV2d/gncpy.games.SimpleUAV2d.ScoreParams.rst", "_autosummary/gncpy/games/SimpleUAV2d/gncpy.games.SimpleUAV2d.SimpleUAV2d.rst", "_autosummary/gncpy/games/SimpleUAV2d/gncpy.games.SimpleUAV2d.StateConstraintParams.rst", "_autosummary/gncpy/games/SimpleUAV2d/gncpy.games.SimpleUAV2d.TargetParams.rst", "_autosummary/gncpy/games/gncpy.games.SimpleUAV2d.rst", "_autosummary/gncpy/gncpy.control.rst", "_autosummary/gncpy/gncpy.coordinate_transforms.rst", "_autosummary/gncpy/gncpy.data_fusion.rst", "_autosummary/gncpy/gncpy.distributions.rst", "_autosummary/gncpy/gncpy.dynamics.rst", "_autosummary/gncpy/gncpy.errors.rst", "_autosummary/gncpy/gncpy.filters.rst", "_autosummary/gncpy/gncpy.game_engine.rst", "_autosummary/gncpy/gncpy.games.rst", "_autosummary/gncpy/gncpy.math.rst", "_autosummary/gncpy/gncpy.measurements.rst", "_autosummary/gncpy/gncpy.orbital_mechanics.rst", "_autosummary/gncpy/gncpy.planning.rst", "_autosummary/gncpy/gncpy.plotting.rst", "_autosummary/gncpy/gncpy.sampling.rst", "_autosummary/gncpy/gncpy.utilities.rst", "_autosummary/gncpy/gncpy.wgs84.rst", "_autosummary/gncpy/math/gncpy.math.epanechnikov_kernel.rst", "_autosummary/gncpy/math/gncpy.math.gamma_fnc.rst", "_autosummary/gncpy/math/gncpy.math.gaussian_kernel.rst", "_autosummary/gncpy/math/gncpy.math.get_elem_sym_fnc.rst", "_autosummary/gncpy/math/gncpy.math.get_hessian.rst", "_autosummary/gncpy/math/gncpy.math.get_input_jacobian.rst", "_autosummary/gncpy/math/gncpy.math.get_jacobian.rst", "_autosummary/gncpy/math/gncpy.math.get_state_jacobian.rst", "_autosummary/gncpy/math/gncpy.math.log_sum_exp.rst", "_autosummary/gncpy/math/gncpy.math.rk4.rst", "_autosummary/gncpy/math/gncpy.math.rk4_backward.rst", "_autosummary/gncpy/math/gncpy.math.weighted_sum_mat.rst", "_autosummary/gncpy/math/gncpy.math.weighted_sum_vec.rst", "_autosummary/gncpy/orbital_mechanics/gncpy.orbital_mechanics.correct_lon_ascend.rst", "_autosummary/gncpy/orbital_mechanics/gncpy.orbital_mechanics.ecc_anom_from_mean.rst", "_autosummary/gncpy/orbital_mechanics/gncpy.orbital_mechanics.ecef_from_orbit.rst", "_autosummary/gncpy/orbital_mechanics/gncpy.orbital_mechanics.true_anom_from_ecc.rst", "_autosummary/gncpy/planning/a_star/gncpy.planning.a_star.AStar.rst", "_autosummary/gncpy/planning/a_star/gncpy.planning.a_star.Node.rst", "_autosummary/gncpy/planning/gncpy.planning.a_star.rst", "_autosummary/gncpy/planning/gncpy.planning.reinforcement_learning.rst", "_autosummary/gncpy/planning/gncpy.planning.rrt_star.rst", "_autosummary/gncpy/planning/reinforcement_learning/envs/gncpy.planning.reinforcement_learning.envs.simple2d.rst", "_autosummary/gncpy/planning/reinforcement_learning/envs/simple2d/gncpy.planning.reinforcement_learning.envs.simple2d.simpleUAV2d.rst", "_autosummary/gncpy/planning/reinforcement_learning/envs/simple2d/simpleUAV2d/gncpy.planning.reinforcement_learning.envs.simple2d.simpleUAV2d.SimpleUAV2d.rst", "_autosummary/gncpy/planning/reinforcement_learning/envs/simple2d/simpleUAV2d/gncpy.planning.reinforcement_learning.envs.simple2d.simpleUAV2d.SimpleUAVHazards2d.rst", "_autosummary/gncpy/planning/reinforcement_learning/gncpy.planning.reinforcement_learning.envs.rst", "_autosummary/gncpy/planning/reinforcement_learning/gncpy.planning.reinforcement_learning.wrappers.rst", "_autosummary/gncpy/planning/reinforcement_learning/wrappers/gncpy.planning.reinforcement_learning.wrappers.BufferFames.rst", "_autosummary/gncpy/planning/reinforcement_learning/wrappers/gncpy.planning.reinforcement_learning.wrappers.GrayScaleObservation.rst", "_autosummary/gncpy/planning/reinforcement_learning/wrappers/gncpy.planning.reinforcement_learning.wrappers.MaxFrames.rst", "_autosummary/gncpy/planning/reinforcement_learning/wrappers/gncpy.planning.reinforcement_learning.wrappers.ResizeImage.rst", "_autosummary/gncpy/planning/reinforcement_learning/wrappers/gncpy.planning.reinforcement_learning.wrappers.SkipFrames.rst", "_autosummary/gncpy/planning/reinforcement_learning/wrappers/gncpy.planning.reinforcement_learning.wrappers.StackFrames.rst", "_autosummary/gncpy/planning/rrt_star/gncpy.planning.rrt_star.ExtendedLQRRRTStar.rst", "_autosummary/gncpy/planning/rrt_star/gncpy.planning.rrt_star.LQRRRTStar.rst", "_autosummary/gncpy/planning/rrt_star/gncpy.planning.rrt_star.Node.rst", "_autosummary/gncpy/plotting/gncpy.plotting.calc_error_ellipse.rst", "_autosummary/gncpy/plotting/gncpy.plotting.get_cmap.rst", "_autosummary/gncpy/plotting/gncpy.plotting.init_plotting_opts.rst", "_autosummary/gncpy/plotting/gncpy.plotting.set_title_label.rst", "_autosummary/gncpy/sampling/gncpy.sampling.MetropolisHastings.rst", "_autosummary/gncpy/utilities/gncpy.utilities.ClassPropertyDescriptor.rst", "_autosummary/gncpy/utilities/gncpy.utilities.ClassPropertyMetaClass.rst", "_autosummary/gncpy/utilities/gncpy.utilities.classproperty.rst", "_autosummary/gncpy/wgs84/gncpy.wgs84.calc_earth_rate.rst", "_autosummary/gncpy/wgs84/gncpy.wgs84.calc_ew_rad.rst", "_autosummary/gncpy/wgs84/gncpy.wgs84.calc_gravity.rst", "_autosummary/gncpy/wgs84/gncpy.wgs84.calc_ns_rad.rst", "_autosummary/gncpy/wgs84/gncpy.wgs84.calc_transport_rate.rst", "_autosummary/gncpy/wgs84/gncpy.wgs84.convert_msl_to_wgs.rst", "_autosummary/gncpy/wgs84/gncpy.wgs84.convert_wgs_to_msl.rst", "_autosummary/gncpy/wgs84/gncpy.wgs84.init_egm_lookup_table.rst", "api.rst", "cicd.rst", "index.rst", "license.rst", "toolchain.rst", "usage.rst", "usage/a_star.rst", "usage/control.rst", "usage/filters.rst", "usage/planning.rst", "usage/rrtstar.rst"], "titles": ["References", "gncpy", "ELQR", "elqr", "lqr", "LQR", "gncpy.coordinate_transforms.ecef_to_LLA", "gncpy.coordinate_transforms.ecef_to_NED", "gncpy.coordinate_transforms.lla_to_ECEF", "gncpy.coordinate_transforms.lla_to_NED", "gncpy.coordinate_transforms.ned_to_LLA", "gncpy.data_fusion.GeneralizedCovarianceIntersection", "Particle", "ParticleDistribution", "QuadraturePoints", "SigmaPoints", "SimpleParticleDistribution", "simple_multirotor", "AeroParams", "AircraftParams", "Effector", "Environment", "GeoParams", "MassParams", "MotorParams", "PropParams", "SimpleMultirotor", "Vehicle", "ClohessyWiltshireOrbit", "ClohessyWiltshireOrbit2d", "CoordinatedTurnKnown", "CoordinatedTurnUnknown", "CurvilinearMotion", "DoubleIntegrator", "DynamicsBase", "clohessy_wiltshire_orbit", "clohessy_wiltshire_orbit2d", "coordinated_turn_known", "coordinated_turn_unknown", "curvilinear_motion", "double_integrator", "dynamics_base", "irobot_create", "karlgaard_orbit", "linear_dynamics_base", "nonlinear_dynamics_base", "tschauner_hempel_orbit", "IRobotCreate", "KarlgaardOrbit", "LinearDynamicsBase", "NonlinearDynamicsBase", "TschaunerHempelOrbit", "aircraft", "basic", "gncpy.errors.ExtremeMeasurementNoiseError", "gncpy.errors.ParticleDepletionError", "gncpy.errors.ParticleEstimationDomainError", "BayesFilter", "BootstrapFilter", "EKFGaussianScaleMixtureFilter", "ExtendedKalmanFilter", "GCIFilter", "bayes_filter", "bootstrap_filter", "ekf_gaussian_scale_mixture_filter", "extended_kalman_filter", "gci_filter", "gsm_filter_base", "imm_gci_filter", "interacting_multiple_model", "kalman_filter", "kf_gaussian_scale_mixture_filter", "max_corr_ent_ukf", "max_corr_ent_upf", "mcmc_particle_filter_base", "particle_filter", "qkf_gaussian_scale_mixture_filter", "quadrature_kalman_filter", "sqkf_gaussian_scale_mixture_filter", "square_root_qkf", "students_t_filter", "ukf_gaussian_scale_mixture_filter", "unscented_kalman_filter", "unscented_particle_filter", "GSMFilterBase", "IMMGCIFilter", "InteractingMultipleModel", "KalmanFilter", "KFGaussianScaleMixtureFilter", "MaxCorrEntUKF", "MaxCorrEntUPF", "MCMCParticleFilterBase", "ParticleFilter", "QKFGaussianScaleMixtureFilter", "QuadratureKalmanFilter", "SQKFGaussianScaleMixtureFilter", "SquareRootQKF", "StudentsTFilter", "UKFGaussianScaleMixtureFilter", "UnscentedKalmanFilter", "UnscentedParticleFilter", "Base2dParams", "BaseGame", "BaseGame2d", "BaseParams", "WindowParams", "gncpy.game_engine.base_game.ndarray_representer", "gncpy.game_engine.base_game.yaml", "CBirth", "CCapabilities", "CCollision", "CDynamics", "CEvents", "CHazard", "CPriority", "CShape", "CTransform", "gncpy.game_engine.components.library_asset_dir", "Entity", "EntityManager", "base_game", "components", "entities", "physics2d", "rendering2d", "Collision2dParams", "Physics2dParams", "gncpy.game_engine.physics2d.check_collision2d", "gncpy.game_engine.physics2d.clamp_window_bounds2d", "gncpy.game_engine.physics2d.dist_to_pixels", "gncpy.game_engine.physics2d.pixels_to_dist", "gncpy.game_engine.physics2d.resolve_collision2d", "Shape2dParams", "gncpy.game_engine.rendering2d.get_drawable_entities", "gncpy.game_engine.rendering2d.init_rendering_system", "gncpy.game_engine.rendering2d.init_window", "gncpy.game_engine.rendering2d.render", "gncpy.game_engine.rendering2d.shutdown", "BirthModelParams", "ControlModelParams", "DynamicsParams", "EventType", "HazardParams", "ObstacleParams", "Params", "PlayerParams", "ScoreParams", "SimpleUAV2d", "StateConstraintParams", "TargetParams", "SimpleUAV2d", "control", "coordinate_transforms", "data_fusion", "distributions", "dynamics", "errors", "filters", "game_engine", "games", "math", "measurements", "orbital_mechanics", "planning", "plotting", "sampling", "utilities", "wgs84", "gncpy.math.epanechnikov_kernel", "gncpy.math.gamma_fnc", "gncpy.math.gaussian_kernel", "gncpy.math.get_elem_sym_fnc", "gncpy.math.get_hessian", "gncpy.math.get_input_jacobian", "gncpy.math.get_jacobian", "gncpy.math.get_state_jacobian", "gncpy.math.log_sum_exp", "gncpy.math.rk4", "gncpy.math.rk4_backward", "gncpy.math.weighted_sum_mat", "gncpy.math.weighted_sum_vec", "gncpy.orbital_mechanics.correct_lon_ascend", "gncpy.orbital_mechanics.ecc_anom_from_mean", "gncpy.orbital_mechanics.ecef_from_orbit", "gncpy.orbital_mechanics.true_anom_from_ecc", "AStar", "Node", "a_star", "reinforcement_learning", "rrt_star", "simple2d", "simpleUAV2d", "SimpleUAV2d", "SimpleUAVHazards2d", "envs", "wrappers", "BufferFames", "GrayScaleObservation", "MaxFrames", "ResizeImage", "SkipFrames", "StackFrames", "ExtendedLQRRRTStar", "LQRRRTStar", "Node", "gncpy.plotting.calc_error_ellipse", "gncpy.plotting.get_cmap", "gncpy.plotting.init_plotting_opts", "gncpy.plotting.set_title_label", "MetropolisHastings", "ClassPropertyDescriptor", "ClassPropertyMetaClass", "gncpy.utilities.classproperty", "gncpy.wgs84.calc_earth_rate", "gncpy.wgs84.calc_ew_rad", "gncpy.wgs84.calc_gravity", "gncpy.wgs84.calc_ns_rad", "gncpy.wgs84.calc_transport_rate", "gncpy.wgs84.convert_msl_to_wgs", "gncpy.wgs84.convert_wgs_to_msl", "gncpy.wgs84.init_egm_lookup_table", "API Reference", "CI/CD Pipeline", "Welcome to GNCPy\u2019s documentation!", "License", "Toolchain", "Usage", "A* Examples", "Control Examples", "Filter Examples", "Planning Examples", "RRT* Examples"], "terms": {"1": [0, 2, 5, 6, 7, 8, 9, 12, 14, 15, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 47, 48, 49, 50, 51, 58, 59, 60, 84, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 108, 113, 116, 138, 142, 146, 147, 169, 172, 173, 174, 175, 180, 183, 185, 192, 193, 203, 206, 207, 213, 215, 217, 227, 228, 229, 231], "ienkaran": 0, "arasaratnam": 0, "simon": 0, "haykin": 0, "squar": [0, 14, 15, 96, 185, 227], "root": [0, 14, 15, 96, 225], "quadratur": [0, 14, 15, 93, 94, 95, 96], "kalman": [0, 57, 60, 87, 89, 94, 96, 99, 226], "filter": [0, 12, 53, 54, 57, 58, 59, 60, 61, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 155, 223, 226], "ieee": 0, "t": [0, 2, 5, 34, 47, 48, 50, 51, 60, 89, 90, 91, 92, 94, 96, 97, 99, 100, 126, 173, 175, 192, 193, 222, 225, 228, 229], "ransact": 0, "": [0, 2, 5, 14, 26, 27, 28, 29, 30, 33, 50, 51, 59, 60, 84, 87, 88, 89, 90, 93, 94, 95, 96, 97, 98, 99, 100, 147, 192, 193, 196, 198, 201, 203, 211, 217, 222, 225, 229], "ignal": 0, "p": [0, 2, 5, 13, 90, 91, 92, 97, 100, 147, 203, 223, 228, 231], "rocess": 0, "56": 0, "6": [0, 28, 29, 228, 231], "2589": 0, "2593": 0, "jun": 0, "2008": 0, "doi": 0, "10": [0, 51, 89, 174, 182, 192, 203, 207, 227, 228, 229, 231], "1109": 0, "tsp": 0, "2007": 0, "914964": 0, "2": [0, 2, 5, 14, 15, 26, 27, 32, 47, 51, 89, 90, 91, 92, 94, 97, 99, 100, 116, 127, 131, 147, 185, 186, 192, 193, 203, 205, 227, 228, 229, 231], "robert": 0, "j": [0, 2, 5], "elliott": 0, "discret": [0, 2, 5, 28, 29, 30, 33, 34, 49, 60, 87, 89, 94, 96, 97, 99, 203], "time": [0, 2, 5, 26, 27, 28, 29, 30, 31, 32, 33, 34, 47, 48, 49, 50, 51, 58, 60, 87, 89, 91, 92, 97, 99, 101, 102, 103, 113, 138, 146, 147, 149, 181, 192, 193, 203, 207, 228, 229], "nonlinear": 0, "algorithm": [0, 2, 87, 90, 97, 100, 151, 156, 163, 165, 185, 187, 189, 192, 203, 209, 223, 227, 228, 230, 231], "us": [0, 2, 5, 12, 14, 15, 26, 28, 29, 30, 31, 32, 33, 34, 47, 48, 49, 50, 51, 53, 54, 58, 59, 60, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 105, 107, 108, 110, 115, 118, 121, 125, 126, 129, 130, 132, 135, 138, 139, 140, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 154, 160, 172, 173, 174, 175, 185, 192, 193, 195, 196, 197, 198, 199, 201, 203, 207, 208, 222, 223, 224, 225, 226, 227, 228, 229, 231], "gauss": [0, 14, 94], "hermit": [0, 14, 94], "proceed": 0, "95": [0, 228, 231], "5": [0, 60, 87, 185, 228, 229, 231], "953": 0, "977": 0, "mai": [0, 26, 54, 57, 58, 59, 84, 85, 86, 88, 93, 95, 98, 102, 103, 104, 126, 145, 151, 222, 225], "jproc": 0, "894705": 0, "3": [0, 6, 7, 8, 9, 27, 30, 31, 51, 97, 103, 182, 183, 185, 199, 203, 213, 215, 217, 225, 228, 229, 231], "samuel": 0, "blackman": 0, "popoli": 0, "design": [0, 53, 222], "analysi": 0, "modern": 0, "track": [0, 5, 27, 99, 207], "system": [0, 2, 5, 32, 34, 87, 97, 101, 102, 103, 126, 134, 138, 144, 146, 147, 222, 225], "artech": 0, "hous": 0, "1999": 0, "isbn": 0, "1580530060": 0, "4": [0, 2, 29, 33, 172, 185, 203, 227, 228, 229, 231], "wh": 0, "clohessi": [0, 28, 29], "r": [0, 2, 5, 90, 100, 228, 229, 231], "wiltshir": [0, 28, 29], "termin": [0, 222, 225], "guidanc": [0, 223], "satellit": 0, "rendezv": 0, "journal": 0, "aerospac": 0, "scienc": 0, "27": [0, 84, 93, 95, 98], "9": [0, 117, 205, 225, 227, 228, 229, 231], "653": 0, "658": 0, "1960": 0, "john": 0, "l": 0, "crassidi": 0, "junkin": 0, "optim": [0, 2, 11, 61, 85], "estim": [0, 54, 56, 58, 59, 60, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 223], "dynam": [0, 2, 5, 17, 27, 30, 34, 47, 48, 49, 50, 51, 53, 60, 85, 86, 87, 89, 91, 92, 94, 96, 97, 99, 102, 103, 111, 139, 140, 145, 147, 226, 229, 230], "chapman": 0, "hall": 0, "crc": 0, "2011": 0, "uri": 0, "desai": 0, "A": [0, 2, 5, 31, 32, 47, 60, 87, 89, 90, 91, 92, 94, 96, 97, 99, 100, 103, 147, 185, 186, 187, 222, 223, 224, 226, 229, 230], "compar": 0, "studi": 0, "model": [0, 2, 5, 17, 21, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 47, 48, 49, 50, 51, 52, 53, 57, 59, 60, 61, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 108, 138, 139, 140, 145, 146, 147, 148, 151, 155, 167, 173, 175, 226, 228], "rel": [0, 21, 26, 27, 100, 149], "motion": [0, 28, 29, 32, 185, 228], "phd": 0, "thesi": 0, "exa": 0, "m": [0, 6, 7, 9, 10, 14, 26, 27, 51, 97, 179, 217, 229], "univers": [0, 223], "2013": 0, "7": [0, 90, 174, 182, 228, 231], "ying": 0, "fan": 0, "yonggang": 0, "zhang": 0, "guoq": 0, "wang": 0, "xiaoyu": 0, "ning": 0, "li": 0, "maximum": [0, 2, 5, 89, 90, 101, 139, 147, 148, 182, 185, 192, 203], "correntropi": [0, 89, 90], "base": [0, 2, 5, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 47, 48, 49, 50, 51, 57, 58, 59, 60, 61, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 118, 119, 120, 125, 126, 132, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 185, 186, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 209, 210, 211, 222], "unscent": [0, 89, 90, 99, 100], "particl": [0, 13, 16, 55, 56, 58, 59, 84, 88, 90, 91, 92, 93, 95, 98, 100], "cooper": 0, "navig": [0, 223], "heavi": [0, 97], "tail": [0, 97], "measur": [0, 54, 57, 58, 59, 60, 61, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 205, 207, 229], "nois": [0, 28, 29, 30, 33, 49, 54, 59, 60, 84, 87, 88, 89, 90, 93, 94, 95, 96, 97, 98, 99, 100, 229], "sensor": 0, "18": [0, 229], "3183": 0, "2018": 0, "8": [0, 14, 185, 227, 228, 231], "gene": 0, "h": [0, 60, 89, 91, 92, 94, 96, 99, 103, 110, 115, 177, 178, 199, 227], "golub": 0, "welsch": 0, "calcul": [0, 2, 5, 15, 27, 28, 29, 33, 47, 48, 49, 50, 51, 60, 87, 94, 96, 97, 99, 102, 103, 147, 162, 172, 173, 174, 175, 176, 179, 180, 182, 183, 184, 185, 205, 213, 214, 215, 216, 217, 228], "rule": 0, "athemat": 0, "c": [0, 2, 5, 33, 199, 223, 224, 228], "omput": 0, "23": [0, 51], "106": 0, "221": 0, "1969": 0, "1090": 0, "s0025": 0, "5718": 0, "69": [0, 229], "99647": 0, "wayn": 0, "e": [0, 102, 103, 119, 129, 130, 192, 193, 222, 225], "hoover": 0, "confid": 0, "circl": [0, 228], "ellips": [0, 205], "technic": 0, "report": [0, 223, 225], "nation": 0, "ocean": 0, "atmospher": [0, 27], "administr": 0, "1984": 0, "bowen": 0, "hou": 0, "zhangm": 0, "he": 0, "dong": 0, "haiyin": 0, "zhou": 0, "jiongqi": 0, "ballist": 0, "missil": 0, "sin": [0, 32, 229], "cn": 0, "deepli": 0, "integr": [0, 31, 32, 33, 47, 48, 50, 51, 53, 60, 89, 94, 96, 99, 139, 177, 178, 222], "mode": [0, 102, 103, 135, 136, 147, 192], "1724": 0, "11": [0, 14], "peter": 0, "\u00e4": 0, "ckel": 0, "note": [0, 2, 5, 14, 15, 28, 29, 30, 31, 32, 33, 47, 48, 49, 50, 51, 59, 60, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 119, 147, 169, 173, 175, 185, 207, 223, 228], "multivari": 0, "work": [0, 26, 60, 87, 89, 90, 91, 92, 94, 96, 97, 99, 100, 109, 199], "paper": 0, "2005": 0, "url": [0, 223], "http": [0, 223], "202": 0, "31": 0, "197": 0, "199": 0, "mhlee": 0, "old": [0, 102, 196, 198, 201], "apr": 0, "28": [0, 59, 84, 88, 93, 95, 98], "2014": 0, "y": [0, 14, 15, 16, 27, 30, 31, 32, 51, 60, 87, 89, 90, 91, 92, 94, 96, 97, 99, 100, 103, 126, 138, 139, 142, 143, 147, 148, 149, 185, 203, 207, 208, 227, 228, 229, 231], "ji": 0, "anoteonmultivariategausshermitequadratur": 0, "pdf": [0, 16, 90, 91, 92, 100], "12": [0, 48, 207], "christoph": 0, "d": [0, 2, 5, 90, 91, 92, 97, 100, 223, 224], "karlgaard": 0, "frederick": 0, "lutz": 0, "second": [0, 26, 27, 48, 112, 127, 131, 185, 222], "order": [0, 26, 30, 31, 32, 34, 47, 48, 49, 50, 51, 57, 61, 103, 115, 126, 136, 147, 149, 173, 175, 192, 193, 211], "equat": [0, 2, 5, 28, 29, 33, 34, 49, 50, 60, 87, 97, 111, 203], "control": [0, 2, 5, 28, 29, 30, 31, 32, 33, 34, 47, 48, 49, 50, 51, 60, 111, 139, 140, 146, 147, 148, 173, 175, 203, 204, 222, 223, 226, 231], "26": [0, 100, 227], "41": 0, "49": 0, "2003": 0, "13": [0, 51], "benjamin": 0, "o": [0, 207, 228], "lang": 0, "g": [0, 2, 5, 34, 50, 87, 97, 192, 193, 223, 225, 228, 229], "smith": 0, "The": [0, 2, 5, 12, 14, 15, 16, 26, 28, 29, 30, 31, 32, 33, 34, 47, 48, 49, 50, 51, 57, 58, 59, 60, 61, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 109, 119, 125, 126, 129, 130, 132, 138, 139, 140, 142, 143, 144, 145, 146, 147, 148, 149, 172, 174, 175, 182, 185, 192, 193, 196, 197, 198, 199, 201, 205, 207, 208, 222, 224, 225, 227, 228, 229, 230, 231], "applic": [0, 2, 5], "floquet": 0, "theori": 0, "comput": [0, 225], "small": 0, "orbit": [0, 28, 29, 48, 51, 162, 183], "perturb": 0, "over": [0, 2, 5, 47, 48, 50, 51, 87, 97, 102, 103], "long": 0, "interv": 0, "tschaunerhempel": 0, "stanford": 0, "univ": 0, "ca": 0, "dept": 0, "Of": 0, "aeronaut": 0, "And": 0, "astronaut": 0, "1965": 0, "14": [0, 30, 31, 32, 51], "x": [0, 2, 5, 6, 7, 8, 9, 12, 13, 14, 15, 16, 27, 28, 29, 30, 31, 32, 33, 34, 47, 48, 49, 50, 51, 58, 59, 60, 84, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 103, 108, 116, 126, 138, 139, 142, 143, 147, 148, 149, 168, 170, 172, 173, 174, 175, 177, 178, 179, 180, 183, 185, 199, 203, 204, 205, 207, 208, 213, 215, 217, 227, 228, 229, 231], "rong": 0, "vesselin": 0, "jilkov": 0, "survei": 0, "maneuv": 0, "target": [0, 51, 109, 144, 145, 146, 147, 149, 192], "In": [0, 15, 89, 99], "signal": [0, 2, 5, 31, 175], "data": [0, 16, 90, 91, 92, 100, 106, 229], "process": [0, 14, 15, 28, 29, 30, 31, 33, 49, 59, 84, 87, 88, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 207, 228, 229], "2000": [0, 228], "volum": [0, 225], "4048": 0, "212": 0, "235": 0, "spie": 0, "15": [0, 97, 227, 228], "zhuowei": 0, "liu": 0, "shuxin": 0, "chen": 0, "hao": 0, "wu": 0, "renk": 0, "lin": 0, "student": [0, 97], "mixtur": [0, 59, 84, 88, 93, 95, 98], "probabl": [0, 16, 60, 87, 90, 91, 92, 99, 100, 113, 138, 142], "hypothesi": 0, "densiti": [0, 27], "multi": [0, 14, 17, 26, 54, 97], "outlier": 0, "1095": 0, "16": [0, 51], "moham": 0, "okasha": 0, "brett": 0, "newman": 0, "proxim": 0, "oper": [0, 1, 102, 103, 222], "tschauner": [0, 51], "hempel": [0, 51], "60": [0, 192, 193, 227, 229], "109": 0, "136": 0, "17": [0, 14], "william": 0, "press": 0, "saul": 0, "teukolski": 0, "vetterl": 0, "brian": 0, "flanneri": 0, "numer": [0, 31, 32, 48, 57, 93, 172, 173, 174, 175], "recip": 0, "art": 0, "scientif": 0, "cambridg": 0, "cup": 0, "jan": 0, "1992": 0, "0521431085": 0, "1017": 0, "s0269964800000565": 0, "alex": 0, "quinchia": 0, "gianluca": 0, "falco": 0, "emanuela": 0, "falletti": 0, "fabio": 0, "dovi": 0, "carl": 0, "ferrer": 0, "comparison": 0, "between": [0, 32, 47, 59, 84, 87, 88, 93, 95, 98, 102, 103, 127, 131, 147, 192, 193], "differ": [0, 22, 28, 29, 30, 33, 50, 59, 84, 85, 86, 87, 88, 93, 95, 98, 141, 172, 173, 174, 175, 222, 226, 230], "error": [0, 2, 60, 87, 94, 96, 99, 205], "mem": 0, "appli": [0, 27, 34, 103, 129, 130, 147, 185, 196, 197, 198, 201], "gp": 0, "INS": 0, "9549": 0, "9588": 0, "19": [0, 97], "michael": 0, "roth": 0, "emr": 0, "\u00f6": 0, "zkan": 0, "fredrik": 0, "gustafsson": 0, "intern": [0, 21, 26, 27, 57, 61, 90, 100, 192, 193], "confer": 0, "acoust": 0, "speech": 0, "5770": 0, "5774": 0, "20": [0, 15, 227, 228], "simo": 0, "rkk": 0, "jouni": 0, "hartikainen": 0, "lennart": 0, "svensson": 0, "sandblom": 0, "On": 0, "relat": [0, 16, 90, 91, 92, 100, 115, 116, 167, 188], "gaussian": [0, 15, 59, 60, 84, 87, 88, 89, 90, 93, 94, 95, 96, 98, 99, 108, 170], "sigma": [0, 12, 15, 89, 97, 99, 205, 207], "point": [0, 2, 12, 14, 15, 89, 90, 91, 92, 93, 94, 95, 96, 99, 100, 129, 130, 170, 174], "method": [0, 2, 5, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 47, 48, 49, 50, 51, 57, 58, 59, 60, 61, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 118, 119, 125, 126, 132, 138, 139, 140, 142, 143, 144, 145, 146, 147, 148, 149, 172, 173, 174, 175, 185, 186, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 209, 210, 211], "advanc": 0, "inform": [0, 59, 84, 88, 93, 95, 98, 192, 193, 225], "fusion": 0, "2015": 0, "21": [0, 92], "dan": 0, "state": [0, 2, 5, 16, 21, 26, 27, 28, 29, 30, 31, 32, 33, 34, 47, 48, 49, 50, 51, 57, 58, 59, 60, 61, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 108, 111, 138, 140, 147, 148, 168, 173, 175, 177, 178, 185, 192, 193, 203, 204, 207, 222, 228, 229, 231], "infin": [0, 101], "approach": 0, "wilei": 0, "son": 0, "2006": 0, "22": 0, "ond": 0, "\u0159": 0, "ej": 0, "straka": 0, "jind": 0, "ich": 0, "dun": 0, "\u00ed": 0, "k": [0, 5, 28, 29, 33, 34, 49, 60, 87, 89, 91, 92, 94, 96, 97, 99, 228, 229], "stochast": 0, "2017": 0, "20th": 0, "zu": 0, "einem": 0, "elliptisch": 0, "bahn": 0, "umlaufenden": 0, "ziel": 0, "astronautica": 0, "acta": 0, "104": 0, "24": [0, 2, 47, 227], "jur": 0, "van": 0, "den": 0, "berg": 0, "extend": [0, 2, 26, 53, 60, 84, 102, 103, 226], "lqr": [0, 2, 203, 226, 230], "local": [0, 26, 51, 60, 208, 222, 225], "feedback": [0, 5], "non": [0, 2, 5, 31, 48, 50, 51, 60, 89, 91, 92, 94, 96, 99, 192, 193, 226, 230], "linear": [0, 2, 5, 30, 31, 32, 48, 49, 50, 51, 60, 89, 91, 92, 94, 96, 99, 226, 230], "quadrat": [0, 2, 5, 226, 231], "cost": [0, 2, 5, 93, 185, 186, 204, 227, 228, 231], "robot": [0, 47, 228, 231], "research": [0, 223], "page": [0, 222, 223, 225, 230], "39": 0, "springer": 0, "2016": 0, "25": [0, 100, 229], "rudolph": 0, "der": 0, "merw": 0, "arnaud": 0, "doucet": 0, "nando": 0, "de": 0, "freita": 0, "eric": 0, "wan": 0, "u": [0, 2, 5, 28, 29, 30, 31, 32, 33, 34, 47, 48, 49, 50, 51, 60, 87, 97, 173, 175, 204, 228], "nscent": 0, "articl": 0, "f": [0, 2, 5, 28, 29, 34, 50, 58, 59, 60, 84, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 172, 173, 174, 175, 177, 178], "ilter": 0, "cu": 0, "infeng": 0, "tr": 0, "380": 0, "neural": 0, "584": 0, "590": 0, "2001": 0, "jordi": 0, "vila": 0, "vall": 0, "pau": 0, "closa": 0, "fern": 0, "\u00e1": 0, "ndez": 0, "prade": 0, "juan": 0, "fernandez": 0, "rubio": 0, "bayesian": [0, 57], "scale": [0, 14, 15, 59, 84, 88, 93, 95, 97, 98, 108, 115, 138, 146, 197, 207], "context": 0, "2012": 0, "european": 0, "eusipco": 0, "529": 0, "533": 0, "space": [0, 2, 5, 147, 173, 175, 192, 193, 196, 197, 198, 199, 200, 201, 203], "symmetr": 0, "\u03b1": 0, "stabl": 0, "19th": 0, "674": 0, "678": 0, "29": [0, 99, 229, 231], "adapt": 0, "commun": 0, "symposium": 0, "cat": 0, "No": 0, "00ex373": 0, "153": 0, "158": 0, "packag": [1, 26, 59, 84, 85, 86, 88, 93, 95, 98, 102, 103, 117, 154, 221, 222, 223, 225, 226], "gnc": [1, 223], "modul": [1, 52, 53, 120, 121, 151, 155, 157, 158, 159, 163, 188, 190, 194, 223, 226], "class": [2, 3, 4, 5, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 125, 126, 132, 133, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 154, 165, 166, 185, 186, 187, 189, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 209, 210, 211, 227], "max_it": [2, 182, 203, 231], "1000": [2, 5, 182, 228, 229], "0": [2, 5, 12, 15, 30, 32, 47, 51, 59, 84, 87, 88, 89, 93, 95, 97, 98, 99, 102, 103, 113, 115, 132, 138, 142, 146, 149, 172, 192, 193, 206, 227, 228, 229, 231], "tol": [2, 182, 231], "0001": [2, 231], "kwarg": [2, 13, 14, 15, 16, 26, 28, 29, 30, 31, 32, 33, 34, 47, 48, 49, 50, 51, 57, 58, 59, 60, 61, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 103, 118, 147, 173, 175, 177, 178, 193, 197, 199, 200, 202, 209, 211], "sourc": [2, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 47, 48, 49, 50, 51, 54, 55, 56, 57, 58, 59, 60, 61, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 118, 119, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220], "implement": [2, 5, 14, 15, 16, 17, 26, 27, 28, 29, 30, 31, 32, 33, 34, 47, 48, 49, 50, 51, 57, 58, 59, 60, 61, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 111, 150, 151, 152, 165, 168, 169, 170, 177, 178, 185, 187, 189, 190, 191, 195, 196, 197, 198, 201, 203, 209], "an": [2, 5, 6, 7, 20, 21, 26, 27, 28, 29, 31, 32, 33, 47, 51, 53, 56, 58, 59, 60, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 103, 108, 109, 111, 112, 113, 114, 115, 118, 119, 125, 143, 147, 185, 186, 192, 193, 196, 197, 198, 199, 200, 201, 203, 204, 205, 224, 225], "regul": [2, 5], "thi": [2, 5, 12, 14, 15, 21, 26, 27, 28, 29, 30, 31, 32, 33, 34, 47, 48, 49, 50, 51, 54, 57, 58, 59, 60, 61, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 105, 115, 118, 119, 125, 126, 131, 132, 138, 139, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 169, 185, 186, 191, 192, 193, 196, 197, 198, 199, 201, 205, 207, 208, 222, 223, 224, 225, 226, 227, 228, 229, 231], "i": [2, 5, 12, 13, 14, 15, 16, 22, 23, 24, 26, 28, 29, 30, 31, 32, 33, 34, 47, 48, 49, 50, 51, 54, 57, 58, 59, 60, 61, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 109, 112, 118, 119, 126, 129, 130, 135, 136, 138, 144, 145, 147, 149, 172, 173, 174, 175, 182, 185, 192, 193, 197, 199, 207, 208, 221, 222, 224, 225, 227, 228, 231], "number": [2, 5, 13, 14, 15, 24, 27, 58, 59, 84, 88, 90, 91, 92, 93, 94, 95, 96, 98, 100, 102, 103, 115, 118, 169, 182, 192, 193, 199, 200, 203, 205, 206, 207, 225, 227], "iter": [2, 5, 28, 29, 33, 103, 147, 182, 192, 193, 203, 228, 231], "try": 2, "converg": [2, 182], "type": [2, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 47, 48, 49, 50, 51, 57, 58, 59, 60, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 118, 119, 125, 126, 127, 129, 130, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 168, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 192, 193, 203, 204, 207, 208, 211, 213, 214, 215, 216, 217, 225], "int": [2, 5, 14, 15, 16, 59, 84, 88, 90, 91, 92, 93, 95, 97, 98, 100, 102, 103, 105, 115, 118, 125, 126, 128, 132, 135, 136, 147, 149, 169, 182, 185, 186, 192, 193, 199, 200, 203, 206, 207, 208], "toler": [2, 5, 182], "float": [2, 5, 8, 9, 10, 13, 15, 18, 21, 22, 23, 26, 27, 28, 29, 30, 31, 32, 33, 34, 47, 48, 49, 50, 51, 58, 59, 60, 84, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 113, 114, 126, 129, 130, 138, 139, 142, 143, 146, 147, 149, 168, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 192, 193, 203, 204, 205, 213, 214, 215, 216, 217, 228], "ct_come_mat": 2, "come": [2, 147], "matric": [2, 5, 31, 32, 87, 97, 99, 179], "per": [2, 5, 14, 59, 60, 84, 88, 89, 93, 94, 95, 96, 98, 99, 103, 116, 119, 129, 130, 173, 175, 185], "step": [2, 5, 20, 21, 27, 28, 29, 33, 49, 57, 58, 59, 60, 61, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 126, 138, 147, 172, 174, 177, 178, 192, 193, 196, 197, 198, 199, 200, 201, 222], "horizon": [2, 5, 226], "nh": [2, 5], "n": [2, 5, 12, 13, 14, 15, 28, 29, 30, 31, 32, 33, 34, 47, 48, 49, 50, 51, 58, 59, 60, 84, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 108, 147, 172, 173, 174, 175, 179, 180, 185, 203, 204, 206, 207, 223], "numpi": [2, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 20, 21, 26, 27, 28, 29, 30, 31, 32, 33, 34, 47, 48, 49, 50, 51, 58, 59, 60, 84, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 108, 111, 116, 126, 129, 130, 136, 138, 147, 148, 168, 172, 173, 174, 175, 177, 178, 179, 180, 183, 185, 186, 192, 193, 203, 204, 205, 207, 213, 215, 217, 227, 228, 229, 231], "arrai": [2, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 20, 21, 26, 27, 28, 29, 30, 31, 32, 33, 34, 47, 48, 49, 50, 51, 58, 59, 60, 84, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 108, 111, 116, 126, 129, 130, 136, 138, 147, 148, 168, 172, 173, 174, 175, 177, 178, 179, 180, 183, 185, 186, 192, 193, 203, 204, 205, 207, 213, 215, 217, 227, 228, 229, 231], "ct_come_vec": 2, "vector": [2, 5, 14, 15, 16, 21, 26, 27, 28, 29, 30, 31, 32, 33, 34, 47, 48, 49, 50, 51, 90, 91, 92, 100, 111, 147, 180, 192, 193, 203, 204, 207, 215, 229], "use_custom_cost": 2, "flag": [2, 5, 14, 15, 27, 31, 32, 57, 60, 84, 87, 89, 90, 91, 92, 94, 96, 97, 99, 100, 102, 103, 108, 118, 127, 128, 138, 147, 185, 192, 193, 197, 208], "indic": [2, 5, 14, 15, 24, 26, 27, 31, 32, 57, 59, 60, 84, 88, 90, 91, 92, 93, 95, 97, 98, 100, 102, 103, 108, 111, 118, 127, 138, 147, 185, 186, 192, 193, 197, 203, 207, 208], "custom": [2, 103, 104, 147, 156, 185, 207], "function": [2, 5, 14, 15, 16, 26, 28, 29, 32, 33, 34, 47, 48, 49, 50, 51, 57, 58, 59, 60, 61, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 119, 120, 123, 124, 147, 152, 153, 155, 158, 160, 162, 164, 166, 167, 169, 172, 173, 174, 175, 176, 177, 178, 185, 188, 192, 193, 196, 198, 200, 201, 203, 206, 227, 228, 231], "should": [2, 5, 15, 26, 30, 31, 32, 34, 47, 48, 49, 50, 51, 57, 60, 61, 84, 90, 91, 92, 93, 100, 102, 103, 107, 108, 118, 119, 131, 138, 147, 185, 192, 193, 197, 208, 225], "bool": [2, 5, 14, 15, 27, 31, 32, 57, 60, 84, 87, 89, 90, 91, 92, 94, 96, 97, 99, 100, 102, 103, 108, 118, 127, 128, 138, 147, 185, 192, 193, 197, 208], "gif_frame_skip": 2, "frame": [2, 6, 7, 26, 27, 51, 102, 103, 126, 136, 147, 185, 196, 198, 200, 201, 215, 217], "skip": [2, 200, 207, 225], "when": [2, 5, 14, 15, 26, 54, 55, 56, 57, 59, 61, 84, 88, 93, 95, 98, 102, 103, 107, 147, 149, 174, 185, 203, 222, 225, 228], "save": [2, 57, 58, 59, 60, 61, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 147, 185, 207, 229], "gif": [2, 185], "set": [2, 5, 13, 14, 15, 26, 27, 31, 47, 48, 49, 50, 51, 57, 59, 60, 61, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 139, 144, 147, 185, 186, 192, 193, 207, 208, 225, 227, 228, 229], "take": [2, 5, 50, 57, 59, 84, 87, 88, 89, 93, 94, 95, 96, 97, 98, 99, 102, 103, 147, 177, 178, 192, 193, 198, 201, 203], "everi": [2, 5, 59, 84, 88, 90, 93, 95, 98, 100, 103, 138, 147, 222], "__init__": [2, 5, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 47, 48, 49, 50, 51, 57, 58, 59, 60, 61, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 118, 119, 125, 126, 132, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 185, 186, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 209, 210, 211], "initi": [2, 5, 14, 15, 21, 26, 27, 28, 29, 31, 32, 33, 47, 57, 58, 59, 60, 61, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 108, 109, 111, 113, 114, 115, 118, 134, 135, 137, 147, 185, 186, 192, 193, 199, 200, 204, 225, 231], "object": [2, 5, 12, 13, 14, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 47, 51, 53, 57, 58, 59, 60, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 118, 119, 125, 126, 132, 135, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 148, 149, 185, 186, 192, 193, 197, 199, 200, 203, 204, 208, 209, 210, 228, 229, 231], "paramet": [2, 5, 6, 7, 8, 9, 10, 13, 14, 15, 16, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 47, 48, 49, 50, 51, 58, 59, 60, 84, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 111, 113, 114, 115, 118, 119, 125, 126, 127, 128, 129, 130, 131, 132, 133, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 148, 149, 168, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 192, 193, 196, 197, 198, 199, 200, 201, 204, 205, 206, 207, 208, 213, 214, 215, 216, 217], "option": [2, 5, 12, 14, 15, 16, 26, 28, 29, 30, 31, 32, 33, 34, 47, 48, 49, 50, 51, 58, 59, 60, 84, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 108, 115, 118, 119, 129, 130, 132, 138, 139, 140, 146, 147, 148, 172, 173, 174, 175, 182, 185, 192, 193, 197, 199, 207, 208, 222, 225], "default": [2, 5, 14, 15, 16, 26, 28, 29, 30, 31, 32, 33, 34, 47, 48, 49, 50, 51, 57, 58, 59, 60, 84, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 119, 129, 130, 147, 172, 174, 175, 182, 185, 191, 192, 193, 197, 199, 207, 208, 225], "1e3": 2, "1e": [2, 5, 174, 182, 231], "dict": [2, 14, 15, 16, 26, 31, 32, 34, 47, 50, 58, 59, 60, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 108, 112, 113, 118, 138, 140, 147, 173, 175, 185, 192, 193, 196, 197, 198, 199, 200, 201, 207, 208, 231], "addit": [2, 5, 14, 15, 16, 26, 28, 29, 30, 31, 32, 33, 34, 47, 48, 49, 50, 51, 58, 59, 60, 84, 88, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 108, 111, 118, 145, 146, 147, 172, 173, 174, 175, 185, 192, 193, 222, 228], "argument": [2, 5, 14, 15, 26, 28, 29, 30, 31, 32, 33, 34, 47, 48, 49, 50, 51, 57, 58, 59, 60, 61, 84, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 111, 118, 147, 172, 173, 175, 177, 178, 183, 206, 225], "attribut": [2, 5, 12, 13, 14, 15, 16, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 47, 48, 49, 50, 51, 59, 60, 61, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 103, 104, 108, 109, 110, 111, 112, 113, 114, 115, 116, 118, 120, 121, 126, 141, 147, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203], "backward_pass": [2, 5], "itr": [2, 5, 228, 231], "num_timestep": [2, 5], "traj": [2, 5], "state_arg": [2, 5, 28, 29, 30, 31, 32, 33, 34, 47, 48, 49, 50, 51, 111, 147, 228, 229, 231], "ctrl_arg": [2, 5, 28, 29, 30, 31, 32, 33, 34, 47, 48, 49, 50, 51, 111, 147], "cost_arg": [2, 5, 228, 231], "time_vec": [2, 5, 207], "inv_state_arg": [2, 5, 228], "inv_ctrl_arg": [2, 5], "backward": [2, 5, 178, 191], "pass": [2, 5, 28, 29, 33, 47, 48, 49, 50, 51, 57, 60, 61, 89, 90, 91, 92, 94, 96, 99, 100, 118, 126, 173, 175, 192, 193, 207, 225], "finit": [2, 5, 226], "case": [2, 5, 15, 26, 29, 54, 58, 60, 87, 89, 90, 91, 92, 94, 96, 97, 99, 100, 102, 103, 192, 193, 222, 228], "total": [2, 5, 14, 24, 147, 185], "timestep": [2, 5, 26, 28, 29, 30, 31, 32, 33, 34, 47, 48, 49, 50, 51, 57, 58, 59, 60, 61, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 113, 116, 119, 126, 142, 147, 173, 175, 228], "trajectori": [2, 5, 228, 231], "tupl": [2, 5, 26, 28, 29, 30, 31, 32, 33, 34, 47, 48, 49, 50, 51, 60, 87, 89, 90, 91, 92, 94, 96, 97, 99, 103, 111, 112, 115, 132, 147, 172, 173, 174, 175, 196, 197, 198, 199, 200, 201], "extra": [2, 5, 60, 89, 91, 92, 99, 102, 103, 112, 138, 140, 147, 192, 193], "matrix": [2, 5, 14, 15, 23, 26, 28, 29, 30, 31, 32, 33, 34, 47, 48, 49, 50, 51, 60, 87, 89, 90, 91, 92, 93, 94, 96, 97, 99, 100, 173, 175, 205], "Not": [2, 5, 58, 192, 193], "invers": [2, 5, 31, 57], "return": [2, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 20, 26, 27, 28, 29, 30, 31, 32, 33, 34, 47, 48, 49, 50, 51, 57, 58, 59, 60, 61, 84, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 108, 118, 119, 127, 128, 129, 130, 133, 134, 135, 136, 147, 168, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 192, 193, 196, 197, 198, 199, 200, 201, 203, 205, 206, 207, 208, 211, 213, 214, 215, 216, 217, 227, 228, 229, 231], "calculate_control": [2, 5, 228], "tt": [2, 5, 228, 231], "cur_stat": [2, 5, 59, 60, 61, 84, 87, 88, 89, 93, 94, 95, 96, 97, 98, 99, 228], "end_stat": [2, 5, 228, 231], "none": [2, 5, 11, 12, 13, 14, 15, 26, 28, 29, 30, 31, 32, 33, 34, 47, 48, 49, 50, 51, 58, 59, 60, 61, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 108, 109, 110, 111, 113, 114, 115, 119, 129, 130, 147, 148, 175, 185, 192, 193, 196, 197, 198, 199, 200, 201, 203, 207, 208, 210], "provide_detail": [2, 5, 228, 231], "fals": [2, 5, 14, 15, 31, 32, 47, 48, 50, 51, 84, 87, 89, 91, 94, 96, 97, 99, 102, 103, 185, 192, 193, 208], "disp": [2, 231], "true": [2, 51, 57, 60, 90, 91, 92, 97, 100, 102, 103, 108, 118, 147, 184, 185, 192, 193, 197, 207, 227, 228, 229, 231], "show_anim": [2, 185, 227, 228, 231], "save_anim": [2, 185, 227, 228, 231], "plt_opt": [2, 185, 228, 229], "ttl": [2, 14, 15, 185, 208, 228, 229, 231], "fig": [2, 14, 15, 16, 59, 84, 88, 93, 95, 98, 185, 192, 208, 227, 228, 229, 231], "plt_ind": [2, 228, 231], "ax_num": [2, 208], "current": [2, 5, 26, 28, 29, 30, 31, 32, 33, 34, 47, 48, 49, 50, 51, 57, 58, 60, 61, 87, 89, 90, 91, 92, 94, 96, 97, 99, 100, 102, 103, 147, 181, 185, 192, 193, 207, 208, 222], "start": [2, 5, 26, 101, 185, 203, 222, 223, 225, 227, 228, 231], "desir": [2, 5, 26], "refer": [2, 5, 7, 9, 10, 26, 27, 28, 29, 118, 119, 147, 222, 223], "end": [2, 5, 32, 87, 97, 102, 147, 185, 192, 193, 203, 227, 228, 231], "input": [2, 5, 20, 26, 28, 29, 30, 31, 32, 33, 34, 47, 48, 49, 50, 51, 59, 60, 84, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 147, 169, 173, 179, 180, 203, 228], "either": [2, 5, 31, 59, 60, 84, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 138, 222], "part": [2, 27, 50, 58, 59, 84, 88, 93, 95, 98, 119], "output": [2, 5, 57, 61, 196, 198, 201, 222, 225, 227, 228, 229, 231], "provid": [2, 5, 26, 53, 57, 58, 59, 84, 87, 88, 89, 93, 94, 95, 96, 97, 98, 99, 102, 103, 108, 119, 138, 147, 185, 191, 192, 193, 224, 225, 226, 230], "text": [2, 14, 15, 16, 90, 91, 92, 100], "displai": 2, "dure": [2, 5, 60, 87, 89, 91, 92, 94, 96, 97, 99, 100, 185], "anim": [2, 185, 228], "shown": [2, 135, 185], "requir": [2, 30, 57, 59, 84, 87, 88, 93, 95, 98, 145, 149], "plot": [2, 14, 15, 16, 59, 84, 88, 90, 91, 92, 93, 95, 98, 100, 185, 228, 229], "see": [2, 14, 15, 30, 31, 32, 48, 51, 59, 84, 87, 88, 89, 90, 93, 95, 97, 98, 99, 100, 132, 140, 146, 192, 222, 225], "gncpy": [2, 5, 14, 15, 16, 26, 34, 53, 60, 87, 89, 90, 91, 92, 94, 96, 97, 99, 100, 102, 103, 111, 118, 138, 140, 142, 143, 145, 147, 149, 185, 192, 203, 221, 225, 227, 228, 229, 231], "init_plotting_opt": [2, 14, 15, 16, 90, 91, 92, 100, 185, 208, 228, 229], "string": [2, 14, 15, 16, 26, 30, 31, 32, 34, 47, 48, 49, 50, 51, 59, 60, 84, 88, 90, 91, 92, 93, 95, 98, 100, 102, 103, 108, 115, 118, 119, 132, 135, 136, 138, 139, 140, 145, 146, 147, 148, 149, 185, 192, 197, 199, 206, 207, 208], "titl": [2, 14, 15, 16, 90, 91, 92, 100, 185, 207, 208, 223], "matplotlib": [2, 14, 15, 16, 59, 84, 88, 90, 91, 92, 93, 95, 98, 100, 185, 192, 207, 229], "figur": [2, 14, 15, 16, 59, 84, 88, 90, 91, 92, 93, 95, 98, 100, 185, 192, 207, 208, 228, 229], "draw": [2, 103, 108, 115, 135, 136, 185], "If": [2, 5, 12, 14, 15, 26, 28, 29, 30, 31, 33, 34, 47, 48, 49, 50, 51, 58, 59, 60, 84, 87, 88, 89, 91, 92, 93, 94, 95, 96, 97, 98, 99, 102, 103, 119, 138, 147, 185, 192, 193, 207, 222, 225], "suppli": [2, 5, 14, 15, 28, 29, 33, 34, 49, 58, 59, 84, 88, 89, 93, 95, 98, 99, 101], "onli": [2, 5, 12, 13, 14, 15, 24, 28, 29, 31, 33, 34, 47, 48, 49, 50, 51, 59, 60, 84, 88, 89, 90, 91, 92, 93, 95, 97, 98, 99, 100, 115, 118, 119, 138, 139, 147, 185, 192, 193, 225, 228, 231], "path": [2, 26, 27, 102, 103, 132, 147, 151, 163, 185, 186, 192, 203, 204, 227], "ar": [2, 5, 12, 14, 15, 16, 31, 32, 51, 54, 59, 60, 84, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 108, 115, 131, 135, 136, 138, 139, 140, 146, 147, 148, 150, 185, 192, 193, 194, 207, 222, 225], "drawn": [2, 90, 100, 115, 133, 138, 185], "updat": [2, 5, 13, 14, 15, 21, 26, 27, 60, 86, 89, 99, 103, 119, 126, 136, 147, 222], "rest": 2, "remain": 2, "unchang": 2, "which": [2, 5, 15, 60, 84, 147, 185, 192, 193, 222, 227, 228, 229, 231], "creat": [2, 14, 15, 23, 47, 59, 60, 84, 88, 93, 95, 98, 102, 103, 115, 118, 119, 132, 147, 207, 222, 225, 227, 228, 229], "new": [2, 26, 50, 57, 58, 59, 61, 84, 88, 93, 95, 98, 102, 103, 118, 119, 147, 185, 191, 192, 193, 196, 198, 201, 207, 222], "add": [2, 13, 28, 47, 48, 50, 51, 99, 104, 118, 119, 169, 222, 228, 231], "list": [2, 5, 13, 14, 15, 22, 23, 24, 25, 26, 32, 34, 47, 48, 50, 51, 59, 60, 84, 88, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 109, 111, 112, 119, 133, 136, 144, 145, 147, 149, 173, 175, 176, 179, 180, 185, 192, 193, 203, 207, 225], "element": [2, 13, 14, 15, 22, 23, 24, 50, 91, 92, 100, 109, 112, 118, 119, 144, 145, 147, 149, 185, 196, 197, 198, 201, 207], "assum": [2, 26, 31, 59, 60, 84, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 103, 118, 131, 147, 192, 193, 199], "nu": [2, 5, 28, 29, 31, 32, 33, 34, 47, 48, 49, 50, 51, 87, 89, 94, 96, 97, 99, 173, 175, 204], "state_traj": [2, 5, 228], "until": [2, 5, 119], "reach": [2, 5, 147, 149], "ctrl_signal": [2, 5, 228], "numi": [2, 5], "handl": [2, 14, 15, 59, 84, 88, 93, 95, 98, 108, 110, 111, 118, 119, 124, 147, 185], "gener": [2, 5, 26, 32, 51, 54, 57, 58, 59, 60, 61, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 108, 147, 185, 192, 193, 196, 197, 198, 199, 201, 203, 206, 207, 225, 228], "frame_list": [2, 185, 227, 228, 231], "each": [2, 13, 14, 22, 23, 24, 30, 31, 32, 34, 47, 48, 49, 50, 51, 58, 59, 60, 84, 87, 88, 89, 90, 91, 92, 93, 95, 97, 98, 99, 100, 102, 103, 109, 111, 112, 113, 119, 126, 142, 144, 145, 147, 149, 173, 175, 185, 192, 193, 198, 203, 206, 207, 222], "pil": [2, 185], "imag": [2, 103, 115, 132, 185, 192, 193, 197, 199, 222, 225], "correspond": [2, 14, 34, 59, 84, 88, 93, 95, 98, 147, 185, 197, 199], "cost_funct": [2, 5], "ctrl_input": [2, 5, 228, 231], "is_initi": [2, 5, 228, 231], "is_fin": [2, 5, 228, 231], "final": [2, 5, 185, 199], "forward_pass": 2, "forward": [2, 5, 26, 30, 31, 32, 34], "smooth": 2, "get_state_spac": [2, 5], "x_hat": [2, 5, 90, 91, 92, 100], "u_hat": [2, 5], "b": [2, 5, 87, 97, 228, 229, 231], "rais": [2, 5, 26, 30, 34, 47, 48, 50, 51, 58, 59, 60, 84, 87, 88, 89, 91, 92, 93, 94, 95, 96, 97, 98, 99, 102, 103, 147, 192, 193], "notimplementederror": [2, 5, 34, 147], "unsupport": [2, 5], "prop_stat": [2, 5], "propag": [2, 5, 26, 28, 29, 30, 31, 32, 33, 34, 47, 48, 49, 50, 51, 87, 89, 90, 91, 92, 94, 96, 97, 99, 100, 111, 147, 229], "prop_state_backward": [2, 5], "get": [2, 5, 26, 28, 29, 30, 31, 32, 33, 34, 49, 60, 87, 89, 94, 96, 97, 99, 103, 119, 126, 133, 145, 147, 192, 193, 222, 223, 225, 229], "futur": [2, 5], "x_hat_p": [2, 5], "previou": [2, 5, 59, 84, 88, 93, 95, 98], "transit": [2, 5, 28, 29, 31, 32, 47, 48, 50, 51, 58, 90, 91, 92, 100], "prop_state_forward": 2, "next": [2, 28, 29, 30, 31, 32, 33, 49, 60, 87, 89, 91, 92, 97, 99, 103, 147, 225], "abar": 2, "bbar": 2, "cbar": 2, "quadratize_cost": 2, "portion": [2, 224], "standard": [2, 14, 15, 28, 30, 49, 57, 61, 87, 91, 97, 154, 155, 165, 173, 175, 206, 208, 228, 229], "posit": [2, 6, 7, 8, 9, 14, 15, 24, 26, 27, 51, 111, 116, 126, 129, 130, 138, 147, 183, 185, 203, 205, 225, 229], "semi": [2, 51, 205], "definit": [2, 157], "regular": 2, "neg": [2, 101, 228, 231], "eigen": 2, "valu": [2, 5, 12, 16, 27, 28, 29, 31, 33, 49, 50, 59, 84, 88, 89, 90, 91, 92, 93, 95, 98, 99, 100, 101, 102, 103, 114, 135, 136, 138, 141, 147, 168, 170, 176, 185, 192, 193, 198, 203, 204, 207, 229], "zero": [2, 5, 28, 29, 30, 33, 47, 48, 49, 50, 51, 58, 228, 231], "reconstruct": 2, "first": [2, 26, 27, 31, 102, 103, 112, 115, 127, 131, 147, 177, 178, 185, 192, 193, 207, 222, 225, 228, 231], "last": [2, 26, 27, 111, 116, 185, 222], "configur": [2, 102, 103, 150, 192, 193], "correl": [2, 5, 31, 192, 193], "q": [2, 5, 90, 91, 92, 100, 228, 229, 231], "reset": [2, 102, 103, 147, 192, 193, 196, 197, 198, 199, 200, 201], "doe": [2, 5, 12, 26, 30, 32, 34, 59, 84, 88, 90, 93, 95, 98, 99, 100, 138, 185, 192, 193, 196, 198, 201, 228], "need": [2, 5, 12, 28, 29, 30, 31, 32, 33, 34, 49, 59, 84, 85, 86, 88, 92, 93, 95, 98, 99, 132, 138, 147, 177, 178, 192, 222, 225, 228], "call": [2, 14, 15, 57, 58, 59, 60, 61, 84, 87, 88, 89, 90, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 118, 119, 124, 126, 147, 185, 192, 193, 196, 197, 198, 199, 201, 225, 227], "outsid": [2, 26, 56, 92, 102, 103, 118], "It": [2, 5, 30, 31, 34, 47, 48, 51, 57, 58, 59, 60, 61, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 102, 103, 119, 185, 192, 208, 222, 225], "automat": [2, 47, 48, 50, 51, 59, 84, 87, 88, 89, 93, 94, 95, 96, 97, 98, 99, 222, 225], "old_cost": 2, "prior": [2, 86, 185, 222], "row": [2, 14, 185, 186, 199, 203], "set_cost_model": [2, 5, 228, 231], "non_quadratic_fun": [2, 228, 231], "quad_modifi": [2, 228, 231], "cost_fun": 2, "skip_validity_check": 2, "must": [2, 13, 34, 49, 50, 57, 58, 59, 60, 61, 84, 85, 87, 88, 89, 91, 92, 93, 94, 95, 96, 97, 98, 99, 102, 109, 113, 115, 126, 138, 139, 142, 146, 149, 172, 173, 174, 175, 177, 178, 185, 192, 203, 205, 206, 225], "specifi": [2, 12, 28, 29, 33, 47, 48, 49, 50, 51, 59, 60, 84, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 115, 147, 192, 193, 207, 225], "also": [2, 5, 30, 32, 57, 59, 60, 84, 88, 93, 95, 97, 98, 102, 103, 108, 111, 119, 147, 151, 199, 207, 208, 225, 227], "code": [2, 30, 32, 57, 61, 225], "forc": [2, 30], "follow": [2, 32, 60, 191, 193, 194, 222, 223, 224, 225, 227, 228, 229, 230, 231], "form": [2, 31, 32, 48, 51, 54, 60, 87, 89, 90, 91, 92, 94, 96, 97, 99, 100, 172, 174, 185, 228], "x_f": 2, "int_": 2, "t_0": 2, "t_f": [2, 5], "tau": [2, 5], "where": [2, 5, 34, 58, 59, 60, 84, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 207, 225], "contain": [2, 52, 111, 115, 116, 117, 222, 225], "term": [2, 146, 228], "can": [2, 5, 14, 15, 31, 53, 57, 58, 59, 60, 61, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 119, 133, 147, 185, 192, 193, 199, 207, 222, 225, 227, 228, 229, 231], "entir": 2, "callabl": [2, 5, 34, 58, 59, 60, 84, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 172, 174, 177, 178, 203], "have": [2, 53, 58, 59, 60, 84, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 146, 147, 173, 175, 185, 192, 193, 222], "arg": [2, 26, 30, 31, 32, 34, 48, 49, 51, 57, 60, 86, 87, 89, 90, 91, 92, 94, 96, 97, 98, 99, 100, 102, 103, 211, 228], "scalar": 2, "modifii": 2, "befor": [2, 57, 59, 84, 88, 89, 90, 93, 95, 98, 100, 102, 103, 147, 225], "ad": [2, 92, 119, 185, 193, 225], "all": [2, 26, 34, 49, 55, 57, 58, 59, 61, 84, 88, 93, 95, 98, 102, 103, 111, 119, 120, 133, 135, 136, 147, 149, 158, 159, 185, 192, 193, 194, 204, 207, 222, 224, 225], "numericali": 2, "wrong": [2, 147], "combin": [2, 59, 84, 86, 87, 88, 89, 93, 94, 95, 96, 97, 98, 99], "given": [2, 5, 13, 14, 15, 26, 28, 29, 33, 50, 59, 60, 84, 88, 89, 90, 91, 92, 93, 95, 98, 99, 100, 118, 119, 126, 135, 138, 147, 173, 175, 185, 205, 207, 208, 222], "runtimeerror": [2, 26, 30, 47, 48, 50, 51, 59, 60, 84, 87, 88, 89, 91, 92, 93, 94, 95, 96, 97, 98, 99, 147, 192, 193], "invlaid": 2, "set_state_model": [2, 5, 57, 58, 59, 60, 61, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 228, 229, 231], "u_nom": [2, 5, 228, 231], "control_constraint": [2, 5], "dynobj": [2, 5, 111, 147, 228, 231], "dt": [2, 5, 26, 27, 28, 29, 30, 33, 47, 48, 49, 50, 51, 59, 60, 87, 88, 97, 98, 126, 228, 229, 231], "nomin": [2, 5, 228], "constrain": [2, 5], "basic": [2, 5, 58, 92, 140, 146, 147, 228, 229, 231], "dynamicsbas": [2, 5, 26, 49, 50, 91, 92, 111, 147], "Will": [2, 5, 108], "solve_dar": [2, 5], "cur_tim": [2, 5, 228], "solv": [2, 5], "algebra": [2, 5, 203], "ricatti": [2, 5], "agrument": [2, 5, 31, 32, 91, 92], "dare": [2, 5], "solut": [2, 5, 203], "properti": [2, 5, 12, 13, 14, 15, 24, 28, 29, 31, 32, 33, 47, 48, 50, 51, 59, 84, 85, 86, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 103, 108, 109, 111, 112, 113, 114, 115, 116, 118, 120, 126, 147, 192, 193, 196, 197, 198, 199, 200, 201], "read": [2, 5, 12, 13, 14, 15, 24, 31, 47, 90, 91, 92, 97, 100, 102, 118], "penalti": [2, 5, 146], "time_horizon": [5, 228, 231], "inf": [5, 15, 89, 99, 228], "hard_constraint": 5, "infinit": [5, 226], "singl": [5, 12, 57, 61, 90, 91, 92, 100, 185, 196, 197, 198, 201], "gain": 5, "found": [5, 102, 103, 147, 185, 225], "preform": 5, "consist": [5, 14, 90, 91, 92, 100], "reced": 5, "formul": 5, "dyanmic": [5, 226], "thei": [5, 50, 53, 58, 59, 60, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 173, 175, 191], "onc": [5, 119, 192, 194, 222, 225], "about": [5, 15, 27, 89, 99, 109, 114, 173, 174, 175], "problem": [5, 93, 156], "without": [5, 224, 225], "length": [5, 13, 59, 84, 88, 93, 95, 98, 138], "ct_go_mat": 5, "go": [5, 225, 228, 231], "ct_go_vec": 5, "feedback_gain": 5, "feedthrough_gain": 5, "feedthrough": 5, "directli": [5, 26, 30, 32, 60, 118, 185], "constraint": [5, 34, 99, 111, 140, 147, 148, 192, 193, 203, 228], "enforc": [5, 30], "end_state_tol": [5, 228], "01": [5, 228, 229, 231], "max_inf_it": 5, "check_ind": [5, 228], "inifint": 5, "find": [5, 102, 103, 147], "avoid": 5, "loop": [5, 103, 147, 192, 193], "check": [5, 12, 13, 26, 102, 103, 127, 128, 131, 136, 147, 185, 203, 222, 225], "determin": [5, 12, 14, 15, 89, 94, 96, 99, 105, 115, 125, 126, 132, 138, 139, 140, 142, 143, 144, 145, 146, 147, 148, 149, 165, 185, 192, 193], "condit": [5, 26, 90, 91, 92, 100, 102, 103, 147, 192, 193, 224], "full": [5, 26, 102, 103, 132, 138, 147, 192, 225], "_0": 5, "give": [5, 185, 222, 227, 228, 229, 231], "po": [6, 30, 31, 32, 51, 116, 185, 203, 228, 229, 231], "convert": [6, 7, 8, 9, 10, 20, 27, 129, 130, 185, 197], "ecef": [6, 7, 8, 183], "lla": [6, 8, 9, 10], "coordin": [6, 8, 9, 30, 31, 48, 139, 152, 215], "meter": [6, 8, 10, 21, 23, 24, 26, 27, 47, 51, 183, 214, 215, 216, 217], "latitud": [6, 8, 9, 10, 21, 26, 27, 183, 213, 215, 217], "rad": [6, 9, 10, 26, 27, 30, 183, 217], "longitud": [6, 8, 9, 10, 21, 26, 27, 181, 183], "altitud": [6, 8, 9, 10, 21, 26, 27, 215, 217], "ref_xyz": 7, "pos_xyz": 7, "ned": [7, 9, 10, 26, 27, 215, 217], "lat": [8, 10, 21, 26, 27, 213, 214, 215, 216, 217, 218, 219], "lon": [8, 10, 21, 26, 27, 218, 219], "alt": [8, 10, 215, 217, 218, 219], "radian": [8, 10, 21, 27, 181, 182, 183, 184, 213, 215, 217], "ref_lat": [9, 10, 27], "ref_lon": [9, 10, 27], "ref_alt": [9, 10], "pos_lat": 9, "pos_lon": 9, "pos_alt": 9, "positon": 10, "flaot": [10, 27, 147], "est_list": 11, "cov_list": 11, "weight_list": [11, 61, 85], "meas_model_list": [11, 61, 85], "shape": [12, 87, 97, 115, 132, 142, 143, 145, 149, 207, 229], "dtype": [12, 87, 97, 228], "float64": [12, 87, 97], "uncertainti": [12, 13], "sigmapoint": [12, 89, 98, 99], "helper": [12, 13, 14, 15, 186, 204], "defin": [12, 14, 15, 20, 26, 34, 47, 48, 49, 50, 51, 57, 60, 102, 103, 105, 109, 120, 121, 122, 123, 125, 126, 132, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 156, 158, 159, 164, 194, 222, 225, 227, 228, 229, 231], "distribut": [12, 13, 15, 16, 58, 59, 84, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 108, 138, 224], "locat": [12, 23, 26, 59, 84, 88, 93, 95, 98, 102, 103, 108, 138, 142, 143, 149, 185, 207, 227], "alwai": 12, "repres": [12, 13, 14, 15, 16, 22, 47, 50, 58, 60, 87, 89, 90, 91, 92, 94, 96, 97, 99, 100, 103, 110, 145, 147, 149, 185, 207], "necessari": [12, 84, 102, 103], "mean": [12, 13, 14, 15, 21, 27, 28, 29, 58, 59, 84, 88, 89, 93, 95, 98, 99, 129, 130, 146, 182], "same": [12, 28, 29, 30, 33, 49, 57, 59, 60, 61, 84, 88, 90, 91, 93, 95, 98, 99, 100, 126, 147, 149, 192, 193, 197, 203], "otherwis": [12, 26, 59, 84, 88, 89, 93, 95, 98, 99, 102, 224], "manag": [13, 102, 118, 119, 122], "arbitrari": [13, 57, 60, 61, 85, 177, 178], "add_particl": 13, "w": [13, 31, 103, 110, 115, 223, 227], "weight": [13, 14, 15, 58, 59, 84, 88, 90, 91, 92, 93, 95, 98, 100, 179, 180, 185, 228, 230], "clear_particl": 13, "clear": 13, "update_weight": 13, "w_lst": [13, 179, 180], "match": [13, 14, 30, 31, 32, 34, 47, 48, 49, 50, 51, 97, 149], "covari": [13, 14, 15, 29, 33, 54, 59, 60, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 205, 207], "num_particl": [13, 90, 91, 92, 100], "partilc": 13, "points_per_axi": [14, 93, 94, 95, 96], "num_ax": 14, "probabilist": 14, "version": [14, 58, 84, 222, 225, 228], "polynomi": [14, 25], "h_": [14, 87, 97], "e_n": 14, "exp": [14, 228, 231], "frac": [14, 90, 91, 92, 97, 100], "partial": 14, "its": [14, 26, 47, 55, 56, 147, 193, 231], "associ": [14, 53, 128, 131, 147, 224], "For": [14, 34, 51, 99, 100, 139, 192, 207, 225], "detail": [14, 15, 30, 31, 32, 48, 51, 59, 84, 87, 88, 90, 93, 95, 97, 98, 99, 100, 140, 146], "variat": [14, 30, 32, 97, 185, 187, 189], "extens": [14, 26, 225], "axi": [14, 15, 16, 27, 51, 90, 91, 92, 93, 94, 95, 96, 100, 110, 125, 127, 128, 205, 207, 208, 227, 228], "manual": [14, 59, 60, 84, 88, 93, 95, 98, 101], "update_point": [14, 15], "plot_point": [14, 15, 94, 96], "ind": [14, 15, 16, 58, 90, 91, 92, 94, 96, 100], "x_lbl": [14, 15, 16, 90, 91, 92, 100, 208, 229], "y_lbl": [14, 15, 16, 90, 91, 92, 100, 208, 229], "size_factor": [14, 15], "10000": [14, 15], "keywrod": [14, 15], "f_hndl": [14, 15, 16, 90, 91, 92, 100, 207, 228], "ani": [14, 15, 16, 30, 34, 49, 58, 90, 91, 92, 100, 102, 103, 107, 147, 207, 224, 225], "most": [14, 15, 26, 58, 102, 103, 225], "bar": [14, 15, 90, 91, 92, 100, 225], "chart": [14, 15, 90, 91, 92, 100], "label": [14, 15, 16, 54, 90, 91, 92, 100, 207, 208, 229], "factor": [14, 15, 126, 146, 185], "multipli": [14, 15, 146], "marker": [14, 15, 207, 228], "size": [14, 15, 103, 147, 172, 174, 177, 178, 203, 207, 208, 227, 228, 229, 231], "100": [14, 15, 231], "have_sqrt": [14, 15], "some": [14, 15, 47, 53, 58, 88, 145, 149, 151, 191, 192, 193, 195, 225, 226, 227, 228, 231], "wa": [14, 15, 16, 57, 59, 61, 84, 88, 89, 90, 91, 92, 93, 95, 98, 99, 100, 102, 103, 127, 128, 137, 147, 185], "cov": [14, 15, 59, 84, 85, 86, 87, 88, 90, 91, 92, 93, 95, 96, 97, 98, 100, 205, 229], "account": [14, 15], "num_point": [14, 15], "expect": [14, 15, 60, 89, 91, 92, 99, 102], "alpha": [15, 31, 89, 98, 99, 169], "kappa": [15, 89, 98, 99], "beta": [15, 31, 89, 98, 99], "quadraturepoint": [15, 94, 96], "interpret": 15, "speacial": 15, "tunig": [15, 89, 99], "influenc": [15, 89, 99], "spread": [15, 89, 99], "rang": [15, 27, 89, 99, 113, 115, 132, 138, 142, 146, 196, 197, 198, 199, 200, 201, 227], "ideal": [15, 99], "init_weight": [15, 85, 86, 229], "other": [15, 26, 27, 58, 92, 102, 103, 126, 135, 149, 222, 224], "setup": [15, 57, 58, 61, 102, 103, 147, 185, 222, 223, 227, 228, 229], "after": [15, 119, 177, 178, 192, 193, 196, 197, 198, 199, 201, 225], "lam": 15, "deriv": [15, 27, 58, 92, 93, 95, 98], "weights_cov": 15, "wight": 15, "weights_mean": 15, "plot_particl": [16, 58, 59, 84, 88, 90, 91, 92, 93, 95, 98, 100], "approxim": [16, 48], "from": [16, 25, 27, 28, 29, 30, 32, 33, 34, 47, 48, 49, 50, 51, 58, 59, 84, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 102, 104, 108, 118, 126, 133, 138, 147, 182, 183, 184, 185, 192, 193, 197, 203, 205, 208, 222, 224, 225, 227, 228, 229, 231], "index": [16, 50, 59, 84, 88, 90, 91, 92, 93, 95, 98, 100, 147, 185, 186, 206, 208, 223, 225], "here": [16, 59, 84, 88, 89, 90, 91, 92, 93, 95, 98, 99, 100, 185, 225, 228], "lgnd_loc": [16, 90, 91, 92, 100, 207], "format": [16, 90, 91, 92, 100, 191, 225], "rotor": [17, 26], "aerodynam": [18, 19], "pars": [18, 19, 22, 23, 24, 25, 102, 103, 105, 107, 126, 138, 139, 140, 142, 143, 144, 145, 146, 147, 148, 149], "yaml": [18, 19, 22, 23, 24, 25, 102, 103, 105, 138, 139, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 192, 193, 222], "parser": [18, 19, 22, 23, 24, 25, 102, 103, 105, 125, 126, 132, 138, 139, 140, 142, 143, 144, 145, 146, 147, 148, 149], "cd": [18, 223], "drag": 18, "coeffic": [18, 25], "aircraft": [19, 27], "aero": 19, "aeroparam": 19, "mass": [19, 23], "massparam": 19, "geo": 19, "geometr": [19, 22], "geoparam": 19, "prop": 19, "propel": [19, 25], "propparam": 19, "motor": [19, 24, 26, 27], "motorparam": 19, "input_cmd": 20, "command": [20, 26, 27, 222, 225], "alt_wgs84": [21, 26, 27], "alt_msl": [21, 26, 27], "perform": [21, 27, 57, 90, 91, 92, 93, 97, 100, 103, 147, 162, 192, 193, 225], "one": [21, 27, 31, 32, 58, 59, 60, 84, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 131, 147, 185, 192, 193], "wg": [21, 26, 27, 167], "84": [21, 26, 27, 167, 199], "sea": [21, 27], "level": [21, 27, 124], "front_area_m2": 22, "front": 22, "cross": 22, "section": 22, "area": 22, "angl": [22, 27, 30, 32, 48, 183, 205, 229, 231], "cg_m": 23, "cg": 23, "mass_kg": 23, "kilogram": 23, "inertia_kgm2": 23, "moment": [23, 97], "inertia": 23, "pos_m": 24, "dir": 24, "direct": [24, 139], "spin": 24, "num_motor": 24, "poly_thrust": 25, "thrust": 25, "poly_torqu": 25, "torqu": 25, "params_fil": 26, "env": [26, 192, 193, 196, 197, 198, 199, 200, 201, 225], "effector": 26, "egm_bin_fil": 26, "library_dir": [26, 102, 103], "vehicl": 26, "environ": [26, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 223, 228], "physic": [26, 101, 103, 123, 126, 147], "config": [26, 101, 102, 103, 107, 126, 147], "file": [26, 101, 102, 103, 132, 147, 150, 192, 222, 224, 225], "binari": 26, "egm": 26, "directori": [26, 102, 103, 117, 147, 225], "look": [26, 102, 103, 222], "search": [26, 102, 103, 185, 203, 223, 230], "good": [26, 60, 87, 94, 96, 97, 102, 103], "parent": [26, 31, 32, 47, 58, 84, 89, 90, 99, 147, 186, 204], "state_map": 26, "map": [26, 60, 89, 91, 92, 99, 113, 185, 192, 193, 206, 227], "unit": [26, 103, 126, 129, 130, 132, 142, 143, 147, 149, 185, 192, 222, 225], "alia": 26, "v_smap": 26, "get_input_mat": [26, 28, 29, 30, 31, 32, 33, 34, 47, 48, 49, 50, 51], "get_state_mat": [26, 28, 29, 30, 31, 32, 33, 34, 47, 48, 49, 50, 51, 229], "propagate_st": [26, 28, 29, 30, 31, 32, 33, 34, 47, 48, 49, 50, 51, 229], "desired_motor_cmd": 26, "depend": [26, 89, 99, 138, 139, 140, 192, 225, 227], "fulli": 26, "realiz": 26, "chang": [26, 27, 47, 119, 181, 225], "sinc": [26, 27, 222], "copi": [26, 60, 92, 224, 229], "set_initial_condit": 26, "ned_po": [26, 27], "body_vel": [26, 27], "eul_deg": 26, "body_rot_r": 26, "ref_lat_deg": 26, "ref_lon_deg": 26, "terrain_alt_wgs84": [26, 27], "ned_mag_field": 26, "few": 26, "bodi": [26, 27], "veloc": [26, 27, 111, 116, 129, 130, 139, 146, 147, 148, 217, 228, 231], "attidu": 26, "degre": [26, 32, 97, 205], "yaw": 26, "pitch": 26, "roll": 26, "rotat": [26, 27, 205], "rate": [26, 27, 30, 31, 102, 136, 139, 181, 213, 217], "terrain": [26, 27], "home": [26, 225], "positioin": 26, "magnet": 26, "field": 26, "ut": 26, "validate_params_fil": 26, "valid": [26, 56, 102, 103, 147, 185, 206, 207, 225], "exist": [26, 102, 103, 118, 147, 192, 193, 225], "seper": 26, "name": [26, 30, 31, 32, 34, 47, 48, 49, 50, 51, 102, 103, 185, 196, 197, 198, 199, 200, 201, 206, 225], "fail": [26, 47, 48, 50, 51, 60, 87, 94, 96, 99, 102, 103, 147, 222], "librari": [26, 102, 103, 124, 147, 191, 223, 225], "filenotfounderror": [26, 102, 103, 147], "cf": [26, 102, 103, 147], "state_nam": [26, 28, 29, 30, 31, 32, 33, 34, 47, 48, 49, 50, 51, 228, 229, 231], "ned_pos_0": 26, "ned_pos_1": 26, "ned_pos_2": 26, "ned_vel_0": 26, "ned_vel_1": 26, "ned_vel_2": 26, "ned_accel_0": 26, "ned_accel_1": 26, "ned_accel_2": 26, "body_vel_0": 26, "body_vel_1": 26, "body_vel_2": 26, "body_accel_0": 26, "body_accel_1": 26, "body_accel_2": 26, "body_rot_rate_0": 26, "body_rot_rate_1": 26, "body_rot_rate_2": 26, "body_rot_accel_0": 26, "body_rot_accel_1": 26, "body_rot_accel_2": 26, "dyn_pr": [26, 27], "airspe": [26, 27], "mach": [26, 27], "aoa": [26, 27], "aoa_rat": [26, 27], "sideslip_ang": [26, 27], "sideslip_r": [26, 27], "gnd_trk": [26, 27], "fp_ang": [26, 27], "gnd_speed": [26, 27], "dcm_earth2body_00": 26, "dcm_earth2body_01": 26, "dcm_earth2body_02": 26, "dcm_earth2body_10": 26, "dcm_earth2body_11": 26, "dcm_earth2body_12": 26, "dcm_earth2body_20": 26, "dcm_earth2body_21": 26, "dcm_earth2body_22": 26, "alt_agl": [26, 27], "state_unit": 26, "pa": 26, "param": [27, 102, 108, 147], "aircraftparam": 27, "lattiud": 27, "takenoff": 27, "ha": [27, 30, 31, 32, 34, 47, 55, 56, 59, 60, 87, 89, 90, 91, 92, 94, 96, 97, 99, 100, 102, 118, 119, 147, 192, 193, 225, 228], "taken": [27, 47, 103], "off": 27, "yet": [27, 192, 193], "calc_derived_st": 27, "speed_of_sound": 27, "ned_vel": 27, "delta": [27, 30, 49, 97], "speed": [27, 32], "sound": 27, "ground": 27, "flight": 27, "pressur": 27, "attack": 27, "sideslip": 27, "eul_to_dcm": 27, "r1": 27, "r2": 27, "r3": 27, "euler": 27, "dcm": 27, "z": [27, 28, 51, 59, 84, 88, 93, 95, 98, 171, 203, 208], "third": [27, 185], "3x3": 27, "set_dcm_earth2bodi": 27, "mat": [27, 28, 29, 33, 34, 49, 229], "assign": 27, "graviti": [27, 215], "motor_cmd": 27, "normal": [27, 30, 32, 90, 91, 92, 100, 185, 207, 222, 225, 230], "clohessywiltshireorbit2d": 28, "compon": [28, 116, 118, 128, 131, 132, 138, 139, 147], "make": [28, 102, 147, 185, 222, 225, 231], "3d": 28, "mean_mot": [28, 29], "spacecraft": [28, 29], "get_dis_process_noise_mat": [28, 29, 30, 33, 49], "interfac": [28, 53, 91, 102, 120, 165, 207], "jacobian": [28, 29, 33, 47, 48, 49, 50, 51, 173, 174, 175], "than": [28, 29, 33, 47, 48, 49, 50, 51, 97, 103], "x_": [28, 29, 33, 34, 49, 60, 87, 89, 90, 91, 92, 94, 96, 97, 99, 100], "f_k": [28, 29, 33, 34, 49], "x_k": [28, 29, 33, 34, 49, 87, 97], "g_k": [28, 29, 33, 34, 49], "u_k": [28, 29, 33, 34, 49, 87, 97], "effort": [28, 29, 33, 34, 47, 48, 49, 50, 51], "next_stat": [28, 29, 33, 34, 47, 48, 49, 50, 51, 60, 87, 89, 94, 96, 97, 99], "built": [28, 29, 33, 155], "immut": [28, 29, 33], "sequenc": [28, 29, 33, 222], "constructor": [28, 29, 33, 58, 89, 99, 118], "empti": [28, 29, 33], "item": [28, 29, 33, 109, 228, 231], "lineardynamicsbas": [29, 30, 33, 34, 60, 87, 89, 94, 96, 97, 99], "2d": [29, 32, 101, 103, 123, 124, 125, 126, 132, 147, 190, 193], "proc_cov": [29, 33], "unus": [29, 33], "turn_rat": [30, 229], "08726646259971647": 30, "turn": [30, 31, 32, 102, 103, 139, 227, 231], "known": 30, "slight": [30, 32], "becaus": [30, 32, 47, 225], "allow": [30, 49, 57, 59, 60, 61, 84, 88, 89, 90, 91, 93, 94, 95, 98, 99, 126, 145, 147, 192, 196, 197, 198, 201, 225], "instead": [30, 31, 32, 58, 93, 98, 118, 192], "includ": [30, 84, 99, 150, 224], "help": [30, 126, 225], "debug": [30, 102, 103, 147, 192, 193], "strictli": 30, "f_arg": [30, 47, 48, 49, 50, 51, 60, 89, 94, 96, 99, 172, 173, 174, 175], "overridden": [30, 34, 49, 50, 57, 61, 85, 91, 92, 102], "child": [30, 34, 49, 50, 84, 91, 102], "maintain": [30, 49, 59, 84, 88, 93, 95, 97, 98], "signatur": [30, 34, 49, 57, 58, 59, 60, 61, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 173, 175], "wrapper": [30, 49, 57, 58, 59, 61, 84, 88, 89, 90, 91, 93, 94, 95, 96, 98, 100, 191, 196, 197, 198, 199, 200, 201], "vel": [30, 31, 51, 116, 231], "turn_rate_cor_tim": [31, 229], "nonlineardynamicsbas": [31, 32, 34, 47, 48, 51, 60, 89, 94, 96, 99], "unknown": 31, "wiener": 31, "markov": [31, 91], "neq": 31, "dot": [31, 32, 34, 50, 60, 87, 97, 103, 147, 173, 175], "omega": [31, 229], "w_": [31, 91, 92], "awgn": 31, "arguement": [31, 32, 59, 84, 88, 93, 95, 98], "use_continu": [31, 32, 47, 48, 50, 51], "been": [31, 32, 53, 59, 60, 84, 87, 88, 89, 91, 92, 93, 94, 95, 96, 97, 98, 99, 102, 119, 147, 192, 193], "hardcod": [31, 32], "placehold": [31, 32, 34], "continu": [31, 32, 47, 48, 50, 51, 60, 87, 89, 94, 96, 97, 99, 222, 227, 228, 231], "These": [31, 32, 50, 53, 99, 118, 120, 222, 225], "cont_fnc_lst": [31, 32, 47, 48, 50, 51], "od": [31, 32, 47, 48, 50, 51, 60, 89, 94, 96, 99], "curvilinear": 32, "As": 32, "result": [32, 59, 84, 85, 86, 88, 93, 95, 98, 169, 176, 223], "kept": [32, 197], "360": 32, "begin": [32, 87, 97], "align": [32, 97, 110, 125, 127, 128, 138], "v": [32, 90, 91, 92, 100, 225, 229], "co": [32, 229], "psi": 32, "u_0": 32, "u_1": 32, "kei": [32, 57, 59, 61, 84, 88, 93, 95, 98, 103, 147, 185, 192, 193, 196, 197, 198, 199, 201], "word": 32, "doubl": [33, 139], "control_model": [34, 228, 231], "state_constraint": [34, 228], "abc": [34, 102], "common": [34, 53, 117, 120, 157, 207], "modif": [34, 228, 231], "x_i": 34, "u_i": 34, "differenti": [34, 47, 50, 60, 172], "_i": 34, "abstract": [34, 49, 50, 57, 91, 102, 103], "wheel_separ": [47, 228], "258": [47, 228], "radiu": [47, 48, 183, 203, 214, 216, 228, 229, 231], "1675": 47, "drive": 47, "irobot": [47, 228], "predefin": [47, 155, 222], "themselv": [47, 222], "do": [47, 102, 138, 224, 225], "wheel": 47, "distanc": [47, 103, 126, 129, 130, 185, 228, 231], "two": [47, 131, 222], "bound": [47, 110, 125, 127, 128, 131, 142, 143, 145, 147, 149, 185, 207, 227, 228, 231], "box": [47, 110, 125, 127, 128, 131, 142, 143, 145, 149, 192, 193, 228, 229], "held": [47, 48, 50, 51], "constant": [47, 48, 50, 51, 60, 87, 89, 91, 92, 94, 96, 97, 99, 167, 185], "period": [47, 48, 50, 51], "contiuou": 47, "pos_x": 47, "pos_v": 47, "turn_angl": 47, "separ": 47, "karlgaar": 48, "ellipt": [48, 51], "dimensionless": 48, "sphereic": 48, "dim": 48, "az": 48, "elv": 48, "roc": 48, "own": [49, 50], "variabl": [49, 50, 57, 58, 59, 60, 61, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 147, 229], "remaind": [49, 50], "autogener": [49, 50], "integrator_typ": [50, 59, 60], "dopri5": [50, 60], "integrator_param": [50, 59, 60], "nan": [50, 229], "scipi": [50, 60, 89, 94, 96, 99], "mu": 51, "398600441800000": 51, "semi_major": 51, "eccentr": [51, 182, 184], "around": 51, "anoth": [51, 222], "vertic": 51, "horizont": 51, "lvlh": 51, "anomali": [51, 182, 184], "more": [51, 52, 58, 59, 84, 88, 93, 95, 98, 103, 149, 192, 193], "gravit": 51, "986004418": 51, "major": [51, 205, 225], "complic": [52, 58], "easi": 53, "well": [53, 100, 225], "except": [54, 55, 56, 94, 96, 99, 156, 196, 197, 198, 201, 225], "thrown": [54, 55, 56], "ill": 54, "happen": [54, 58, 222], "bad": 54, "inner": [54, 86, 90, 100], "bernoulli": 54, "glmb": 54, "pf": [55, 56], "deplet": 55, "domain": 56, "use_cholesky_invers": 57, "recommend": [57, 59, 60, 61, 84, 88, 91, 93, 95, 98, 192, 225], "inherit": [57, 61, 84, 85, 92, 94, 101, 102, 104], "choleski": 57, "decomposit": 57, "improv": [57, 58, 225], "stabil": 57, "increas": 57, "runtim": [57, 58, 93], "correct": [57, 58, 59, 60, 61, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 181, 229], "mea": [57, 58, 59, 60, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 229], "keep": [57, 61, 90, 91, 100, 185], "structur": [57, 61, 147], "load_filter_st": [57, 58, 59, 60, 61, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100], "filt_stat": [57, 58, 59, 60, 61, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100], "implemen": [57, 61], "instanc": [57, 58, 59, 61, 84, 87, 88, 89, 93, 95, 97, 98, 99, 102, 103, 118, 134, 192, 193, 203], "would": [57, 61, 225], "origin": [57, 61, 103, 147, 181], "predict": [57, 58, 59, 60, 61, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 203, 229], "save_filter_st": [57, 58, 59, 60, 61, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100], "load": [57, 61], "set_measurement_model": [57, 58, 59, 60, 61, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 229], "tset": [57, 61, 85], "importance_dist_fnc": 58, "importance_weight_fnc": [58, 59, 84, 88, 93, 95, 98], "particledistribut": [58, 90, 91, 92, 100], "rng": [58, 59, 84, 88, 92, 93, 95, 98, 102, 103, 108, 192, 193, 203, 207, 229, 231], "bayesfilt": [58, 61, 84, 87, 92], "strip": 58, "down": [58, 192, 193], "particlefilt": [58, 90, 91, 100], "altern": [58, 87, 97], "remov": [58, 91, 92, 100, 119, 225], "qualiti": 58, "life": 58, "featur": 58, "But": 58, "simpl": [58, 147, 190, 193], "advis": 58, "simpleparticledistribut": 58, "random": [58, 59, 84, 88, 90, 91, 92, 93, 95, 98, 100, 102, 103, 108, 138, 147, 192, 193, 203, 207, 229, 231], "within": [58, 222, 225, 228, 231], "nm": [58, 60, 87, 89, 90, 91, 92, 94, 96, 97, 99, 100], "gerr": 58, "particledepletionerror": 58, "sum": [58, 176, 179, 180, 228, 231], "dictionari": [58, 59, 60, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 103, 147, 185, 192, 193, 197, 199, 208], "import": [58, 59, 84, 88, 90, 91, 92, 93, 95, 98, 100, 149, 194, 227, 228, 229, 231], "sampl": [58, 59, 84, 88, 90, 91, 92, 93, 95, 98, 100, 108, 138, 203, 231], "so": [58, 59, 60, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 224, 225, 228], "restor": [58, 59, 60, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100], "later": [58, 59, 60, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 185], "bootstrap": [58, 59, 84, 88, 93, 95, 98], "kfgaussianscalemixturefilt": 59, "ekf": [59, 60, 94, 99], "document": [59, 88, 95, 221, 222, 224, 225], "purpos": [59, 88, 95, 224], "gsmfilterbas": [59, 88, 93, 98], "core_filt_kwarg": [59, 84, 88, 93, 95, 98], "gsm": [59, 84, 88, 93, 95, 98], "core": [59, 84, 88, 93, 95, 98], "filt_ind": [59, 84, 88, 93, 95, 98], "dist_ind": [59, 84, 88, 93, 95, 98], "bootstrapfilt": [59, 84, 88, 93, 95, 98], "keyword": [59, 84, 87, 88, 89, 93, 95, 97, 98, 99, 109, 173, 175, 206], "pickl": [59, 84, 85, 86, 88, 93, 95, 98], "dill": [59, 84, 85, 86, 88, 93, 95, 98], "due": [59, 84, 85, 86, 88, 93, 95, 98, 192, 193], "potenti": [59, 60, 84, 85, 86, 88, 89, 91, 92, 93, 94, 95, 96, 98, 99, 185], "set_meas_noise_model": [59, 84, 88, 93, 95, 98], "bootstrap_lst": [59, 84, 88, 93, 95, 98], "importance_weight_factory_lst": [59, 84, 88, 93, 95, 98], "gsm_lst": [59, 84, 88, 93, 95, 98], "num_part": [59, 84, 88, 93, 95, 98], "factori": [59, 84, 88, 93, 95, 98, 102], "serum": [59, 84, 88, 93, 95, 98, 108], "gaussianscalemixtur": [59, 84, 88, 93, 95, 98], "objecst": [59, 84, 88, 93, 95, 98], "latter": [59, 84, 88, 93, 95, 98], "construct": [59, 84, 88, 93, 95, 98], "wai": [59, 84, 88, 93, 95, 98], "independ": [59, 84, 88, 93, 95, 98], "alreadi": [59, 84, 88, 93, 95, 98, 192, 193], "actual": [59, 84, 88, 93, 95, 98], "bootrap": [59, 84, 88, 93, 95, 98], "routin": [59, 84, 88, 93, 95, 98, 164], "seed": [59, 84, 88, 93, 95, 98, 102, 103, 192, 193, 196, 197, 198, 199, 200, 201, 231], "incorrect": [59, 84, 88, 93, 95, 98, 147], "extendedkalmanfilt": [59, 89, 94, 96, 99, 229], "set_process_noise_model": [59, 84, 88, 93, 95, 98], "initial_est": [59, 84, 88, 93, 95, 98], "filter_length": [59, 84, 88, 93, 95, 98], "startup_delai": [59, 84, 88, 93, 95, 98], "past": [59, 84, 88, 93, 95, 98, 147], "impli": [59, 84, 88, 93, 95, 98, 224], "previous": [59, 84, 88, 93, 95, 98, 102], "delai": [59, 84, 88, 93, 95, 98], "rune": [59, 84, 88, 93, 95, 98], "fill": [59, 84, 88, 93, 95, 98], "fifo": [59, 84, 88, 93, 95, 98], "buffer": [59, 84, 88, 93, 95, 98, 196, 198, 201], "cont_cov": [59, 60, 229], "kalmanfilt": [59, 60, 88, 89, 94, 96, 97, 99, 229], "meas_nois": [59, 84, 87, 88, 90, 93, 95, 96, 98, 100, 229], "onlin": [59, 84, 88, 93, 95, 98], "proc_nois": [59, 84, 87, 88, 90, 93, 95, 96, 98, 100, 229], "dyn_obj": [60, 61, 85, 87, 89, 91, 92, 94, 96, 97, 99, 229], "ode_lst": [60, 89, 94, 96, 99], "loos": [60, 87], "meas_fun_arg": [60, 61, 85, 87, 91, 92, 94, 96, 97, 99], "extrememeasurementnoiseerror": [60, 87, 94, 96, 99], "fit": [60, 87, 94, 96, 97, 99, 224], "meas_fit_prob": [60, 87, 94, 96, 97, 99], "cur_input": [60, 87, 89, 94, 96, 97, 99], "dyn_fun_param": [60, 89, 91, 92, 94, 96, 99], "control_fun_param": 60, "int_t": 60, "phi": 60, "meas_mat": [60, 87, 89, 91, 92, 94, 96, 97, 99, 229], "meas_fun_lst": [60, 89, 91, 92, 99], "measobj": [60, 87, 89, 97, 99], "vari": [60, 87, 89, 91, 92, 97, 99, 138, 140], "tild": [60, 87, 89, 91, 92, 94, 96, 97, 99], "_": [60, 87, 89, 90, 91, 92, 94, 96, 97, 99, 100], "transform": [60, 87, 89, 91, 92, 94, 96, 97, 99, 128, 129, 130, 131, 152, 196, 198, 201], "rasi": [60, 87, 89, 91, 92, 94, 96, 97, 99], "set_measurement_noise_estim": [60, 87, 89, 94, 96, 97, 99], "properli": [60, 87, 89, 94, 96, 97, 99], "appropri": [60, 87, 89, 94, 96, 97, 99, 138, 192], "est_mea": [60, 87, 89, 94, 96, 97, 99], "kf": [60, 88, 99], "accord": [60, 87, 89, 94, 96, 97, 99, 102, 103, 147, 205], "callabal": [60, 89, 94, 96, 99], "just": [60, 89, 94, 96, 99, 138, 225], "like": [60, 89, 94, 96, 99, 225], "neither": [60, 102], "base_filt": 61, "meas_noise_list": [61, 85], "meas_list": [61, 85], "enable_proc_noise_estim": 84, "specif": [84, 146, 156, 196, 197, 198, 199, 200, 201, 225], "expos": [84, 88, 194], "up": [84, 102, 103, 147, 185, 186, 205, 222, 225], "interactingmultiplemodel": [85, 229], "gcifilt": 85, "imm": [85, 86], "set_model": [85, 86, 229], "filter_lst": [85, 86], "model_tran": [85, 86, 229], "init_mean": [85, 86, 229], "init_cov": [85, 86, 229], "sever": [86, 187], "select": [86, 91, 92, 100], "best": [86, 185], "simul": [87, 229], "state_mat_arg": [87, 89, 94, 96, 97, 99, 229], "input_mat_arg": [87, 89, 94, 96, 97, 99], "meas_fun": [87, 91, 92, 94, 96, 97], "state_mat": [87, 89, 94, 96, 97, 99], "input_mat": [87, 89, 94, 96, 97, 99], "cont_tim": [87, 89, 94, 96, 97, 99], "state_mat_fun": [87, 89, 94, 96, 97, 99], "input_mat_fun": [87, 89, 94, 96, 97, 99], "expm": [87, 97], "left": [87, 97], "bmatrix": [87, 97], "right": [87, 97, 192, 193, 224], "matrixx": [87, 89, 94, 96, 97, 99], "inid": [87, 89, 94, 96, 97, 99], "improp": [87, 97], "mostli": [88, 197], "kernel_bandwidth": [89, 90], "unscentedkalmanfilt": [89, 90, 98, 100], "bandwidth": [89, 90], "kernel": [89, 90, 168, 170], "past_stat": [89, 90], "max": [89, 102, 185, 198, 227, 228], "ukf": [89, 90, 98, 99, 100], "init_sigma_point": [89, 98, 99], "state0": [89, 99, 147], "invalid": [89, 94, 96, 99, 192, 193], "unscentedparticlefilt": 90, "mcupf": 90, "extract_dist": [90, 91, 92, 100], "make_copi": [90, 91, 92, 100], "extract": [90, 91, 92, 100], "deepcopi": [90, 91, 92, 100], "init_from_dist": [90, 91, 92, 100], "dist": [90, 91, 92, 100, 228, 231], "init_particl": [90, 91, 92, 100], "particle_lst": [90, 91, 92, 100], "move_particl": [90, 91, 100], "old_weight": [90, 91, 100], "old_lik": [90, 100], "can_weight": [90, 100], "can_lik": [90, 100], "movement": [90, 91, 100], "mcmc": [90, 100], "move": [90, 91, 100, 102, 103, 126, 131, 147, 185], "modifi": [90, 92, 100, 119, 196, 197, 198, 199, 201, 208, 224, 226, 227, 231], "metropoli": [90, 100, 209], "hast": [90, 100, 209], "histogram": [90, 91, 92, 100], "heatmap": [90, 91, 92, 100], "count": [90, 91, 92, 100, 103], "plot_weighted_particl": [90, 91, 92, 100], "ukf_kwarg": [90, 100], "upf": [90, 100], "set_measur": [90, 100], "mcukf": 90, "meas_likelihood_fnc": [90, 91, 92, 100], "likelihood": [90, 91, 92, 100], "y_hat": [90, 91, 92, 100], "y_t": [90, 91, 92, 100], "vert": [90, 91, 92, 97, 100], "x_t": [90, 91, 92, 100], "w_t": [90, 91, 92, 100], "propto": [90, 100], "mathcal": [90, 100], "sync": [90, 100], "proposal_fnc": [90, 91, 92, 100], "propos": [90, 91, 92, 100], "hat": [90, 100], "_t": [90, 100, 228, 231], "proposal_sampling_fnc": [90, 91, 92, 100], "distribt": [90, 91, 92, 100], "transition_prob_fnc": [90, 91, 92, 100], "p_t": [90, 100], "use_mcmc": 91, "chain": 91, "mont": 91, "carlo": 91, "run": [91, 101, 182, 185, 222, 223, 225, 227, 228, 229, 231], "meas_likely_arg": [91, 92], "proposal_arg": [91, 92], "rel_lik": [91, 92, 100], "unnorm": [91, 92, 100], "inds_remov": [91, 92, 100], "were": [91, 92, 100, 147, 207], "sampling_arg": [91, 92], "transition_arg": [91, 92], "dyn_fun": [91, 92], "part_dist": 92, "resampl": 92, "sir": 92, "require_copy_prop_part": 92, "being": [92, 112, 147, 185, 225], "manipul": 92, "extern": 92, "require_copy_can_dist": 92, "candid": 92, "qkf": 93, "sqkf": [93, 95, 96], "howev": [93, 192, 193, 225], "better": [93, 149], "quadraturekalmanfilt": [93, 96], "easier": 94, "quadpoint": 94, "linalgerror": [94, 96, 99], "plot_quadratur": [94, 96], "Or": [94, 96], "qkfgaussianscalemixturefilt": 95, "squarerootqkf": 95, "dof": 97, "proc_noise_dof": 97, "meas_noise_dof": 97, "use_moment_match": 97, "limit": [97, 111, 224], "freedom": 97, "growth": 97, "gamma": [97, 169, 229], "pi": [97, 228, 229, 231], "sqrt": [97, 228, 229, 231], "compactli": 97, "st": 97, "np": [97, 172, 203, 204, 227, 228, 229, 231], "less": 97, "equal": [97, 192, 193, 228, 229], "calcualt": 97, "skqf": 98, "util": [98, 99, 160, 162, 164, 167, 176], "underli": [99, 193], "pure": 99, "simplif": 99, "made": [99, 103, 147, 222], "fix": [99, 209], "mcmcparticlefilterbas": 100, "move_kwarg": 100, "baseparam": [101, 102], "game": [101, 102, 103, 105, 117, 118, 120, 121, 122, 123, 126, 136, 138, 141, 147, 150, 158, 191, 192, 193], "physics2d": [101, 142, 143, 145, 149], "physics2dparam": 101, "start_tim": [101, 231], "max_tim": [101, 192], "To": [101, 223, 225], "unlimit": [101, 192], "config_fil": [102, 103, 147, 192, 193], "render_mod": [102, 103, 135, 147, 192, 193, 196, 197, 198, 199, 200, 201], "render_fp": [102, 103, 192, 193], "use_library_config": [102, 103], "logic": [102, 103, 111, 193], "entiti": [102, 103, 119, 121, 133, 136, 147, 192, 193], "subclass": 102, "entitymanag": [102, 118, 133], "render": [102, 103, 115, 126, 134, 135, 147, 192], "current_fram": 102, "score": [102, 103, 138, 144, 146, 147, 149], "accumul": 102, "game_ov": 102, "seed_val": 102, "fp": [102, 103, 136], "caus": [102, 103, 222], "parse_config_fil": [102, 103, 147], "register_param": [102, 103, 147], "regist": [102, 103, 147], "ruamel": [102, 103, 107, 147], "global": [102, 103, 107], "had": 102, "recreat": 102, "els": [102, 229], "s_collis": [102, 103, 147], "collis": [102, 103, 110, 127, 128, 131, 142, 143, 145, 147, 149, 203], "info": [102, 103, 111, 112, 113, 147, 192, 193], "s_game_ov": [102, 103, 147], "s_input": [102, 103, 147], "user": [102, 103, 147], "action": [102, 103, 147, 185, 192, 193, 196, 197, 198, 199, 200, 201, 223, 224], "s_movement": [102, 103, 147], "etc": [102, 103], "s_score": [102, 103, 146, 147], "abstact": [102, 103], "develop": [102, 222, 223], "respons": 102, "what": [102, 105, 125, 126, 132, 138, 139, 140, 142, 143, 144, 145, 146, 147, 148, 149], "infom": [102, 103, 147], "validate_config_fil": [102, 103, 147], "use_librari": [102, 103, 147], "cannot": [102, 103, 147], "basegam": 103, "done": [103, 192, 193, 225], "pygam": [103, 110, 115, 127, 128, 131, 132, 134, 135, 136, 137], "clock": [103, 134, 136], "window": [103, 104, 105, 128, 135, 136, 137, 147, 208, 225], "img": [103, 192, 193, 196, 197, 198, 199, 201], "pixel": [103, 105, 115, 116, 125, 128, 129, 130, 135, 136, 147, 198], "screen": [103, 136, 192, 193], "current_update_count": 103, "multipl": [103, 126, 147, 192, 193, 222, 225, 226], "dist_per_pix": [103, 129, 130], "real": [103, 126, 129, 130, 132, 142, 143, 147, 149, 185, 192], "width": [103, 105, 115, 125, 126, 128, 132, 135, 147, 185, 205, 227], "height": [103, 105, 115, 125, 126, 128, 132, 135, 147, 185, 205, 227], "append_name_to_kei": [103, 147], "in_dict": [103, 147], "prefix": [103, 147], "append": [103, 147], "place": [103, 147, 225], "prepend": [103, 147], "out": [103, 147, 192, 193, 224, 228, 231], "close": [103, 136, 137, 147, 186, 192, 193, 196, 197, 198, 199, 200, 201], "shutdown": [103, 147], "get_image_s": [103, 147], "s_render": [103, 147], "user_input": [103, 147], "integ": [103, 147, 192, 193], "id": [103, 113, 118, 119, 147, 192, 193, 222], "current_tim": [103, 147], "elapsed_tim": [103, 147], "amount": [103, 147], "elaps": [103, 147], "main": [104, 107, 126, 135, 136, 137, 144, 192, 193, 222, 229], "windowparam": 104, "dumper": 106, "interprett": 107, "came": 107, "b_type": 108, "loc": 108, "birth": [108, 138, 139, 145, 147], "through": [108, 126, 225], "randomli": 108, "capabl": [109, 145, 147, 149, 225], "hold": [109, 112, 113, 114, 147], "player": [109, 113, 144, 145, 147, 149, 192, 193], "chcking": 109, "aabb": 110, "rectangl": 110, "rect": [110, 115, 127, 128, 131], "pos_ind": [111, 147, 203, 231], "vel_ind": [111, 147], "state_low": [111, 147], "state_high": [111, 147], "rela": 111, "via": 111, "last_stat": 111, "lower": [111, 115, 147], "upper": [111, 147], "event": [112, 136, 141, 147, 222, 224], "identifi": [112, 119], "prob_of_death": [113, 142], "hazard": [113, 142, 144, 146, 147, 185, 193, 227], "death": [113, 146, 147], "entrance_tim": 113, "entranc": 113, "prioriti": [114, 149], "s_type": 115, "color": [115, 132, 206, 228, 229], "zorder": [115, 228, 229], "fpath": 115, "rgb": [115, 132, 197, 206], "triplet": [115, 132], "255": [115, 132], "sprite": 115, "sacl": 115, "spatial": 116, "center": [116, 142, 143, 149, 185, 228, 231], "last_po": 116, "__w": 117, "tox": [117, 223], "docs_html": [117, 225], "lib": 117, "python3": 117, "site": 117, "asset": 117, "e_id": 118, "tag": [118, 119, 222], "delet": [118, 119], "uniqu": [118, 147], "add_compon": 118, "comp": 118, "game_engin": [118, 138, 142, 143, 145, 147, 149], "destroi": [118, 147], "destruct": 118, "get_compon": 118, "has_compon": 118, "activ": 118, "aliv": 118, "creation": 119, "add_ent": 119, "queu": 119, "get_ent": 119, "get_entity_id": 119, "dead": [119, 147], "ones": [119, 207, 228, 229], "engin": [120, 123, 158], "low": 124, "graphic": 124, "step_factor": 126, "divid": 126, "increment": [126, 225], "inbetween": 126, "ensur": [126, 192, 193, 225], "don": 126, "too": 126, "far": 126, "min_po": [126, 129, 130, 185, 227, 231], "minimium": 126, "dist_width": 126, "world": 126, "dist_height": 126, "update_dt": 126, "bb1": [127, 131], "bb2": [127, 131], "bb": 128, "tran": 128, "leav": 128, "halt": 128, "ctransform": [128, 131], "out_sid": 128, "side": 128, "out_top": 128, "top": 128, "bottom": 128, "pt": [129, 130], "minimum": [129, 130, 146, 147, 148, 182, 185, 203], "translat": [129, 130], "trans1": 131, "trans2": 131, "resolv": 131, "collid": [131, 149], "cshape": 132, "drawabl": [133, 136], "human": [135, 136, 192, 193], "ignor": 135, "button": [136, 225], "hxwx3": 136, "nice": [137, 192, 193], "cbirth": [138, 147], "extra_param": [138, 140], "dimens": [138, 185, 197], "distrbut": 138, "affect": 138, "prob": 138, "doubleintegr": [139, 140, 228, 229, 231], "coordinatedturn": [139, 140], "velocity_turn": 139, "max_vel": [139, 148], "max_vel_x": 139, "max_vel_i": 139, "max_turn_r": 139, "controlmodel": 140, "controlmodelparam": 140, "stateconstraint": 140, "stateconstraintparam": 140, "enum": 141, "loc_x": [142, 143, 149], "loc_i": [142, 143, 149], "rendering2d": [142, 143, 145, 149], "shape2dparam": [142, 143, 145, 149], "collision2dparam": [142, 143, 145, 149], "dy": 142, "obstacl": [143, 144, 146, 147, 185, 203, 227, 228, 231], "base2dparam": 144, "playerparam": [144, 147], "targetparam": 144, "obstacleparam": 144, "hazardsparam": 144, "scoreparam": 144, "parametr": 145, "birthmodelparam": 145, "dynamicsparam": [145, 147], "hardwar": 145, "success": 145, "hit": [145, 146, 147], "simpleuav2d": [146, 193, 194], "hazard_multipli": 146, "death_scal": 146, "fo": 146, "death_decai": 146, "decai": 146, "death_penalti": 146, "time_penalti": 146, "missed_multipli": 146, "miss": 146, "wall_penalti": 146, "vel_penalti": 146, "extrem": 146, "min_vel_p": 146, "percentag": 146, "magnitud": 146, "basegame2d": 147, "uav": [147, 193], "static": 147, "cur_target_seq": 147, "target_seq": 147, "sort": 147, "ascend": [147, 181, 183], "all_cap": 147, "possibl": 147, "has_random_player_birth_tim": 147, "max_player_birth_tim": 147, "born": 147, "configuratin": 147, "basic_reward": 147, "reward": [147, 192, 193, 196, 197, 198, 199, 200, 201], "create_dynam": 147, "combo": 147, "create_hazard": 147, "create_obstacl": 147, "create_play": 147, "create_target": 147, "get_player_id": 147, "get_player_pos_vel_ind": 147, "get_player_state_bound": 147, "get_players_st": 147, "propagate_dynam": 147, "edyn": 147, "cdynam": 147, "met": [147, 192, 193], "spawn_play": 147, "spawn": 147, "spwan": 147, "min_vel": 148, "reltiv": 149, "avail": [149, 192, 193, 207, 225], "simpleuavhazards2d": [150, 194], "plan": [151, 185, 186, 223, 226, 227, 228, 231], "prebuilt": [159, 225], "mechan": 162, "fashion": 165, "epanechnikov": 168, "evalu": [168, 169, 170, 172, 173, 174, 175], "val": 168, "kernal": 168, "support": [169, 192], "complex": 169, "sig": 170, "fnc": [172, 173, 174, 175], "step_siz": [172, 174, 203], "0001220703125": 172, "hessian": 172, "central": [172, 173, 174, 175], "descript": 172, "finfo": 172, "ep": 172, "statespac": [173, 175], "jocobain": [173, 175], "jocobian": 173, "arguemnt": [173, 175], "get_jacobian": [173, 175], "jac": [173, 174, 175], "07": [174, 182], "argumet": 174, "jacobain": 174, "jaccobian": 175, "lst": 176, "log": [176, 222], "exponenti": 176, "trick": 176, "tot": 176, "classic": [177, 178], "rung": [177, 178], "kutta": [177, 178], "rk4": 178, "revers": 178, "p_lst": 179, "w_sum": [179, 180], "x_lst": 180, "lon_ascend": [181, 183], "lon_rat": 181, "tk": 181, "toe": 181, "node": [181, 183, 185, 203, 227], "week": 181, "ephemeri": 181, "mean_anom": 182, "ecc": [182, 184], "arg_lat": 183, "inc": 183, "inclin": 183, "ecc_anom": 184, "use_beam_search": [185, 227], "beam_search_max_nod": [185, 227], "30": [185, 227], "variou": 185, "gird": 185, "exampl": [185, 192, 193, 223, 226], "beam": [185, 230], "resolut": [185, 211], "set_map": [185, 227], "min": [185, 227, 228], "heurist": [185, 227], "funtion": 185, "overwritten": 185, "nuber": 185, "grid": [185, 186, 227, 229], "column": [185, 186, 199], "calc_heurist": 185, "endnod": 185, "curnod": 185, "goal": [185, 222], "calc_weight": [185, 227], "overridd": 185, "draw_end": 185, "draw_map": 185, "draw_start": 185, "startnod": 185, "final_path": 185, "closed_set": 185, "flatten": [185, 229], "get_map_cost": 185, "col": 185, "ind_to_po": 185, "colum": 185, "convers": 185, "is_valid": 185, "wall": 185, "start_po": [185, 227], "end_po": [185, 227], "functoin": 185, "escap": 185, "quit": 185, "effect": 185, "nx2": 185, "pos_to_ind": 185, "ravel_ind": 185, "multi_index": 185, "max_po": [185, 227, 231], "grid_r": [185, 227], "fourth": 185, "parent_idx": 186, "reinforc": 188, "learn": [188, 191], "rrt": [189, 203, 226, 230], "rl": [191, 192, 194], "openai": 191, "gym": [191, 192, 193, 195, 196, 197, 198, 199, 200, 201], "api": [191, 192, 193, 196, 198, 201, 223, 225], "compat": 191, "single_rgb_arrai": [192, 193], "obs_typ": 192, "player_st": 192, "aux_use_n_target": 192, "aux_use_tim": 192, "metadata": [192, 193, 196, 197, 198, 199, 200, 201], "plai": 192, "legaci": 192, "observ": [192, 193, 196, 197, 198, 199, 200, 201], "auxilari": [192, 193], "visibl": 192, "surpass": 192, "episod": [192, 193], "truncat": [192, 193], "observation_spac": [192, 196, 197, 198, 199, 200, 201], "calc_obs_spac": [192, 193], "aux": [192, 193], "both": [192, 193], "shut": [192, 193], "gen_act_map": [192, 193], "act_map": [192, 193], "return_info": [192, 193], "moreov": [192, 193], "typic": [192, 193], "never": [192, 193], "again": [192, 193], "prng": [192, 193], "chosen": [192, 193], "entropi": [192, 193], "timestamp": [192, 193], "dev": [192, 193, 225], "urandom": [192, 193], "you": [192, 193, 222, 225], "even": [192, 193], "usual": [192, 193], "want": [192, 193], "along": [192, 193], "analog": [192, 193], "additon": [192, 193], "deprec": [192, 193], "pseudorandom": [192, 193], "we": [192, 193], "captur": [192, 193], "aren": [192, 193], "accident": [192, 193], "reproduc": [192, 193], "often": [192, 193], "won": [192, 193, 222], "action_spac": [192, 193, 196, 197, 198, 199, 200, 201], "acttyp": [192, 193, 196, 197, 198, 199, 200, 201], "float32": [192, 193], "np_random": [192, 193, 196, 197, 198, 199, 200, 201], "randomnumbergener": [192, 193, 196, 197, 198, 199, 200, 201], "_np_random": [192, 193], "initialis": [192, 193], "unwrap": [192, 193, 196, 197, 198, 199, 200, 201], "wrap": [192, 193, 196, 197, 198, 199, 200, 201], "num_stack": [196, 198, 201], "observationwrapp": [196, 197, 198, 199, 201], "similar": [196, 198, 201], "open": [196, 197, 198, 201, 225], "ai": [196, 197, 198, 201], "insid": [196, 197, 198, 201], "lazyfram": [196, 198, 201], "modular": [196, 198, 201], "new_step_api": [196, 198, 201], "whether": [196, 198, 201, 224], "classmethod": [196, 197, 198, 199, 200, 201], "class_nam": [196, 197, 198, 199, 200, 201], "ob": [196, 197, 198, 199, 201, 228, 231], "proper": [196, 197, 198, 199, 201, 208], "self": [196, 197, 198, 199, 201], "str": [196, 197, 198, 199, 200, 201], "reward_rang": [196, 197, 198, 199, 200, 201], "supportsfloat": [196, 197, 198, 199, 200, 201], "spec": [196, 197, 198, 199, 200, 201], "keep_dim": 197, "grai": 197, "initialz": 197, "channel": 197, "teh": 197, "n_row": 199, "n_col": 199, "resiz": 199, "frame_skip": 200, "obstyp": 200, "stack": 201, "averag": 201, "lqrrrtstar": [202, 231], "planner": [203, 231], "goal_sample_r": 203, "300": [203, 229, 231], "connect_circle_dist": 203, "expand_di": 203, "sampling_fun": [203, 231], "node_list": 203, "tree": [203, 204], "min_rand": 203, "max_rand": 203, "radnom": 203, "ell_con": 203, "ellipsoid": 203, "nob": 203, "obstacle_list": 203, "describ": 203, "riccatti": 203, "sv": 204, "n_sig": 205, "caluc": 205, "dark2": 206, "thata": 206, "distinct": 206, "mpl": 206, "colormap": 206, "pyplot": [206, 229], "cm": 206, "sig_bnd": 207, "true_stat": 207, "pcg64": 207, "0x7f25934574a0": 207, "meas_ind": 207, "ttl_fontsiz": 207, "ttl_fontstyl": 207, "ttl_fontfamili": 207, "san": 207, "serif": 207, "ax_fonts": 207, "ax_fontstyl": 207, "ax_fontfamili": 207, "legend": 207, "rnd": [207, 229], "default_rng": [207, 229, 231], "gate": 207, "font": 207, "style": [207, 208], "famili": [207, 208], "opt": [207, 208], "z_lbl": 208, "use_loc": 208, "matplot": 208, "edit": [208, 225], "ax": [208, 228, 229], "becom": 208, "suptitl": [208, 229], "confirm": 209, "fget": 210, "fset": 210, "mro": 211, "func": 212, "earth": 213, "east": 214, "west": 214, "north": 216, "south": 216, "v_n": 217, "transport": 217, "bin_fil": 220, "below": 221, "constantli": 222, "test": [222, 223, 225], "upon": 222, "push": 222, "repo": [222, 225], "project": [222, 225], "achiev": 222, "technologi": 222, "travi": 222, "jenkin": 222, "workflow": [222, 223], "autom": [222, 225], "releas": 222, "python": [222, 223, 225], "build": [222, 225], "publish": [222, 224], "them": [222, 225], "registri": 222, "gh": 222, "branch": 222, "websit": 222, "commit": [222, 225], "messag": 222, "summar": 222, "yml": 222, "syntax": 222, "job": 222, "parallel": 222, "trigger": 222, "execut": 222, "remot": 222, "your": [222, 225], "git": [222, 225], "now": [222, 225], "addition": [222, 225], "server": 222, "NOT": [222, 224], "machin": [222, 225], "fresh": 222, "clean": 222, "diretori": 222, "runner": 222, "typicali": 222, "checkout": 222, "sequenti": 222, "wherea": 222, "usag": 223, "toolchain": 223, "ci": 223, "pipelin": 223, "github": 223, "quick": 223, "guid": 223, "coverag": [223, 225], "lager": 223, "homepag": 223, "licens": 223, "laboratori": 223, "autonomi": 223, "alabama": 223, "ua": 223, "simpli": [223, 225], "pip": 223, "instal": [223, 225], "pleas": 223, "framework": 223, "misc": 223, "author": [223, 224], "jordan": [223, 224], "larson": [223, 224], "ryan": 223, "thoma": 223, "vincent": 223, "hill": 223, "vaughn": 223, "weiren": 223, "howpublish": 223, "web": [223, 225], "ython": 223, "uidanc": 223, "avig": 223, "ontrol": 223, "year": 223, "2019": 223, "com": 223, "drjdlarson": 223, "mit": 224, "copyright": 224, "2020": 224, "permiss": 224, "herebi": 224, "grant": 224, "free": 224, "charg": 224, "person": 224, "obtain": 224, "softwar": 224, "deal": 224, "restrict": 224, "merg": 224, "sublicens": 224, "sell": 224, "permit": 224, "whom": 224, "furnish": 224, "subject": 224, "abov": 224, "notic": 224, "shall": 224, "substanti": 224, "THE": 224, "AS": 224, "warranti": 224, "OF": 224, "kind": 224, "express": 224, "OR": 224, "BUT": 224, "TO": 224, "merchant": 224, "FOR": 224, "particular": 224, "AND": 224, "noninfring": 224, "IN": 224, "NO": 224, "holder": 224, "BE": 224, "liabl": 224, "claim": 224, "damag": 224, "liabil": 224, "contract": 224, "tort": 224, "aris": 224, "connect": [224, 225], "WITH": 224, "how": [225, 226], "pytest": 225, "summari": 225, "sphinx": 225, "black": 225, "formatt": 225, "auto": 225, "semant": 225, "break": 225, "docker": 225, "tool": 225, "compil": 225, "overview": 225, "eas": 225, "sure": [225, 231], "mac": 225, "linux": 225, "clone": 225, "repositori": 225, "subsystem": 225, "sub": 225, "folder": 225, "access": 225, "browser": 225, "wsl": 225, "address": 225, "click": 225, "distro": 225, "Then": 225, "prompt": 225, "ye": 225, "palett": 225, "ie": 225, "view": 225, "attempt": 225, "those": 225, "mark": 225, "slow": 225, "comment": 225, "pull": 225, "correctli": 225, "clean_doc": 225, "documen": 225, "html": 225, "doc": 225, "virtual": 225, "ini": 225, "envrion": 225, "av": 225, "replac": 225, "runslow": 225, "py39": 225, "validation_test": 225, "live": 225, "horzon": 226, "elqr": [226, 230], "interact": 226, "def": [227, 228, 229, 231], "normal_a_star": 227, "a_star": 227, "astar": 227, "50": [227, 228, 231], "concaten": 227, "61": 227, "40": 227, "44": 227, "36": 227, "75": 227, "region": 227, "beam_search": 227, "rememb": 227, "weighted_a_star": 227, "overrid": 227, "linear_inf_horizon": 228, "gdyn": [228, 231], "reshap": [228, 229, 231], "lambda": [228, 231], "_arg": [228, 231], "ey": [228, 229, 231], "len": [228, 231], "linear_finite_horizon": 228, "200": [228, 229], "nonlin_finite_hor": 228, "d2r": [228, 229, 231], "180": [228, 229, 231], "45": 228, "curvilinearmot": [228, 231], "diag": [228, 229, 231], "gplot": [228, 229], "gctrl": [228, 231], "irobotcr": 228, "150": 228, "start_stat": [228, 231], "335": 228, "circular": [228, 231], "35": [228, 231], "enviorn": [228, 231], "bottom_left": 228, "top_right": 228, "obs_factor": [228, 231], "scale_factor": [228, 231], "non_quadratic_cost": [228, 231], "_obstacl": [228, 231], "_obs_factor": [228, 231], "_scale_factor": [228, 231], "_bottom_left": [228, 231], "_top_right": [228, 231], "diff": [228, 231], "ravel": [228, 229, 231], "sign": [228, 231], "signed_dist": [228, 231], "ii": [228, 229, 231], "enumer": [228, 229, 231], "obect": 228, "plt": [228, 229], "add_subplot": [228, 229], "set_aspect": [228, 229], "adjust": [228, 229], "set_xlim": 228, "set_ylim": 228, "scatter": 228, "add_patch": 228, "set_title_label": [228, 229], "state_trajectori": 228, "control_sign": 228, "modify_quadrat": 228, "rot_cost": [228, 231], "vstack": [228, 231], "m_nois": 229, "02": 229, "p_nois": 229, "t0": 229, "t1": 229, "arang": 229, "filt": 229, "m_mat": 229, "truth": 229, "std": 229, "t_state": 229, "kk": 229, "n_state": 229, "standard_norm": 229, "est": 229, "set_ylabel": 229, "tight_layout": 229, "coordinatedturnunknown": 229, "coordinatedturnknown": 229, "r2d": 229, "p_posx_std": 229, "p_posy_std": 229, "p_velx_std": 229, "p_vely_std": 229, "p_turn_std": 229, "m_posx_std": 229, "m_posy_std": 229, "truedyn": 229, "coordturn": 229, "linestyl": 229, "002": 229, "004": 229, "dyn_obj1": 229, "dyn_obj2": 229, "in_filt1": 229, "in_filt2": 229, "vx0": 229, "vy0": 229, "filt_list": 229, "pre_std": 229, "err": 229, "set_xlabel": 229, "fig2": 229, "ab": 229, "deviat": 229, "lin_lqrrrtstar": 231, "rrt_star": 231, "minxi": 231, "maxxi": 231, "search_area": 231, "sampler": 231, "uniform": 231, "set_environ": 231, "set_control_model": 231, "u_traj": 231, "use_converg": 231, "nonlin_lqrrrtstar": 231, "ang": 231, "90": 231, "001": 231, "bnd": 231, "while": 231, "elqrrrtstar": 231, "extendedlqrrrtstar": 231, "controller_arg": 231, "05": 231, "show_plann": 231}, "objects": {"": [[1, 0, 0, "-", "gncpy"]], "gncpy": [[151, 0, 0, "-", "control"], [152, 0, 0, "-", "coordinate_transforms"], [153, 0, 0, "-", "data_fusion"], [154, 0, 0, "-", "distributions"], [155, 0, 0, "-", "dynamics"], [156, 0, 0, "-", "errors"], [157, 0, 0, "-", "filters"], [158, 0, 0, "-", "game_engine"], [159, 0, 0, "-", "games"], [160, 0, 0, "-", "math"], [161, 0, 0, "-", "measurements"], [162, 0, 0, "-", "orbital_mechanics"], [163, 0, 0, "-", "planning"], [164, 0, 0, "-", "plotting"], [165, 0, 0, "-", "sampling"], [166, 0, 0, "-", "utilities"], [167, 0, 0, "-", "wgs84"]], "gncpy.control": [[3, 0, 0, "-", "elqr"], [4, 0, 0, "-", "lqr"]], "gncpy.control.elqr": [[2, 1, 1, "", "ELQR"]], "gncpy.control.elqr.ELQR": [[2, 2, 1, "", "Q"], [2, 2, 1, "", "R"], [2, 3, 1, "", "__init__"], [2, 3, 1, "", "backward_pass"], [2, 3, 1, "", "calculate_control"], [2, 3, 1, "", "cost_function"], [2, 4, 1, "", "ct_come_mats"], [2, 4, 1, "", "ct_come_vecs"], [2, 2, 1, "", "dt"], [2, 3, 1, "", "forward_pass"], [2, 3, 1, "", "get_state_space"], [2, 4, 1, "", "gif_frame_skip"], [2, 4, 1, "", "max_iters"], [2, 3, 1, "", "prop_state"], [2, 3, 1, "", "prop_state_backward"], [2, 3, 1, "", "prop_state_forward"], [2, 3, 1, "", "quadratize_cost"], [2, 3, 1, "", "reset"], [2, 3, 1, "", "set_cost_model"], [2, 3, 1, "", "set_state_model"], [2, 3, 1, "", "solve_dare"], [2, 4, 1, "", "tol"], [2, 4, 1, "", "use_custom_cost"]], "gncpy.control.lqr": [[5, 1, 1, "", "LQR"]], "gncpy.control.lqr.LQR": [[5, 2, 1, "", "Q"], [5, 2, 1, "", "R"], [5, 3, 1, "", "__init__"], [5, 3, 1, "", "backward_pass"], [5, 3, 1, "", "calculate_control"], [5, 3, 1, "", "cost_function"], [5, 4, 1, "", "ct_go_mats"], [5, 4, 1, "", "ct_go_vecs"], [5, 2, 1, "", "dt"], [5, 4, 1, "", "dynObj"], [5, 4, 1, "", "end_state"], [5, 4, 1, "", "feedback_gain"], [5, 4, 1, "", "feedthrough_gain"], [5, 3, 1, "", "get_state_space"], [5, 4, 1, "", "hard_constraints"], [5, 3, 1, "", "prop_state"], [5, 3, 1, "", "prop_state_backward"], [5, 3, 1, "", "set_cost_model"], [5, 3, 1, "", "set_state_model"], [5, 3, 1, "", "solve_dare"], [5, 4, 1, "", "time_horizon"], [5, 4, 1, "", "u_nom"]], "gncpy.coordinate_transforms": [[6, 5, 1, "", "ecef_to_LLA"], [7, 5, 1, "", "ecef_to_NED"], [8, 5, 1, "", "lla_to_ECEF"], [9, 5, 1, "", "lla_to_NED"], [10, 5, 1, "", "ned_to_LLA"]], "gncpy.data_fusion": [[11, 5, 1, "", "GeneralizedCovarianceIntersection"]], "gncpy.distributions": [[12, 1, 1, "", "Particle"], [13, 1, 1, "", "ParticleDistribution"], [14, 1, 1, "", "QuadraturePoints"], [15, 1, 1, "", "SigmaPoints"], [16, 1, 1, "", "SimpleParticleDistribution"]], "gncpy.distributions.Particle": [[12, 3, 1, "", "__init__"], [12, 2, 1, "", "mean"], [12, 4, 1, "", "point"], [12, 4, 1, "", "sigmaPoints"], [12, 4, 1, "", "uncertainty"]], "gncpy.distributions.ParticleDistribution": [[13, 3, 1, "", "__init__"], [13, 3, 1, "", "add_particle"], [13, 3, 1, "", "clear_particles"], [13, 2, 1, "", "covariance"], [13, 2, 1, "", "mean"], [13, 2, 1, "", "num_particles"], [13, 2, 1, "", "particles"], [13, 2, 1, "", "uncertainties"], [13, 3, 1, "", "update_weights"], [13, 2, 1, "", "weights"]], "gncpy.distributions.QuadraturePoints": [[14, 3, 1, "", "__init__"], [14, 2, 1, "", "cov"], [14, 2, 1, "", "mean"], [14, 4, 1, "", "num_axes"], [14, 2, 1, "", "num_points"], [14, 3, 1, "", "plot_points"], [14, 4, 1, "", "points"], [14, 4, 1, "", "points_per_axis"], [14, 3, 1, "", "update_points"], [14, 4, 1, "", "weights"]], "gncpy.distributions.SigmaPoints": [[15, 3, 1, "", "__init__"], [15, 4, 1, "", "alpha"], [15, 4, 1, "", "beta"], [15, 2, 1, "", "cov"], [15, 3, 1, "", "init_weights"], [15, 4, 1, "", "kappa"], [15, 2, 1, "", "lam"], [15, 2, 1, "", "mean"], [15, 2, 1, "", "num_points"], [15, 3, 1, "", "plot_points"], [15, 3, 1, "", "update_points"], [15, 2, 1, "", "weights_cov"], [15, 2, 1, "", "weights_mean"]], "gncpy.distributions.SimpleParticleDistribution": [[16, 3, 1, "", "__init__"], [16, 3, 1, "", "plot_particles"]], "gncpy.dynamics": [[52, 0, 0, "-", "aircraft"], [53, 0, 0, "-", "basic"]], "gncpy.dynamics.aircraft": [[17, 0, 0, "-", "simple_multirotor"]], "gncpy.dynamics.aircraft.simple_multirotor": [[18, 1, 1, "", "AeroParams"], [19, 1, 1, "", "AircraftParams"], [20, 1, 1, "", "Effector"], [21, 1, 1, "", "Environment"], [22, 1, 1, "", "GeoParams"], [23, 1, 1, "", "MassParams"], [24, 1, 1, "", "MotorParams"], [25, 1, 1, "", "PropParams"], [26, 1, 1, "", "SimpleMultirotor"], [27, 1, 1, "", "Vehicle"]], "gncpy.dynamics.aircraft.simple_multirotor.AeroParams": [[18, 3, 1, "", "__init__"], [18, 4, 1, "", "cd"]], "gncpy.dynamics.aircraft.simple_multirotor.AircraftParams": [[19, 3, 1, "", "__init__"], [19, 4, 1, "", "aero"], [19, 4, 1, "", "geo"], [19, 4, 1, "", "mass"], [19, 4, 1, "", "motor"], [19, 4, 1, "", "prop"]], "gncpy.dynamics.aircraft.simple_multirotor.Effector": [[20, 3, 1, "", "__init__"], [20, 3, 1, "", "step"]], "gncpy.dynamics.aircraft.simple_multirotor.Environment": [[21, 3, 1, "", "__init__"], [21, 4, 1, "", "state"], [21, 3, 1, "", "step"]], "gncpy.dynamics.aircraft.simple_multirotor.GeoParams": [[22, 3, 1, "", "__init__"], [22, 4, 1, "", "front_area_m2"]], "gncpy.dynamics.aircraft.simple_multirotor.MassParams": [[23, 3, 1, "", "__init__"], [23, 4, 1, "", "cg_m"], [23, 4, 1, "", "inertia_kgm2"], [23, 4, 1, "", "mass_kg"]], "gncpy.dynamics.aircraft.simple_multirotor.MotorParams": [[24, 3, 1, "", "__init__"], [24, 4, 1, "", "dir"], [24, 2, 1, "", "num_motors"], [24, 4, 1, "", "pos_m"]], "gncpy.dynamics.aircraft.simple_multirotor.PropParams": [[25, 3, 1, "", "__init__"], [25, 4, 1, "", "poly_thrust"], [25, 4, 1, "", "poly_torque"]], "gncpy.dynamics.aircraft.simple_multirotor.SimpleMultirotor": [[26, 3, 1, "", "__init__"], [26, 4, 1, "", "effector"], [26, 4, 1, "", "env"], [26, 3, 1, "", "get_input_mat"], [26, 3, 1, "", "get_state_mat"], [26, 3, 1, "", "propagate_state"], [26, 3, 1, "", "set_initial_conditions"], [26, 4, 1, "", "state_map"], [26, 4, 1, "", "state_names"], [26, 4, 1, "", "state_units"], [26, 3, 1, "", "validate_params_file"], [26, 4, 1, "", "vehicle"]], "gncpy.dynamics.aircraft.simple_multirotor.Vehicle": [[27, 3, 1, "", "__init__"], [27, 3, 1, "", "calc_derived_states"], [27, 3, 1, "", "eul_to_dcm"], [27, 4, 1, "", "params"], [27, 4, 1, "", "ref_lat"], [27, 4, 1, "", "ref_lon"], [27, 3, 1, "", "set_dcm_earth2body"], [27, 4, 1, "", "state"], [27, 3, 1, "", "step"], [27, 4, 1, "", "takenoff"]], "gncpy.dynamics.basic": [[35, 0, 0, "-", "clohessy_wiltshire_orbit"], [36, 0, 0, "-", "clohessy_wiltshire_orbit2d"], [37, 0, 0, "-", "coordinated_turn_known"], [38, 0, 0, "-", "coordinated_turn_unknown"], [39, 0, 0, "-", "curvilinear_motion"], [40, 0, 0, "-", "double_integrator"], [41, 0, 0, "-", "dynamics_base"], [42, 0, 0, "-", "irobot_create"], [43, 0, 0, "-", "karlgaard_orbit"], [44, 0, 0, "-", "linear_dynamics_base"], [45, 0, 0, "-", "nonlinear_dynamics_base"], [46, 0, 0, "-", "tschauner_hempel_orbit"]], "gncpy.dynamics.basic.clohessy_wiltshire_orbit": [[28, 1, 1, "", "ClohessyWiltshireOrbit"]], "gncpy.dynamics.basic.clohessy_wiltshire_orbit.ClohessyWiltshireOrbit": [[28, 3, 1, "", "__init__"], [28, 3, 1, "", "get_dis_process_noise_mat"], [28, 3, 1, "", "get_input_mat"], [28, 3, 1, "", "get_state_mat"], [28, 4, 1, "", "mean_motion"], [28, 3, 1, "", "propagate_state"], [28, 2, 1, "", "state_names"]], "gncpy.dynamics.basic.clohessy_wiltshire_orbit2d": [[29, 1, 1, "", "ClohessyWiltshireOrbit2d"]], "gncpy.dynamics.basic.clohessy_wiltshire_orbit2d.ClohessyWiltshireOrbit2d": [[29, 3, 1, "", "__init__"], [29, 3, 1, "", "get_dis_process_noise_mat"], [29, 3, 1, "", "get_input_mat"], [29, 3, 1, "", "get_state_mat"], [29, 4, 1, "", "mean_motion"], [29, 3, 1, "", "propagate_state"], [29, 2, 1, "", "state_names"]], "gncpy.dynamics.basic.coordinated_turn_known": [[30, 1, 1, "", "CoordinatedTurnKnown"]], "gncpy.dynamics.basic.coordinated_turn_known.CoordinatedTurnKnown": [[30, 3, 1, "", "__init__"], [30, 3, 1, "", "get_dis_process_noise_mat"], [30, 3, 1, "", "get_input_mat"], [30, 3, 1, "", "get_state_mat"], [30, 3, 1, "", "propagate_state"], [30, 4, 1, "", "state_names"], [30, 4, 1, "", "turn_rate"]], "gncpy.dynamics.basic.coordinated_turn_unknown": [[31, 1, 1, "", "CoordinatedTurnUnknown"]], "gncpy.dynamics.basic.coordinated_turn_unknown.CoordinatedTurnUnknown": [[31, 3, 1, "", "__init__"], [31, 2, 1, "", "alpha"], [31, 2, 1, "", "beta"], [31, 2, 1, "", "cont_fnc_lst"], [31, 3, 1, "", "get_input_mat"], [31, 3, 1, "", "get_state_mat"], [31, 3, 1, "", "propagate_state"], [31, 4, 1, "", "state_names"], [31, 4, 1, "", "turn_rate_cor_time"]], "gncpy.dynamics.basic.curvilinear_motion": [[32, 1, 1, "", "CurvilinearMotion"]], "gncpy.dynamics.basic.curvilinear_motion.CurvilinearMotion": [[32, 3, 1, "", "__init__"], [32, 2, 1, "", "cont_fnc_lst"], [32, 3, 1, "", "get_input_mat"], [32, 3, 1, "", "get_state_mat"], [32, 3, 1, "", "propagate_state"], [32, 4, 1, "", "state_names"]], "gncpy.dynamics.basic.double_integrator": [[33, 1, 1, "", "DoubleIntegrator"]], "gncpy.dynamics.basic.double_integrator.DoubleIntegrator": [[33, 3, 1, "", "__init__"], [33, 3, 1, "", "get_dis_process_noise_mat"], [33, 3, 1, "", "get_input_mat"], [33, 3, 1, "", "get_state_mat"], [33, 3, 1, "", "propagate_state"], [33, 2, 1, "", "state_names"]], "gncpy.dynamics.basic.dynamics_base": [[34, 1, 1, "", "DynamicsBase"]], "gncpy.dynamics.basic.dynamics_base.DynamicsBase": [[34, 3, 1, "", "__init__"], [34, 4, 1, "", "control_model"], [34, 3, 1, "", "get_input_mat"], [34, 3, 1, "", "get_state_mat"], [34, 3, 1, "", "propagate_state"], [34, 4, 1, "", "state_constraint"], [34, 4, 1, "", "state_names"]], "gncpy.dynamics.basic.irobot_create": [[47, 1, 1, "", "IRobotCreate"]], "gncpy.dynamics.basic.irobot_create.IRobotCreate": [[47, 3, 1, "", "__init__"], [47, 2, 1, "", "cont_fnc_lst"], [47, 3, 1, "", "get_input_mat"], [47, 3, 1, "", "get_state_mat"], [47, 3, 1, "", "propagate_state"], [47, 4, 1, "", "state_names"], [47, 2, 1, "", "wheel_separation"]], "gncpy.dynamics.basic.karlgaard_orbit": [[48, 1, 1, "", "KarlgaardOrbit"]], "gncpy.dynamics.basic.karlgaard_orbit.KarlgaardOrbit": [[48, 3, 1, "", "__init__"], [48, 2, 1, "", "cont_fnc_lst"], [48, 3, 1, "", "get_input_mat"], [48, 3, 1, "", "get_state_mat"], [48, 3, 1, "", "propagate_state"], [48, 4, 1, "", "state_names"]], "gncpy.dynamics.basic.linear_dynamics_base": [[49, 1, 1, "", "LinearDynamicsBase"]], "gncpy.dynamics.basic.linear_dynamics_base.LinearDynamicsBase": [[49, 3, 1, "", "__init__"], [49, 3, 1, "", "get_dis_process_noise_mat"], [49, 3, 1, "", "get_input_mat"], [49, 3, 1, "", "get_state_mat"], [49, 3, 1, "", "propagate_state"], [49, 4, 1, "", "state_names"]], "gncpy.dynamics.basic.nonlinear_dynamics_base": [[50, 1, 1, "", "NonlinearDynamicsBase"]], "gncpy.dynamics.basic.nonlinear_dynamics_base.NonlinearDynamicsBase": [[50, 3, 1, "", "__init__"], [50, 2, 1, "", "cont_fnc_lst"], [50, 4, 1, "", "dt"], [50, 3, 1, "", "get_input_mat"], [50, 3, 1, "", "get_state_mat"], [50, 4, 1, "", "integrator_params"], [50, 4, 1, "", "integrator_type"], [50, 3, 1, "", "propagate_state"], [50, 4, 1, "", "state_names"]], "gncpy.dynamics.basic.tschauner_hempel_orbit": [[51, 1, 1, "", "TschaunerHempelOrbit"]], "gncpy.dynamics.basic.tschauner_hempel_orbit.TschaunerHempelOrbit": [[51, 3, 1, "", "__init__"], [51, 2, 1, "", "cont_fnc_lst"], [51, 4, 1, "", "eccentricity"], [51, 3, 1, "", "get_input_mat"], [51, 3, 1, "", "get_state_mat"], [51, 4, 1, "", "mu"], [51, 3, 1, "", "propagate_state"], [51, 4, 1, "", "semi_major"], [51, 4, 1, "", "state_names"]], "gncpy.errors": [[54, 6, 1, "", "ExtremeMeasurementNoiseError"], [55, 6, 1, "", "ParticleDepletionError"], [56, 6, 1, "", "ParticleEstimationDomainError"]], "gncpy.filters": [[62, 0, 0, "-", "bayes_filter"], [63, 0, 0, "-", "bootstrap_filter"], [64, 0, 0, "-", "ekf_gaussian_scale_mixture_filter"], [65, 0, 0, "-", "extended_kalman_filter"], [66, 0, 0, "-", "gci_filter"], [67, 0, 0, "-", "gsm_filter_base"], [68, 0, 0, "-", "imm_gci_filter"], [69, 0, 0, "-", "interacting_multiple_model"], [70, 0, 0, "-", "kalman_filter"], [71, 0, 0, "-", "kf_gaussian_scale_mixture_filter"], [72, 0, 0, "-", "max_corr_ent_ukf"], [73, 0, 0, "-", "max_corr_ent_upf"], [74, 0, 0, "-", "mcmc_particle_filter_base"], [75, 0, 0, "-", "particle_filter"], [76, 0, 0, "-", "qkf_gaussian_scale_mixture_filter"], [77, 0, 0, "-", "quadrature_kalman_filter"], [78, 0, 0, "-", "sqkf_gaussian_scale_mixture_filter"], [79, 0, 0, "-", "square_root_qkf"], [80, 0, 0, "-", "students_t_filter"], [81, 0, 0, "-", "ukf_gaussian_scale_mixture_filter"], [82, 0, 0, "-", "unscented_kalman_filter"], [83, 0, 0, "-", "unscented_particle_filter"]], "gncpy.filters.bayes_filter": [[57, 1, 1, "", "BayesFilter"]], "gncpy.filters.bayes_filter.BayesFilter": [[57, 3, 1, "", "__init__"], [57, 3, 1, "", "correct"], [57, 3, 1, "", "load_filter_state"], [57, 3, 1, "", "predict"], [57, 3, 1, "", "save_filter_state"], [57, 3, 1, "", "set_measurement_model"], [57, 3, 1, "", "set_state_model"], [57, 4, 1, "", "use_cholesky_inverse"]], "gncpy.filters.bootstrap_filter": [[58, 1, 1, "", "BootstrapFilter"]], "gncpy.filters.bootstrap_filter.BootstrapFilter": [[58, 3, 1, "", "__init__"], [58, 3, 1, "", "correct"], [58, 4, 1, "", "filt_state"], [58, 3, 1, "", "load_filter_state"], [58, 3, 1, "", "plot_particles"], [58, 3, 1, "", "predict"], [58, 3, 1, "", "save_filter_state"], [58, 3, 1, "", "set_measurement_model"], [58, 3, 1, "", "set_state_model"]], "gncpy.filters.ekf_gaussian_scale_mixture_filter": [[59, 1, 1, "", "EKFGaussianScaleMixtureFilter"]], "gncpy.filters.ekf_gaussian_scale_mixture_filter.EKFGaussianScaleMixtureFilter": [[59, 3, 1, "", "__init__"], [59, 2, 1, "", "cont_cov"], [59, 3, 1, "", "correct"], [59, 2, 1, "", "cov"], [59, 2, 1, "", "dt"], [59, 4, 1, "", "filt_state"], [59, 2, 1, "", "integrator_params"], [59, 2, 1, "", "integrator_type"], [59, 3, 1, "", "load_filter_state"], [59, 2, 1, "", "meas_noise"], [59, 3, 1, "", "plot_particles"], [59, 3, 1, "", "predict"], [59, 2, 1, "", "proc_noise"], [59, 3, 1, "", "save_filter_state"], [59, 3, 1, "", "set_meas_noise_model"], [59, 3, 1, "", "set_measurement_model"], [59, 3, 1, "", "set_process_noise_model"], [59, 3, 1, "", "set_state_model"]], "gncpy.filters.extended_kalman_filter": [[60, 1, 1, "", "ExtendedKalmanFilter"]], "gncpy.filters.extended_kalman_filter.ExtendedKalmanFilter": [[60, 3, 1, "", "__init__"], [60, 4, 1, "", "cont_cov"], [60, 3, 1, "", "correct"], [60, 4, 1, "", "filt_state"], [60, 4, 1, "", "integrator_params"], [60, 4, 1, "", "integrator_type"], [60, 3, 1, "", "load_filter_state"], [60, 3, 1, "", "predict"], [60, 3, 1, "", "save_filter_state"], [60, 3, 1, "", "set_measurement_model"], [60, 3, 1, "", "set_measurement_noise_estimator"], [60, 3, 1, "", "set_state_model"]], "gncpy.filters.gci_filter": [[61, 1, 1, "", "GCIFilter"]], "gncpy.filters.gci_filter.GCIFilter": [[61, 3, 1, "", "__init__"], [61, 3, 1, "", "correct"], [61, 3, 1, "", "load_filter_state"], [61, 3, 1, "", "predict"], [61, 3, 1, "", "save_filter_state"], [61, 3, 1, "", "set_measurement_model"], [61, 3, 1, "", "set_state_model"]], "gncpy.filters.gsm_filter_base": [[84, 1, 1, "", "GSMFilterBase"]], "gncpy.filters.gsm_filter_base.GSMFilterBase": [[84, 3, 1, "", "__init__"], [84, 3, 1, "", "correct"], [84, 2, 1, "", "cov"], [84, 4, 1, "", "enable_proc_noise_estimation"], [84, 4, 1, "", "filt_state"], [84, 3, 1, "", "load_filter_state"], [84, 2, 1, "", "meas_noise"], [84, 3, 1, "", "plot_particles"], [84, 3, 1, "", "predict"], [84, 2, 1, "", "proc_noise"], [84, 3, 1, "", "save_filter_state"], [84, 3, 1, "", "set_meas_noise_model"], [84, 3, 1, "", "set_measurement_model"], [84, 3, 1, "", "set_process_noise_model"], [84, 3, 1, "", "set_state_model"]], "gncpy.filters.imm_gci_filter": [[85, 1, 1, "", "IMMGCIFilter"]], "gncpy.filters.imm_gci_filter.IMMGCIFilter": [[85, 3, 1, "", "__init__"], [85, 3, 1, "", "correct"], [85, 2, 1, "", "cov"], [85, 4, 1, "", "filt_state"], [85, 3, 1, "", "load_filter_state"], [85, 3, 1, "", "predict"], [85, 3, 1, "", "save_filter_state"], [85, 3, 1, "", "set_measurement_model"], [85, 3, 1, "", "set_models"], [85, 3, 1, "", "set_state_model"]], "gncpy.filters.interacting_multiple_model": [[86, 1, 1, "", "InteractingMultipleModel"]], "gncpy.filters.interacting_multiple_model.InteractingMultipleModel": [[86, 3, 1, "", "__init__"], [86, 3, 1, "", "correct"], [86, 2, 1, "", "cov"], [86, 4, 1, "", "filt_state"], [86, 3, 1, "", "load_filter_state"], [86, 3, 1, "", "predict"], [86, 3, 1, "", "save_filter_state"], [86, 3, 1, "", "set_models"]], "gncpy.filters.kalman_filter": [[87, 1, 1, "", "KalmanFilter"]], "gncpy.filters.kalman_filter.KalmanFilter": [[87, 3, 1, "", "__init__"], [87, 3, 1, "", "correct"], [87, 4, 1, "", "cov"], [87, 4, 1, "", "dt"], [87, 4, 1, "", "filt_state"], [87, 3, 1, "", "load_filter_state"], [87, 4, 1, "", "meas_noise"], [87, 3, 1, "", "predict"], [87, 4, 1, "", "proc_noise"], [87, 3, 1, "", "save_filter_state"], [87, 3, 1, "", "set_measurement_model"], [87, 3, 1, "", "set_measurement_noise_estimator"], [87, 3, 1, "", "set_state_model"]], "gncpy.filters.kf_gaussian_scale_mixture_filter": [[88, 1, 1, "", "KFGaussianScaleMixtureFilter"]], "gncpy.filters.kf_gaussian_scale_mixture_filter.KFGaussianScaleMixtureFilter": [[88, 3, 1, "", "__init__"], [88, 3, 1, "", "correct"], [88, 2, 1, "", "cov"], [88, 2, 1, "", "dt"], [88, 4, 1, "", "filt_state"], [88, 3, 1, "", "load_filter_state"], [88, 2, 1, "", "meas_noise"], [88, 3, 1, "", "plot_particles"], [88, 3, 1, "", "predict"], [88, 2, 1, "", "proc_noise"], [88, 3, 1, "", "save_filter_state"], [88, 3, 1, "", "set_meas_noise_model"], [88, 3, 1, "", "set_measurement_model"], [88, 3, 1, "", "set_process_noise_model"], [88, 3, 1, "", "set_state_model"]], "gncpy.filters.max_corr_ent_ukf": [[89, 1, 1, "", "MaxCorrEntUKF"]], "gncpy.filters.max_corr_ent_ukf.MaxCorrEntUKF": [[89, 3, 1, "", "__init__"], [89, 3, 1, "", "correct"], [89, 4, 1, "", "filt_state"], [89, 3, 1, "", "init_sigma_points"], [89, 4, 1, "", "kernel_bandwidth"], [89, 3, 1, "", "load_filter_state"], [89, 3, 1, "", "predict"], [89, 3, 1, "", "save_filter_state"], [89, 3, 1, "", "set_measurement_model"], [89, 3, 1, "", "set_measurement_noise_estimator"], [89, 3, 1, "", "set_state_model"]], "gncpy.filters.max_corr_ent_upf": [[90, 1, 1, "", "MaxCorrEntUPF"]], "gncpy.filters.max_corr_ent_upf.MaxCorrEntUPF": [[90, 3, 1, "", "__init__"], [90, 3, 1, "", "correct"], [90, 2, 1, "", "cov"], [90, 3, 1, "", "extract_dist"], [90, 4, 1, "", "filt_state"], [90, 3, 1, "", "init_from_dist"], [90, 3, 1, "", "init_particles"], [90, 2, 1, "", "kernel_bandwidth"], [90, 3, 1, "", "load_filter_state"], [90, 2, 1, "", "meas_likelihood_fnc"], [90, 2, 1, "", "meas_noise"], [90, 3, 1, "", "move_particles"], [90, 2, 1, "", "num_particles"], [90, 3, 1, "", "plot_particles"], [90, 3, 1, "", "plot_weighted_particles"], [90, 3, 1, "", "predict"], [90, 2, 1, "", "proc_noise"], [90, 2, 1, "", "proposal_fnc"], [90, 2, 1, "", "proposal_sampling_fnc"], [90, 3, 1, "", "save_filter_state"], [90, 3, 1, "", "set_measurement_model"], [90, 3, 1, "", "set_state_model"], [90, 2, 1, "", "transition_prob_fnc"]], "gncpy.filters.mcmc_particle_filter_base": [[91, 1, 1, "", "MCMCParticleFilterBase"]], "gncpy.filters.mcmc_particle_filter_base.MCMCParticleFilterBase": [[91, 3, 1, "", "__init__"], [91, 3, 1, "", "correct"], [91, 2, 1, "", "cov"], [91, 3, 1, "", "extract_dist"], [91, 4, 1, "", "filt_state"], [91, 3, 1, "", "init_from_dist"], [91, 3, 1, "", "init_particles"], [91, 3, 1, "", "load_filter_state"], [91, 2, 1, "", "meas_likelihood_fnc"], [91, 3, 1, "", "move_particles"], [91, 2, 1, "", "num_particles"], [91, 3, 1, "", "plot_particles"], [91, 3, 1, "", "plot_weighted_particles"], [91, 3, 1, "", "predict"], [91, 2, 1, "", "proposal_fnc"], [91, 2, 1, "", "proposal_sampling_fnc"], [91, 3, 1, "", "save_filter_state"], [91, 3, 1, "", "set_measurement_model"], [91, 3, 1, "", "set_state_model"], [91, 2, 1, "", "transition_prob_fnc"], [91, 4, 1, "", "use_MCMC"]], "gncpy.filters.particle_filter": [[92, 1, 1, "", "ParticleFilter"]], "gncpy.filters.particle_filter.ParticleFilter": [[92, 3, 1, "", "__init__"], [92, 3, 1, "", "correct"], [92, 2, 1, "", "cov"], [92, 3, 1, "", "extract_dist"], [92, 4, 1, "", "filt_state"], [92, 3, 1, "", "init_from_dist"], [92, 3, 1, "", "init_particles"], [92, 3, 1, "", "load_filter_state"], [92, 2, 1, "", "meas_likelihood_fnc"], [92, 2, 1, "", "num_particles"], [92, 3, 1, "", "plot_particles"], [92, 3, 1, "", "plot_weighted_particles"], [92, 3, 1, "", "predict"], [92, 2, 1, "", "proposal_fnc"], [92, 2, 1, "", "proposal_sampling_fnc"], [92, 4, 1, "", "require_copy_can_dist"], [92, 4, 1, "", "require_copy_prop_parts"], [92, 3, 1, "", "save_filter_state"], [92, 3, 1, "", "set_measurement_model"], [92, 3, 1, "", "set_state_model"], [92, 2, 1, "", "transition_prob_fnc"]], "gncpy.filters.qkf_gaussian_scale_mixture_filter": [[93, 1, 1, "", "QKFGaussianScaleMixtureFilter"]], "gncpy.filters.qkf_gaussian_scale_mixture_filter.QKFGaussianScaleMixtureFilter": [[93, 3, 1, "", "__init__"], [93, 3, 1, "", "correct"], [93, 2, 1, "", "cov"], [93, 4, 1, "", "filt_state"], [93, 3, 1, "", "load_filter_state"], [93, 2, 1, "", "meas_noise"], [93, 3, 1, "", "plot_particles"], [93, 2, 1, "", "points_per_axis"], [93, 3, 1, "", "predict"], [93, 2, 1, "", "proc_noise"], [93, 3, 1, "", "save_filter_state"], [93, 3, 1, "", "set_meas_noise_model"], [93, 3, 1, "", "set_measurement_model"], [93, 3, 1, "", "set_process_noise_model"], [93, 3, 1, "", "set_state_model"]], "gncpy.filters.quadrature_kalman_filter": [[94, 1, 1, "", "QuadratureKalmanFilter"]], "gncpy.filters.quadrature_kalman_filter.QuadratureKalmanFilter": [[94, 3, 1, "", "__init__"], [94, 3, 1, "", "correct"], [94, 4, 1, "", "filt_state"], [94, 3, 1, "", "load_filter_state"], [94, 3, 1, "", "plot_quadrature"], [94, 2, 1, "", "points_per_axis"], [94, 3, 1, "", "predict"], [94, 4, 1, "", "quadPoints"], [94, 3, 1, "", "save_filter_state"], [94, 3, 1, "", "set_measurement_model"], [94, 3, 1, "", "set_measurement_noise_estimator"], [94, 3, 1, "", "set_state_model"]], "gncpy.filters.sqkf_gaussian_scale_mixture_filter": [[95, 1, 1, "", "SQKFGaussianScaleMixtureFilter"]], "gncpy.filters.sqkf_gaussian_scale_mixture_filter.SQKFGaussianScaleMixtureFilter": [[95, 3, 1, "", "__init__"], [95, 3, 1, "", "correct"], [95, 2, 1, "", "cov"], [95, 4, 1, "", "filt_state"], [95, 3, 1, "", "load_filter_state"], [95, 2, 1, "", "meas_noise"], [95, 3, 1, "", "plot_particles"], [95, 2, 1, "", "points_per_axis"], [95, 3, 1, "", "predict"], [95, 2, 1, "", "proc_noise"], [95, 3, 1, "", "save_filter_state"], [95, 3, 1, "", "set_meas_noise_model"], [95, 3, 1, "", "set_measurement_model"], [95, 3, 1, "", "set_process_noise_model"], [95, 3, 1, "", "set_state_model"]], "gncpy.filters.square_root_qkf": [[96, 1, 1, "", "SquareRootQKF"]], "gncpy.filters.square_root_qkf.SquareRootQKF": [[96, 3, 1, "", "__init__"], [96, 3, 1, "", "correct"], [96, 2, 1, "", "cov"], [96, 4, 1, "", "filt_state"], [96, 3, 1, "", "load_filter_state"], [96, 2, 1, "", "meas_noise"], [96, 3, 1, "", "plot_quadrature"], [96, 2, 1, "", "points_per_axis"], [96, 3, 1, "", "predict"], [96, 2, 1, "", "proc_noise"], [96, 3, 1, "", "save_filter_state"], [96, 3, 1, "", "set_measurement_model"], [96, 3, 1, "", "set_measurement_noise_estimator"], [96, 3, 1, "", "set_state_model"]], "gncpy.filters.students_t_filter": [[97, 1, 1, "", "StudentsTFilter"]], "gncpy.filters.students_t_filter.StudentsTFilter": [[97, 3, 1, "", "__init__"], [97, 3, 1, "", "correct"], [97, 2, 1, "", "cov"], [97, 4, 1, "", "dof"], [97, 4, 1, "", "filt_state"], [97, 3, 1, "", "load_filter_state"], [97, 4, 1, "", "meas_noise_dof"], [97, 3, 1, "", "predict"], [97, 4, 1, "", "proc_noise_dof"], [97, 3, 1, "", "save_filter_state"], [97, 4, 1, "", "scale"], [97, 3, 1, "", "set_measurement_model"], [97, 3, 1, "", "set_measurement_noise_estimator"], [97, 3, 1, "", "set_state_model"], [97, 4, 1, "", "use_moment_matching"]], "gncpy.filters.ukf_gaussian_scale_mixture_filter": [[98, 1, 1, "", "UKFGaussianScaleMixtureFilter"]], "gncpy.filters.ukf_gaussian_scale_mixture_filter.UKFGaussianScaleMixtureFilter": [[98, 3, 1, "", "__init__"], [98, 2, 1, "", "alpha"], [98, 2, 1, "", "beta"], [98, 3, 1, "", "correct"], [98, 2, 1, "", "cov"], [98, 2, 1, "", "dt"], [98, 4, 1, "", "filt_state"], [98, 3, 1, "", "init_sigma_points"], [98, 2, 1, "", "kappa"], [98, 3, 1, "", "load_filter_state"], [98, 2, 1, "", "meas_noise"], [98, 3, 1, "", "plot_particles"], [98, 3, 1, "", "predict"], [98, 2, 1, "", "proc_noise"], [98, 3, 1, "", "save_filter_state"], [98, 3, 1, "", "set_meas_noise_model"], [98, 3, 1, "", "set_measurement_model"], [98, 3, 1, "", "set_process_noise_model"], [98, 3, 1, "", "set_state_model"]], "gncpy.filters.unscented_kalman_filter": [[99, 1, 1, "", "UnscentedKalmanFilter"]], "gncpy.filters.unscented_kalman_filter.UnscentedKalmanFilter": [[99, 3, 1, "", "__init__"], [99, 4, 1, "", "alpha"], [99, 4, 1, "", "beta"], [99, 3, 1, "", "correct"], [99, 4, 1, "", "filt_state"], [99, 3, 1, "", "init_sigma_points"], [99, 4, 1, "", "kappa"], [99, 3, 1, "", "load_filter_state"], [99, 3, 1, "", "predict"], [99, 3, 1, "", "save_filter_state"], [99, 3, 1, "", "set_measurement_model"], [99, 3, 1, "", "set_measurement_noise_estimator"], [99, 3, 1, "", "set_state_model"]], "gncpy.filters.unscented_particle_filter": [[100, 1, 1, "", "UnscentedParticleFilter"]], "gncpy.filters.unscented_particle_filter.UnscentedParticleFilter": [[100, 3, 1, "", "__init__"], [100, 3, 1, "", "correct"], [100, 2, 1, "", "cov"], [100, 3, 1, "", "extract_dist"], [100, 4, 1, "", "filt_state"], [100, 3, 1, "", "init_from_dist"], [100, 3, 1, "", "init_particles"], [100, 3, 1, "", "load_filter_state"], [100, 2, 1, "", "meas_likelihood_fnc"], [100, 2, 1, "", "meas_noise"], [100, 3, 1, "", "move_particles"], [100, 2, 1, "", "num_particles"], [100, 3, 1, "", "plot_particles"], [100, 3, 1, "", "plot_weighted_particles"], [100, 3, 1, "", "predict"], [100, 2, 1, "", "proc_noise"], [100, 2, 1, "", "proposal_fnc"], [100, 2, 1, "", "proposal_sampling_fnc"], [100, 3, 1, "", "save_filter_state"], [100, 3, 1, "", "set_measurement_model"], [100, 3, 1, "", "set_state_model"], [100, 2, 1, "", "transition_prob_fnc"]], "gncpy.game_engine": [[120, 0, 0, "-", "base_game"], [121, 0, 0, "-", "components"], [122, 0, 0, "-", "entities"], [123, 0, 0, "-", "physics2d"], [124, 0, 0, "-", "rendering2d"]], "gncpy.game_engine.base_game": [[101, 1, 1, "", "Base2dParams"], [102, 1, 1, "", "BaseGame"], [103, 1, 1, "", "BaseGame2d"], [104, 1, 1, "", "BaseParams"], [105, 1, 1, "", "WindowParams"], [106, 5, 1, "", "ndarray_representer"], [107, 7, 1, "", "yaml"]], "gncpy.game_engine.base_game.Base2dParams": [[101, 3, 1, "", "__init__"], [101, 4, 1, "", "max_time"], [101, 4, 1, "", "physics"], [101, 4, 1, "", "start_time"]], "gncpy.game_engine.base_game.BaseGame": [[102, 3, 1, "", "__init__"], [102, 4, 1, "", "config_file"], [102, 4, 1, "", "current_frame"], [102, 4, 1, "", "entityManager"], [102, 4, 1, "", "game_over"], [102, 4, 1, "", "library_dir"], [102, 4, 1, "", "params"], [102, 3, 1, "", "parse_config_file"], [102, 3, 1, "", "register_params"], [102, 4, 1, "", "render_fps"], [102, 4, 1, "", "render_mode"], [102, 3, 1, "", "reset"], [102, 4, 1, "", "rng"], [102, 3, 1, "", "s_collision"], [102, 3, 1, "", "s_game_over"], [102, 3, 1, "", "s_input"], [102, 3, 1, "", "s_movement"], [102, 3, 1, "", "s_score"], [102, 4, 1, "", "score"], [102, 4, 1, "", "seed_val"], [102, 3, 1, "", "setup"], [102, 3, 1, "", "step"], [102, 3, 1, "", "validate_config_file"]], "gncpy.game_engine.base_game.BaseGame2d": [[103, 3, 1, "", "__init__"], [103, 3, 1, "", "append_name_to_keys"], [103, 4, 1, "", "clock"], [103, 3, 1, "", "close"], [103, 2, 1, "", "current_time"], [103, 4, 1, "", "current_update_count"], [103, 4, 1, "", "dist_per_pix"], [103, 2, 1, "", "elapsed_time"], [103, 3, 1, "", "get_image_size"], [103, 4, 1, "", "img"], [103, 3, 1, "", "parse_config_file"], [103, 3, 1, "", "register_params"], [103, 3, 1, "", "reset"], [103, 3, 1, "", "s_collision"], [103, 3, 1, "", "s_game_over"], [103, 3, 1, "", "s_input"], [103, 3, 1, "", "s_movement"], [103, 3, 1, "", "s_render"], [103, 3, 1, "", "s_score"], [103, 3, 1, "", "setup"], [103, 3, 1, "", "step"], [103, 3, 1, "", "validate_config_file"], [103, 4, 1, "", "window"]], "gncpy.game_engine.base_game.BaseParams": [[104, 3, 1, "", "__init__"], [104, 4, 1, "", "window"]], "gncpy.game_engine.base_game.WindowParams": [[105, 3, 1, "", "__init__"], [105, 4, 1, "", "height"], [105, 4, 1, "", "width"]], "gncpy.game_engine.components": [[108, 1, 1, "", "CBirth"], [109, 1, 1, "", "CCapabilities"], [110, 1, 1, "", "CCollision"], [111, 1, 1, "", "CDynamics"], [112, 1, 1, "", "CEvents"], [113, 1, 1, "", "CHazard"], [114, 1, 1, "", "CPriority"], [115, 1, 1, "", "CShape"], [116, 1, 1, "", "CTransform"], [117, 7, 1, "", "library_asset_dir"]], "gncpy.game_engine.components.CBirth": [[108, 3, 1, "", "__init__"], [108, 4, 1, "", "loc"], [108, 4, 1, "", "randomize"], [108, 3, 1, "", "sample"]], "gncpy.game_engine.components.CCapabilities": [[109, 3, 1, "", "__init__"], [109, 4, 1, "", "capabilities"]], "gncpy.game_engine.components.CCollision": [[110, 3, 1, "", "__init__"], [110, 4, 1, "", "aabb"]], "gncpy.game_engine.components.CDynamics": [[111, 3, 1, "", "__init__"], [111, 4, 1, "", "ctrl_args"], [111, 4, 1, "", "dynObj"], [111, 4, 1, "", "last_state"], [111, 4, 1, "", "pos_inds"], [111, 4, 1, "", "state_args"], [111, 4, 1, "", "state_high"], [111, 4, 1, "", "state_low"], [111, 4, 1, "", "vel_inds"]], "gncpy.game_engine.components.CEvents": [[112, 3, 1, "", "__init__"], [112, 4, 1, "", "events"]], "gncpy.game_engine.components.CHazard": [[113, 3, 1, "", "__init__"], [113, 4, 1, "", "entrance_times"], [113, 4, 1, "", "prob_of_death"]], "gncpy.game_engine.components.CPriority": [[114, 3, 1, "", "__init__"], [114, 4, 1, "", "priority"]], "gncpy.game_engine.components.CShape": [[115, 3, 1, "", "__init__"], [115, 4, 1, "", "color"], [115, 4, 1, "", "shape"], [115, 4, 1, "", "type"], [115, 4, 1, "", "zorder"]], "gncpy.game_engine.components.CTransform": [[116, 3, 1, "", "__init__"], [116, 4, 1, "", "last_pos"], [116, 4, 1, "", "pos"]], "gncpy.game_engine.entities": [[118, 1, 1, "", "Entity"], [119, 1, 1, "", "EntityManager"]], "gncpy.game_engine.entities.Entity": [[118, 3, 1, "", "__init__"], [118, 2, 1, "", "active"], [118, 3, 1, "", "add_component"], [118, 3, 1, "", "destroy"], [118, 3, 1, "", "get_component"], [118, 3, 1, "", "has_component"], [118, 2, 1, "", "id"], [118, 2, 1, "", "tag"]], "gncpy.game_engine.entities.EntityManager": [[119, 3, 1, "", "__init__"], [119, 3, 1, "", "add_entity"], [119, 3, 1, "", "get_entities"], [119, 3, 1, "", "get_entity_ids"], [119, 3, 1, "", "update"]], "gncpy.game_engine.physics2d": [[125, 1, 1, "", "Collision2dParams"], [126, 1, 1, "", "Physics2dParams"], [127, 5, 1, "", "check_collision2d"], [128, 5, 1, "", "clamp_window_bounds2d"], [129, 5, 1, "", "dist_to_pixels"], [130, 5, 1, "", "pixels_to_dist"], [131, 5, 1, "", "resolve_collision2d"]], "gncpy.game_engine.physics2d.Collision2dParams": [[125, 3, 1, "", "__init__"], [125, 4, 1, "", "height"], [125, 4, 1, "", "width"]], "gncpy.game_engine.physics2d.Physics2dParams": [[126, 3, 1, "", "__init__"], [126, 4, 1, "", "dist_height"], [126, 4, 1, "", "dist_width"], [126, 4, 1, "", "dt"], [126, 4, 1, "", "min_pos"], [126, 4, 1, "", "step_factor"], [126, 2, 1, "", "update_dt"]], "gncpy.game_engine.rendering2d": [[132, 1, 1, "", "Shape2dParams"], [133, 5, 1, "", "get_drawable_entities"], [134, 5, 1, "", "init_rendering_system"], [135, 5, 1, "", "init_window"], [136, 5, 1, "", "render"], [137, 5, 1, "", "shutdown"]], "gncpy.game_engine.rendering2d.Shape2dParams": [[132, 3, 1, "", "__init__"], [132, 4, 1, "", "color"], [132, 4, 1, "", "file"], [132, 4, 1, "", "height"], [132, 4, 1, "", "type"], [132, 4, 1, "", "width"]], "gncpy.games": [[150, 0, 0, "-", "SimpleUAV2d"]], "gncpy.games.SimpleUAV2d": [[138, 1, 1, "", "BirthModelParams"], [139, 1, 1, "", "ControlModelParams"], [140, 1, 1, "", "DynamicsParams"], [141, 1, 1, "", "EventType"], [142, 1, 1, "", "HazardParams"], [143, 1, 1, "", "ObstacleParams"], [144, 1, 1, "", "Params"], [145, 1, 1, "", "PlayerParams"], [146, 1, 1, "", "ScoreParams"], [147, 1, 1, "", "SimpleUAV2d"], [148, 1, 1, "", "StateConstraintParams"], [149, 1, 1, "", "TargetParams"]], "gncpy.games.SimpleUAV2d.BirthModelParams": [[138, 3, 1, "", "__init__"], [138, 4, 1, "", "extra_params"], [138, 4, 1, "", "location"], [138, 4, 1, "", "prob"], [138, 4, 1, "", "randomize"], [138, 4, 1, "", "scale"], [138, 4, 1, "", "times"], [138, 4, 1, "", "type"]], "gncpy.games.SimpleUAV2d.ControlModelParams": [[139, 3, 1, "", "__init__"], [139, 4, 1, "", "max_turn_rate"], [139, 4, 1, "", "max_vel"], [139, 4, 1, "", "max_vel_x"], [139, 4, 1, "", "max_vel_y"], [139, 4, 1, "", "type"]], "gncpy.games.SimpleUAV2d.DynamicsParams": [[140, 3, 1, "", "__init__"], [140, 4, 1, "", "controlModel"], [140, 4, 1, "", "extra_params"], [140, 4, 1, "", "stateConstraint"], [140, 4, 1, "", "type"]], "gncpy.games.SimpleUAV2d.EventType": [[141, 3, 1, "", "__init__"]], "gncpy.games.SimpleUAV2d.HazardParams": [[142, 3, 1, "", "__init__"], [142, 4, 1, "", "collision"], [142, 4, 1, "", "loc_x"], [142, 4, 1, "", "loc_y"], [142, 4, 1, "", "prob_of_death"], [142, 4, 1, "", "shape"]], "gncpy.games.SimpleUAV2d.ObstacleParams": [[143, 3, 1, "", "__init__"], [143, 4, 1, "", "collision"], [143, 4, 1, "", "loc_x"], [143, 4, 1, "", "loc_y"], [143, 4, 1, "", "shape"]], "gncpy.games.SimpleUAV2d.Params": [[144, 3, 1, "", "__init__"], [144, 4, 1, "", "hazards"], [144, 4, 1, "", "obstacles"], [144, 4, 1, "", "players"], [144, 4, 1, "", "score"], [144, 4, 1, "", "targets"]], "gncpy.games.SimpleUAV2d.PlayerParams": [[145, 3, 1, "", "__init__"], [145, 4, 1, "", "birth"], [145, 4, 1, "", "capabilities"], [145, 4, 1, "", "collision"], [145, 4, 1, "", "dynamics"], [145, 4, 1, "", "shape"]], "gncpy.games.SimpleUAV2d.ScoreParams": [[146, 3, 1, "", "__init__"], [146, 4, 1, "", "death_decay"], [146, 4, 1, "", "death_penalty"], [146, 4, 1, "", "death_scale"], [146, 4, 1, "", "hazard_multiplier"], [146, 4, 1, "", "min_vel_per"], [146, 4, 1, "", "missed_multiplier"], [146, 4, 1, "", "time_penalty"], [146, 4, 1, "", "type"], [146, 4, 1, "", "vel_penalty"], [146, 4, 1, "", "wall_penalty"]], "gncpy.games.SimpleUAV2d.SimpleUAV2d": [[147, 3, 1, "", "__init__"], [147, 4, 1, "", "all_capabilities"], [147, 3, 1, "", "append_name_to_keys"], [147, 3, 1, "", "basic_reward"], [147, 3, 1, "", "close"], [147, 3, 1, "", "create_dynamics"], [147, 3, 1, "", "create_hazards"], [147, 3, 1, "", "create_obstacles"], [147, 3, 1, "", "create_player"], [147, 3, 1, "", "create_targets"], [147, 4, 1, "", "cur_target_seq"], [147, 2, 1, "", "current_time"], [147, 2, 1, "", "elapsed_time"], [147, 3, 1, "", "get_image_size"], [147, 3, 1, "", "get_player_ids"], [147, 3, 1, "", "get_player_pos_vel_inds"], [147, 3, 1, "", "get_player_state_bounds"], [147, 3, 1, "", "get_players_state"], [147, 4, 1, "", "has_random_player_birth_times"], [147, 4, 1, "", "max_player_birth_time"], [147, 3, 1, "", "parse_config_file"], [147, 3, 1, "", "propagate_dynamics"], [147, 3, 1, "", "register_params"], [147, 3, 1, "", "reset"], [147, 3, 1, "", "s_collision"], [147, 3, 1, "", "s_game_over"], [147, 3, 1, "", "s_input"], [147, 3, 1, "", "s_movement"], [147, 3, 1, "", "s_render"], [147, 3, 1, "", "s_score"], [147, 3, 1, "", "setup"], [147, 3, 1, "", "spawn_players"], [147, 3, 1, "", "step"], [147, 4, 1, "", "target_seq"], [147, 3, 1, "", "validate_config_file"]], "gncpy.games.SimpleUAV2d.StateConstraintParams": [[148, 3, 1, "", "__init__"], [148, 4, 1, "", "max_vels"], [148, 4, 1, "", "min_vels"], [148, 4, 1, "", "type"]], "gncpy.games.SimpleUAV2d.TargetParams": [[149, 3, 1, "", "__init__"], [149, 4, 1, "", "capabilities"], [149, 4, 1, "", "collision"], [149, 4, 1, "", "loc_x"], [149, 4, 1, "", "loc_y"], [149, 4, 1, "", "order"], [149, 4, 1, "", "priority"], [149, 4, 1, "", "shape"]], "gncpy.math": [[168, 5, 1, "", "epanechnikov_kernel"], [169, 5, 1, "", "gamma_fnc"], [170, 5, 1, "", "gaussian_kernel"], [171, 5, 1, "", "get_elem_sym_fnc"], [172, 5, 1, "", "get_hessian"], [173, 5, 1, "", "get_input_jacobian"], [174, 5, 1, "", "get_jacobian"], [175, 5, 1, "", "get_state_jacobian"], [176, 5, 1, "", "log_sum_exp"], [177, 5, 1, "", "rk4"], [178, 5, 1, "", "rk4_backward"], [179, 5, 1, "", "weighted_sum_mat"], [180, 5, 1, "", "weighted_sum_vec"]], "gncpy.orbital_mechanics": [[181, 5, 1, "", "correct_lon_ascend"], [182, 5, 1, "", "ecc_anom_from_mean"], [183, 5, 1, "", "ecef_from_orbit"], [184, 5, 1, "", "true_anom_from_ecc"]], "gncpy.planning": [[187, 0, 0, "-", "a_star"], [188, 0, 0, "-", "reinforcement_learning"], [189, 0, 0, "-", "rrt_star"]], "gncpy.planning.a_star": [[185, 1, 1, "", "AStar"], [186, 1, 1, "", "Node"]], "gncpy.planning.a_star.AStar": [[185, 3, 1, "", "__init__"], [185, 4, 1, "", "beam_search_max_nodes"], [185, 3, 1, "", "calc_heuristic"], [185, 3, 1, "", "calc_weight"], [185, 3, 1, "", "draw_end"], [185, 3, 1, "", "draw_map"], [185, 3, 1, "", "draw_start"], [185, 3, 1, "", "final_path"], [185, 3, 1, "", "get_map_cost"], [185, 3, 1, "", "ind_to_pos"], [185, 3, 1, "", "is_valid"], [185, 4, 1, "", "max"], [185, 4, 1, "", "min"], [185, 4, 1, "", "motion"], [185, 3, 1, "", "plan"], [185, 3, 1, "", "pos_to_ind"], [185, 3, 1, "", "ravel_ind"], [185, 4, 1, "", "resolution"], [185, 3, 1, "", "set_map"], [185, 4, 1, "", "use_beam_search"], [185, 4, 1, "", "weight"]], "gncpy.planning.a_star.Node": [[186, 3, 1, "", "__init__"], [186, 4, 1, "", "cost"], [186, 4, 1, "", "indices"], [186, 4, 1, "", "parent_idx"]], "gncpy.planning.reinforcement_learning": [[194, 0, 0, "-", "envs"], [195, 0, 0, "-", "wrappers"]], "gncpy.planning.reinforcement_learning.envs": [[190, 0, 0, "-", "simple2d"]], "gncpy.planning.reinforcement_learning.envs.simple2d": [[191, 0, 0, "-", "simpleUAV2d"]], "gncpy.planning.reinforcement_learning.envs.simple2d.simpleUAV2d": [[192, 1, 1, "", "SimpleUAV2d"], [193, 1, 1, "", "SimpleUAVHazards2d"]], "gncpy.planning.reinforcement_learning.envs.simple2d.simpleUAV2d.SimpleUAV2d": [[192, 3, 1, "", "__init__"], [192, 4, 1, "", "action_space"], [192, 4, 1, "", "aux_use_n_targets"], [192, 4, 1, "", "aux_use_time"], [192, 3, 1, "", "calc_obs_space"], [192, 3, 1, "", "close"], [192, 4, 1, "", "fig"], [192, 4, 1, "", "game"], [192, 3, 1, "", "gen_act_map"], [192, 4, 1, "", "max_time"], [192, 4, 1, "", "metadata"], [192, 2, 1, "", "np_random"], [192, 4, 1, "", "obs_type"], [192, 4, 1, "", "observation_space"], [192, 4, 1, "", "render_mode"], [192, 3, 1, "", "reset"], [192, 3, 1, "", "seed"], [192, 3, 1, "", "step"], [192, 2, 1, "", "unwrapped"]], "gncpy.planning.reinforcement_learning.envs.simple2d.simpleUAV2d.SimpleUAVHazards2d": [[193, 3, 1, "", "__init__"], [193, 4, 1, "", "action_space"], [193, 3, 1, "", "calc_obs_space"], [193, 3, 1, "", "close"], [193, 3, 1, "", "gen_act_map"], [193, 4, 1, "", "metadata"], [193, 2, 1, "", "np_random"], [193, 3, 1, "", "reset"], [193, 3, 1, "", "seed"], [193, 3, 1, "", "step"], [193, 2, 1, "", "unwrapped"]], "gncpy.planning.reinforcement_learning.wrappers": [[196, 1, 1, "", "BufferFames"], [197, 1, 1, "", "GrayScaleObservation"], [198, 1, 1, "", "MaxFrames"], [199, 1, 1, "", "ResizeImage"], [200, 1, 1, "", "SkipFrames"], [201, 1, 1, "", "StackFrames"]], "gncpy.planning.reinforcement_learning.wrappers.BufferFames": [[196, 3, 1, "", "__init__"], [196, 2, 1, "", "action_space"], [196, 3, 1, "", "class_name"], [196, 3, 1, "", "close"], [196, 2, 1, "", "metadata"], [196, 2, 1, "", "np_random"], [196, 3, 1, "", "observation"], [196, 2, 1, "", "observation_space"], [196, 2, 1, "", "render_mode"], [196, 3, 1, "", "reset"], [196, 2, 1, "", "reward_range"], [196, 3, 1, "", "seed"], [196, 2, 1, "", "spec"], [196, 3, 1, "", "step"], [196, 2, 1, "", "unwrapped"]], "gncpy.planning.reinforcement_learning.wrappers.GrayScaleObservation": [[197, 3, 1, "", "__init__"], [197, 2, 1, "", "action_space"], [197, 3, 1, "", "class_name"], [197, 3, 1, "", "close"], [197, 2, 1, "", "metadata"], [197, 2, 1, "", "np_random"], [197, 3, 1, "", "observation"], [197, 2, 1, "", "observation_space"], [197, 2, 1, "", "render_mode"], [197, 3, 1, "", "reset"], [197, 2, 1, "", "reward_range"], [197, 3, 1, "", "seed"], [197, 2, 1, "", "spec"], [197, 3, 1, "", "step"], [197, 2, 1, "", "unwrapped"]], "gncpy.planning.reinforcement_learning.wrappers.MaxFrames": [[198, 3, 1, "", "__init__"], [198, 2, 1, "", "action_space"], [198, 3, 1, "", "class_name"], [198, 3, 1, "", "close"], [198, 2, 1, "", "metadata"], [198, 2, 1, "", "np_random"], [198, 3, 1, "", "observation"], [198, 2, 1, "", "observation_space"], [198, 2, 1, "", "render_mode"], [198, 3, 1, "", "reset"], [198, 2, 1, "", "reward_range"], [198, 3, 1, "", "seed"], [198, 2, 1, "", "spec"], [198, 3, 1, "", "step"], [198, 2, 1, "", "unwrapped"]], "gncpy.planning.reinforcement_learning.wrappers.ResizeImage": [[199, 3, 1, "", "__init__"], [199, 2, 1, "", "action_space"], [199, 3, 1, "", "class_name"], [199, 3, 1, "", "close"], [199, 2, 1, "", "metadata"], [199, 2, 1, "", "np_random"], [199, 3, 1, "", "observation"], [199, 2, 1, "", "observation_space"], [199, 2, 1, "", "render_mode"], [199, 3, 1, "", "reset"], [199, 2, 1, "", "reward_range"], [199, 3, 1, "", "seed"], [199, 2, 1, "", "spec"], [199, 3, 1, "", "step"], [199, 2, 1, "", "unwrapped"]], "gncpy.planning.reinforcement_learning.wrappers.SkipFrames": [[200, 3, 1, "", "__init__"], [200, 2, 1, "", "action_space"], [200, 3, 1, "", "class_name"], [200, 3, 1, "", "close"], [200, 2, 1, "", "metadata"], [200, 2, 1, "", "np_random"], [200, 2, 1, "", "observation_space"], [200, 2, 1, "", "render_mode"], [200, 3, 1, "", "reset"], [200, 2, 1, "", "reward_range"], [200, 3, 1, "", "seed"], [200, 2, 1, "", "spec"], [200, 3, 1, "", "step"], [200, 2, 1, "", "unwrapped"]], "gncpy.planning.reinforcement_learning.wrappers.StackFrames": [[201, 3, 1, "", "__init__"], [201, 2, 1, "", "action_space"], [201, 3, 1, "", "class_name"], [201, 3, 1, "", "close"], [201, 2, 1, "", "metadata"], [201, 2, 1, "", "np_random"], [201, 3, 1, "", "observation"], [201, 2, 1, "", "observation_space"], [201, 2, 1, "", "render_mode"], [201, 3, 1, "", "reset"], [201, 2, 1, "", "reward_range"], [201, 3, 1, "", "seed"], [201, 2, 1, "", "spec"], [201, 3, 1, "", "step"], [201, 2, 1, "", "unwrapped"]], "gncpy.planning.rrt_star": [[202, 1, 1, "", "ExtendedLQRRRTStar"], [203, 1, 1, "", "LQRRRTStar"], [204, 1, 1, "", "Node"]], "gncpy.planning.rrt_star.ExtendedLQRRRTStar": [[202, 3, 1, "", "__init__"]], "gncpy.planning.rrt_star.LQRRRTStar": [[203, 4, 1, "", "Nobs"], [203, 4, 1, "", "P"], [203, 4, 1, "", "S"], [203, 3, 1, "", "__init__"], [203, 4, 1, "", "connect_circle_dist"], [203, 4, 1, "", "ell_con"], [203, 4, 1, "", "end"], [203, 4, 1, "", "expand_dis"], [203, 4, 1, "", "goal_sample_rate"], [203, 4, 1, "", "max_iter"], [203, 4, 1, "", "max_rand"], [203, 4, 1, "", "min_rand"], [203, 4, 1, "", "node_list"], [203, 4, 1, "", "obstacle_list"], [203, 4, 1, "", "planner"], [203, 4, 1, "", "pos_inds"], [203, 4, 1, "", "rng"], [203, 4, 1, "", "sampling_fun"], [203, 4, 1, "", "start"], [203, 4, 1, "", "step_size"]], "gncpy.planning.rrt_star.Node": [[204, 3, 1, "", "__init__"], [204, 4, 1, "", "cost"], [204, 4, 1, "", "parent"], [204, 4, 1, "", "path"], [204, 4, 1, "", "sv"], [204, 4, 1, "", "u"]], "gncpy.plotting": [[205, 5, 1, "", "calc_error_ellipse"], [206, 5, 1, "", "get_cmap"], [207, 5, 1, "", "init_plotting_opts"], [208, 5, 1, "", "set_title_label"]], "gncpy.sampling": [[209, 1, 1, "", "MetropolisHastings"]], "gncpy.sampling.MetropolisHastings": [[209, 3, 1, "", "__init__"]], "gncpy.utilities": [[210, 1, 1, "", "ClassPropertyDescriptor"], [211, 1, 1, "", "ClassPropertyMetaClass"], [212, 5, 1, "", "classproperty"]], "gncpy.utilities.ClassPropertyDescriptor": [[210, 3, 1, "", "__init__"]], "gncpy.utilities.ClassPropertyMetaClass": [[211, 3, 1, "", "__init__"], [211, 3, 1, "", "mro"]], "gncpy.wgs84": [[213, 5, 1, "", "calc_earth_rate"], [214, 5, 1, "", "calc_ew_rad"], [215, 5, 1, "", "calc_gravity"], [216, 5, 1, "", "calc_ns_rad"], [217, 5, 1, "", "calc_transport_rate"], [218, 5, 1, "", "convert_msl_to_wgs"], [219, 5, 1, "", "convert_wgs_to_msl"], [220, 5, 1, "", "init_egm_lookup_table"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:property", "3": "py:method", "4": "py:attribute", "5": "py:function", "6": "py:exception", "7": "py:data"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "property", "Python property"], "3": ["py", "method", "Python method"], "4": ["py", "attribute", "Python attribute"], "5": ["py", "function", "Python function"], "6": ["py", "exception", "Python exception"], "7": ["py", "data", "Python data"]}, "titleterms": {"refer": [0, 221], "gncpy": [1, 6, 7, 8, 9, 10, 11, 54, 55, 56, 106, 107, 117, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 205, 206, 207, 208, 212, 213, 214, 215, 216, 217, 218, 219, 220, 223], "elqr": [2, 3, 228, 231], "lqr": [4, 5, 228, 231], "coordinate_transform": [6, 7, 8, 9, 10, 152], "ecef_to_lla": 6, "ecef_to_n": 7, "lla_to_ecef": 8, "lla_to_n": 9, "ned_to_lla": 10, "data_fus": [11, 153], "generalizedcovarianceintersect": 11, "particl": 12, "particledistribut": 13, "quadraturepoint": 14, "sigmapoint": 15, "simpleparticledistribut": 16, "simple_multirotor": 17, "aeroparam": 18, "aircraftparam": 19, "effector": 20, "environ": [21, 225], "geoparam": 22, "massparam": 23, "motorparam": 24, "propparam": 25, "simplemultirotor": 26, "vehicl": 27, "clohessywiltshireorbit": 28, "clohessywiltshireorbit2d": 29, "coordinatedturnknown": 30, "coordinatedturnunknown": 31, "curvilinearmot": 32, "doubleintegr": 33, "todo": [33, 59, 84, 88, 93, 95, 98, 165, 169, 209], "dynamicsbas": 34, "clohessy_wiltshire_orbit": 35, "clohessy_wiltshire_orbit2d": 36, "coordinated_turn_known": 37, "coordinated_turn_unknown": 38, "curvilinear_mot": 39, "double_integr": 40, "dynamics_bas": 41, "irobot_cr": 42, "karlgaard_orbit": 43, "linear_dynamics_bas": 44, "nonlinear_dynamics_bas": 45, "tschauner_hempel_orbit": 46, "irobotcr": 47, "karlgaardorbit": 48, "lineardynamicsbas": 49, "nonlineardynamicsbas": 50, "tschaunerhempelorbit": 51, "aircraft": 52, "basic": 53, "error": [54, 55, 56, 156], "extrememeasurementnoiseerror": 54, "particledepletionerror": 55, "particleestimationdomainerror": 56, "bayesfilt": 57, "bootstrapfilt": 58, "ekfgaussianscalemixturefilt": 59, "extendedkalmanfilt": 60, "gcifilt": 61, "bayes_filt": 62, "bootstrap_filt": 63, "ekf_gaussian_scale_mixture_filt": 64, "extended_kalman_filt": 65, "gci_filt": 66, "gsm_filter_bas": 67, "imm_gci_filt": 68, "interacting_multiple_model": 69, "kalman_filt": 70, "kf_gaussian_scale_mixture_filt": 71, "max_corr_ent_ukf": 72, "max_corr_ent_upf": 73, "mcmc_particle_filter_bas": 74, "particle_filt": 75, "qkf_gaussian_scale_mixture_filt": 76, "quadrature_kalman_filt": 77, "sqkf_gaussian_scale_mixture_filt": 78, "square_root_qkf": 79, "students_t_filt": 80, "ukf_gaussian_scale_mixture_filt": 81, "unscented_kalman_filt": 82, "unscented_particle_filt": 83, "gsmfilterbas": 84, "immgcifilt": 85, "interactingmultiplemodel": 86, "kalmanfilt": 87, "kfgaussianscalemixturefilt": 88, "maxcorrentukf": 89, "maxcorrentupf": 90, "mcmcparticlefilterbas": 91, "particlefilt": 92, "qkfgaussianscalemixturefilt": 93, "quadraturekalmanfilt": 94, "sqkfgaussianscalemixturefilt": 95, "squarerootqkf": 96, "studentstfilt": 97, "ukfgaussianscalemixturefilt": 98, "unscentedkalmanfilt": 99, "unscentedparticlefilt": 100, "base2dparam": 101, "basegam": 102, "basegame2d": 103, "baseparam": 104, "windowparam": 105, "game_engin": [106, 107, 117, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 158], "base_gam": [106, 107, 120], "ndarray_represent": 106, "yaml": 107, "cbirth": 108, "ccapabl": 109, "ccollis": 110, "cdynam": 111, "cevent": 112, "chazard": 113, "cprioriti": 114, "cshape": 115, "ctransform": 116, "compon": [117, 121], "library_asset_dir": 117, "entiti": [118, 122], "entitymanag": 119, "physics2d": [123, 127, 128, 129, 130, 131], "rendering2d": [124, 133, 134, 135, 136, 137], "collision2dparam": 125, "physics2dparam": 126, "check_collision2d": 127, "clamp_window_bounds2d": 128, "dist_to_pixel": 129, "pixels_to_dist": 130, "resolve_collision2d": 131, "shape2dparam": 132, "get_drawable_ent": 133, "init_rendering_system": 134, "init_window": 135, "render": 136, "shutdown": 137, "birthmodelparam": 138, "controlmodelparam": 139, "dynamicsparam": 140, "eventtyp": 141, "hazardparam": 142, "obstacleparam": 143, "param": 144, "playerparam": 145, "scoreparam": 146, "simpleuav2d": [147, 150, 191, 192], "stateconstraintparam": 148, "targetparam": 149, "control": [151, 228], "distribut": 154, "dynam": [155, 228, 231], "filter": [157, 229], "game": 159, "math": [160, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180], "measur": 161, "orbital_mechan": [162, 181, 182, 183, 184], "plan": [163, 230], "plot": [164, 205, 206, 207, 208], "sampl": 165, "util": [166, 212], "wgs84": [167, 213, 214, 215, 216, 217, 218, 219, 220], "epanechnikov_kernel": 168, "gamma_fnc": 169, "gaussian_kernel": 170, "get_elem_sym_fnc": 171, "get_hessian": 172, "get_input_jacobian": 173, "get_jacobian": 174, "get_state_jacobian": 175, "log_sum_exp": 176, "rk4": 177, "rk4_backward": 178, "weighted_sum_mat": 179, "weighted_sum_vec": 180, "correct_lon_ascend": 181, "ecc_anom_from_mean": 182, "ecef_from_orbit": 183, "true_anom_from_ecc": 184, "astar": 185, "node": [186, 204], "a_star": 187, "reinforcement_learn": 188, "rrt_star": 189, "simple2d": 190, "simpleuavhazards2d": 193, "env": 194, "wrapper": 195, "bufferfam": 196, "grayscaleobserv": 197, "maxfram": 198, "resizeimag": 199, "skipfram": 200, "stackfram": 201, "extendedlqrrrtstar": 202, "lqrrrtstar": 203, "calc_error_ellips": 205, "get_cmap": 206, "init_plotting_opt": 207, "set_title_label": 208, "metropolishast": 209, "classpropertydescriptor": 210, "classpropertymetaclass": 211, "classproperti": 212, "calc_earth_r": 213, "calc_ew_rad": 214, "calc_grav": 215, "calc_ns_rad": 216, "calc_transport_r": 217, "convert_msl_to_wg": 218, "convert_wgs_to_msl": 219, "init_egm_lookup_t": 220, "api": 221, "ci": 222, "cd": 222, "pipelin": 222, "github": 222, "action": 222, "quick": 222, "guid": 222, "welcom": 223, "": 223, "document": 223, "content": [223, 226, 230], "cite": 223, "indic": 223, "tabl": 223, "licens": 224, "toolchain": 225, "develop": 225, "setup": 225, "exampl": [225, 227, 228, 229, 230, 231], "workflow": 225, "note": 225, "tox": 225, "usag": 226, "A": 227, "normal": 227, "beam": 227, "search": 227, "weight": 227, "infinit": 228, "horizon": 228, "linear": [228, 231], "dyanmic": 228, "finit": 228, "horzon": 228, "non": [228, 231], "modifi": 228, "quadrat": 228, "kalman": 229, "extend": 229, "interact": 229, "multipl": 229, "model": 229, "rrt": 231}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1, "sphinxcontrib.bibtex": 9, "sphinx": 57}, "alltitles": {"References": [[0, "references"]], "gncpy": [[1, "module-gncpy"]], "ELQR": [[2, "elqr"], [228, "elqr"]], "elqr": [[3, "module-gncpy.control.elqr"]], "lqr": [[4, "module-gncpy.control.lqr"]], "LQR": [[5, "lqr"]], "gncpy.coordinate_transforms.ecef_to_LLA": [[6, "gncpy-coordinate-transforms-ecef-to-lla"]], "gncpy.coordinate_transforms.ecef_to_NED": [[7, "gncpy-coordinate-transforms-ecef-to-ned"]], "gncpy.coordinate_transforms.lla_to_ECEF": [[8, "gncpy-coordinate-transforms-lla-to-ecef"]], "gncpy.coordinate_transforms.lla_to_NED": [[9, "gncpy-coordinate-transforms-lla-to-ned"]], "gncpy.coordinate_transforms.ned_to_LLA": [[10, "gncpy-coordinate-transforms-ned-to-lla"]], "gncpy.data_fusion.GeneralizedCovarianceIntersection": [[11, "gncpy-data-fusion-generalizedcovarianceintersection"]], "Particle": [[12, "particle"]], "ParticleDistribution": [[13, "particledistribution"]], "QuadraturePoints": [[14, "quadraturepoints"]], "SigmaPoints": [[15, "sigmapoints"]], "SimpleParticleDistribution": [[16, "simpleparticledistribution"]], "simple_multirotor": [[17, "module-gncpy.dynamics.aircraft.simple_multirotor"]], "AeroParams": [[18, "aeroparams"]], "AircraftParams": [[19, "aircraftparams"]], "Effector": [[20, "effector"]], "Environment": [[21, "environment"]], "GeoParams": [[22, "geoparams"]], "MassParams": [[23, "massparams"]], "MotorParams": [[24, "motorparams"]], "PropParams": [[25, "propparams"]], "SimpleMultirotor": [[26, "simplemultirotor"]], "Vehicle": [[27, "vehicle"]], "ClohessyWiltshireOrbit": [[28, "clohessywiltshireorbit"]], "ClohessyWiltshireOrbit2d": [[29, "clohessywiltshireorbit2d"]], "CoordinatedTurnKnown": [[30, "coordinatedturnknown"]], "CoordinatedTurnUnknown": [[31, "coordinatedturnunknown"]], "CurvilinearMotion": [[32, "curvilinearmotion"]], "DoubleIntegrator": [[33, "doubleintegrator"]], "Todo": [[33, "id1"], [59, "id1"], [84, "id3"], [88, "id1"], [93, "id2"], [95, "id2"], [98, "id2"], [165, "id1"], [169, "id1"], [209, "id1"]], "DynamicsBase": [[34, "dynamicsbase"]], "clohessy_wiltshire_orbit": [[35, "module-gncpy.dynamics.basic.clohessy_wiltshire_orbit"]], "clohessy_wiltshire_orbit2d": [[36, "module-gncpy.dynamics.basic.clohessy_wiltshire_orbit2d"]], "coordinated_turn_known": [[37, "module-gncpy.dynamics.basic.coordinated_turn_known"]], "coordinated_turn_unknown": [[38, "module-gncpy.dynamics.basic.coordinated_turn_unknown"]], "curvilinear_motion": [[39, "module-gncpy.dynamics.basic.curvilinear_motion"]], "double_integrator": [[40, "module-gncpy.dynamics.basic.double_integrator"]], "dynamics_base": [[41, "module-gncpy.dynamics.basic.dynamics_base"]], "irobot_create": [[42, "module-gncpy.dynamics.basic.irobot_create"]], "karlgaard_orbit": [[43, "module-gncpy.dynamics.basic.karlgaard_orbit"]], "linear_dynamics_base": [[44, "module-gncpy.dynamics.basic.linear_dynamics_base"]], "nonlinear_dynamics_base": [[45, "module-gncpy.dynamics.basic.nonlinear_dynamics_base"]], "tschauner_hempel_orbit": [[46, "module-gncpy.dynamics.basic.tschauner_hempel_orbit"]], "IRobotCreate": [[47, "irobotcreate"]], "KarlgaardOrbit": [[48, "karlgaardorbit"]], "LinearDynamicsBase": [[49, "lineardynamicsbase"]], "NonlinearDynamicsBase": [[50, "nonlineardynamicsbase"]], "TschaunerHempelOrbit": [[51, "tschaunerhempelorbit"]], "aircraft": [[52, "module-gncpy.dynamics.aircraft"]], "basic": [[53, "module-gncpy.dynamics.basic"]], "gncpy.errors.ExtremeMeasurementNoiseError": [[54, "gncpy-errors-extrememeasurementnoiseerror"]], "gncpy.errors.ParticleDepletionError": [[55, "gncpy-errors-particledepletionerror"]], "gncpy.errors.ParticleEstimationDomainError": [[56, "gncpy-errors-particleestimationdomainerror"]], "BayesFilter": [[57, "bayesfilter"]], "BootstrapFilter": [[58, "bootstrapfilter"]], "EKFGaussianScaleMixtureFilter": [[59, "ekfgaussianscalemixturefilter"]], "ExtendedKalmanFilter": [[60, "extendedkalmanfilter"]], "GCIFilter": [[61, "gcifilter"]], "bayes_filter": [[62, "module-gncpy.filters.bayes_filter"]], "bootstrap_filter": [[63, "module-gncpy.filters.bootstrap_filter"]], "ekf_gaussian_scale_mixture_filter": [[64, "module-gncpy.filters.ekf_gaussian_scale_mixture_filter"]], "extended_kalman_filter": [[65, "module-gncpy.filters.extended_kalman_filter"]], "gci_filter": [[66, "module-gncpy.filters.gci_filter"]], "gsm_filter_base": [[67, "module-gncpy.filters.gsm_filter_base"]], "imm_gci_filter": [[68, "module-gncpy.filters.imm_gci_filter"]], "interacting_multiple_model": [[69, "module-gncpy.filters.interacting_multiple_model"]], "kalman_filter": [[70, "module-gncpy.filters.kalman_filter"]], "kf_gaussian_scale_mixture_filter": [[71, "module-gncpy.filters.kf_gaussian_scale_mixture_filter"]], "max_corr_ent_ukf": [[72, "module-gncpy.filters.max_corr_ent_ukf"]], "max_corr_ent_upf": [[73, "module-gncpy.filters.max_corr_ent_upf"]], "mcmc_particle_filter_base": [[74, "module-gncpy.filters.mcmc_particle_filter_base"]], "particle_filter": [[75, "module-gncpy.filters.particle_filter"]], "qkf_gaussian_scale_mixture_filter": [[76, "module-gncpy.filters.qkf_gaussian_scale_mixture_filter"]], "quadrature_kalman_filter": [[77, "module-gncpy.filters.quadrature_kalman_filter"]], "sqkf_gaussian_scale_mixture_filter": [[78, "module-gncpy.filters.sqkf_gaussian_scale_mixture_filter"]], "square_root_qkf": [[79, "module-gncpy.filters.square_root_qkf"]], "students_t_filter": [[80, "module-gncpy.filters.students_t_filter"]], "ukf_gaussian_scale_mixture_filter": [[81, "module-gncpy.filters.ukf_gaussian_scale_mixture_filter"]], "unscented_kalman_filter": [[82, "module-gncpy.filters.unscented_kalman_filter"]], "unscented_particle_filter": [[83, "module-gncpy.filters.unscented_particle_filter"]], "GSMFilterBase": [[84, "gsmfilterbase"]], "IMMGCIFilter": [[85, "immgcifilter"]], "InteractingMultipleModel": [[86, "interactingmultiplemodel"]], "KalmanFilter": [[87, "kalmanfilter"]], "KFGaussianScaleMixtureFilter": [[88, "kfgaussianscalemixturefilter"]], "MaxCorrEntUKF": [[89, "maxcorrentukf"]], "MaxCorrEntUPF": [[90, "maxcorrentupf"]], "MCMCParticleFilterBase": [[91, "mcmcparticlefilterbase"]], "ParticleFilter": [[92, "particlefilter"]], "QKFGaussianScaleMixtureFilter": [[93, "qkfgaussianscalemixturefilter"]], "QuadratureKalmanFilter": [[94, "quadraturekalmanfilter"]], "SQKFGaussianScaleMixtureFilter": [[95, "sqkfgaussianscalemixturefilter"]], "SquareRootQKF": [[96, "squarerootqkf"]], "StudentsTFilter": [[97, "studentstfilter"]], "UKFGaussianScaleMixtureFilter": [[98, "ukfgaussianscalemixturefilter"]], "UnscentedKalmanFilter": [[99, "unscentedkalmanfilter"]], "UnscentedParticleFilter": [[100, "unscentedparticlefilter"]], "Base2dParams": [[101, "base2dparams"]], "BaseGame": [[102, "basegame"]], "BaseGame2d": [[103, "basegame2d"]], "BaseParams": [[104, "baseparams"]], "WindowParams": [[105, "windowparams"]], "gncpy.game_engine.base_game.ndarray_representer": [[106, "gncpy-game-engine-base-game-ndarray-representer"]], "gncpy.game_engine.base_game.yaml": [[107, "gncpy-game-engine-base-game-yaml"]], "CBirth": [[108, "cbirth"]], "CCapabilities": [[109, "ccapabilities"]], "CCollision": [[110, "ccollision"]], "CDynamics": [[111, "cdynamics"]], "CEvents": [[112, "cevents"]], "CHazard": [[113, "chazard"]], "CPriority": [[114, "cpriority"]], "CShape": [[115, "cshape"]], "CTransform": [[116, "ctransform"]], "gncpy.game_engine.components.library_asset_dir": [[117, "gncpy-game-engine-components-library-asset-dir"]], "Entity": [[118, "entity"]], "EntityManager": [[119, "entitymanager"]], "base_game": [[120, "module-gncpy.game_engine.base_game"]], "components": [[121, "module-gncpy.game_engine.components"]], "entities": [[122, "module-gncpy.game_engine.entities"]], "physics2d": [[123, "module-gncpy.game_engine.physics2d"]], "rendering2d": [[124, "module-gncpy.game_engine.rendering2d"]], "Collision2dParams": [[125, "collision2dparams"]], "Physics2dParams": [[126, "physics2dparams"]], "gncpy.game_engine.physics2d.check_collision2d": [[127, "gncpy-game-engine-physics2d-check-collision2d"]], "gncpy.game_engine.physics2d.clamp_window_bounds2d": [[128, "gncpy-game-engine-physics2d-clamp-window-bounds2d"]], "gncpy.game_engine.physics2d.dist_to_pixels": [[129, "gncpy-game-engine-physics2d-dist-to-pixels"]], "gncpy.game_engine.physics2d.pixels_to_dist": [[130, "gncpy-game-engine-physics2d-pixels-to-dist"]], "gncpy.game_engine.physics2d.resolve_collision2d": [[131, "gncpy-game-engine-physics2d-resolve-collision2d"]], "Shape2dParams": [[132, "shape2dparams"]], "gncpy.game_engine.rendering2d.get_drawable_entities": [[133, "gncpy-game-engine-rendering2d-get-drawable-entities"]], "gncpy.game_engine.rendering2d.init_rendering_system": [[134, "gncpy-game-engine-rendering2d-init-rendering-system"]], "gncpy.game_engine.rendering2d.init_window": [[135, "gncpy-game-engine-rendering2d-init-window"]], "gncpy.game_engine.rendering2d.render": [[136, "gncpy-game-engine-rendering2d-render"]], "gncpy.game_engine.rendering2d.shutdown": [[137, "gncpy-game-engine-rendering2d-shutdown"]], "BirthModelParams": [[138, "birthmodelparams"]], "ControlModelParams": [[139, "controlmodelparams"]], "DynamicsParams": [[140, "dynamicsparams"]], "EventType": [[141, "eventtype"]], "HazardParams": [[142, "hazardparams"]], "ObstacleParams": [[143, "obstacleparams"]], "Params": [[144, "params"]], "PlayerParams": [[145, "playerparams"]], "ScoreParams": [[146, "scoreparams"]], "SimpleUAV2d": [[147, "simpleuav2d"], [150, "module-gncpy.games.SimpleUAV2d"], [192, "simpleuav2d"]], "StateConstraintParams": [[148, "stateconstraintparams"]], "TargetParams": [[149, "targetparams"]], "control": [[151, "module-gncpy.control"]], "coordinate_transforms": [[152, "module-gncpy.coordinate_transforms"]], "data_fusion": [[153, "module-gncpy.data_fusion"]], "distributions": [[154, "module-gncpy.distributions"]], "dynamics": [[155, "module-gncpy.dynamics"]], "errors": [[156, "module-gncpy.errors"]], "filters": [[157, "module-gncpy.filters"]], "game_engine": [[158, "module-gncpy.game_engine"]], "games": [[159, "module-gncpy.games"]], "math": [[160, "module-gncpy.math"]], "measurements": [[161, "module-gncpy.measurements"]], "orbital_mechanics": [[162, "module-gncpy.orbital_mechanics"]], "planning": [[163, "module-gncpy.planning"]], "plotting": [[164, "module-gncpy.plotting"]], "sampling": [[165, "module-gncpy.sampling"]], "utilities": [[166, "module-gncpy.utilities"]], "wgs84": [[167, "module-gncpy.wgs84"]], "gncpy.math.epanechnikov_kernel": [[168, "gncpy-math-epanechnikov-kernel"]], "gncpy.math.gamma_fnc": [[169, "gncpy-math-gamma-fnc"]], "gncpy.math.gaussian_kernel": [[170, "gncpy-math-gaussian-kernel"]], "gncpy.math.get_elem_sym_fnc": [[171, "gncpy-math-get-elem-sym-fnc"]], "gncpy.math.get_hessian": [[172, "gncpy-math-get-hessian"]], "gncpy.math.get_input_jacobian": [[173, "gncpy-math-get-input-jacobian"]], "gncpy.math.get_jacobian": [[174, "gncpy-math-get-jacobian"]], "gncpy.math.get_state_jacobian": [[175, "gncpy-math-get-state-jacobian"]], "gncpy.math.log_sum_exp": [[176, "gncpy-math-log-sum-exp"]], "gncpy.math.rk4": [[177, "gncpy-math-rk4"]], "gncpy.math.rk4_backward": [[178, "gncpy-math-rk4-backward"]], "gncpy.math.weighted_sum_mat": [[179, "gncpy-math-weighted-sum-mat"]], "gncpy.math.weighted_sum_vec": [[180, "gncpy-math-weighted-sum-vec"]], "gncpy.orbital_mechanics.correct_lon_ascend": [[181, "gncpy-orbital-mechanics-correct-lon-ascend"]], "gncpy.orbital_mechanics.ecc_anom_from_mean": [[182, "gncpy-orbital-mechanics-ecc-anom-from-mean"]], "gncpy.orbital_mechanics.ecef_from_orbit": [[183, "gncpy-orbital-mechanics-ecef-from-orbit"]], "gncpy.orbital_mechanics.true_anom_from_ecc": [[184, "gncpy-orbital-mechanics-true-anom-from-ecc"]], "AStar": [[185, "astar"]], "Node": [[186, "node"], [204, "node"]], "a_star": [[187, "module-gncpy.planning.a_star"]], "reinforcement_learning": [[188, "module-gncpy.planning.reinforcement_learning"]], "rrt_star": [[189, "module-gncpy.planning.rrt_star"]], "simple2d": [[190, "module-gncpy.planning.reinforcement_learning.envs.simple2d"]], "simpleUAV2d": [[191, "module-gncpy.planning.reinforcement_learning.envs.simple2d.simpleUAV2d"]], "SimpleUAVHazards2d": [[193, "simpleuavhazards2d"]], "envs": [[194, "module-gncpy.planning.reinforcement_learning.envs"]], "wrappers": [[195, "module-gncpy.planning.reinforcement_learning.wrappers"]], "BufferFames": [[196, "bufferfames"]], "GrayScaleObservation": [[197, "grayscaleobservation"]], "MaxFrames": [[198, "maxframes"]], "ResizeImage": [[199, "resizeimage"]], "SkipFrames": [[200, "skipframes"]], "StackFrames": [[201, "stackframes"]], "ExtendedLQRRRTStar": [[202, "extendedlqrrrtstar"]], "LQRRRTStar": [[203, "lqrrrtstar"]], "gncpy.plotting.calc_error_ellipse": [[205, "gncpy-plotting-calc-error-ellipse"]], "gncpy.plotting.get_cmap": [[206, "gncpy-plotting-get-cmap"]], "gncpy.plotting.init_plotting_opts": [[207, "gncpy-plotting-init-plotting-opts"]], "gncpy.plotting.set_title_label": [[208, "gncpy-plotting-set-title-label"]], "MetropolisHastings": [[209, "metropolishastings"]], "ClassPropertyDescriptor": [[210, "classpropertydescriptor"]], "ClassPropertyMetaClass": [[211, "classpropertymetaclass"]], "gncpy.utilities.classproperty": [[212, "gncpy-utilities-classproperty"]], "gncpy.wgs84.calc_earth_rate": [[213, "gncpy-wgs84-calc-earth-rate"]], "gncpy.wgs84.calc_ew_rad": [[214, "gncpy-wgs84-calc-ew-rad"]], "gncpy.wgs84.calc_gravity": [[215, "gncpy-wgs84-calc-gravity"]], "gncpy.wgs84.calc_ns_rad": [[216, "gncpy-wgs84-calc-ns-rad"]], "gncpy.wgs84.calc_transport_rate": [[217, "gncpy-wgs84-calc-transport-rate"]], "gncpy.wgs84.convert_msl_to_wgs": [[218, "gncpy-wgs84-convert-msl-to-wgs"]], "gncpy.wgs84.convert_wgs_to_msl": [[219, "gncpy-wgs84-convert-wgs-to-msl"]], "gncpy.wgs84.init_egm_lookup_table": [[220, "gncpy-wgs84-init-egm-lookup-table"]], "API Reference": [[221, "api-reference"]], "CI/CD Pipeline": [[222, "ci-cd-pipeline"]], "Github Actions Quick Guide": [[222, "github-actions-quick-guide"]], "Welcome to GNCPy\u2019s documentation!": [[223, "welcome-to-gncpy-s-documentation"]], "Contents:": [[223, null], [226, null], [230, null]], "Cite": [[223, "cite"]], "Indices and tables": [[223, "indices-and-tables"]], "License": [[224, "license"]], "Toolchain": [[225, "toolchain"]], "Development Environment Setup": [[225, "development-environment-setup"]], "Example Workflow": [[225, "example-workflow"]], "Notes on tox": [[225, "notes-on-tox"]], "Usage": [[226, "usage"]], "A* Examples": [[227, "a-examples"]], "Examples": [[227, "examples"], [228, "examples"], [229, "examples"], [231, "examples"]], "Normal A*": [[227, "normal-a"]], "Beam Search": [[227, "beam-search"]], "Weighted A*": [[227, "weighted-a"]], "Control Examples": [[228, "control-examples"]], "LQR Infinite Horizon Linear Dyanmics": [[228, "lqr-infinite-horizon-linear-dyanmics"]], "LQR Finite Horzon Linear Dynamics": [[228, "lqr-finite-horzon-linear-dynamics"]], "LQR Finite Horzon Non-linear Dynamics": [[228, "lqr-finite-horzon-non-linear-dynamics"]], "ELQR Modified Quadratization": [[228, "elqr-modified-quadratization"]], "ELQR Linear Dynamics": [[228, "elqr-linear-dynamics"]], "Filter Examples": [[229, "filter-examples"]], "Kalman Filter": [[229, "kalman-filter"]], "Extended Kalman Filter": [[229, "extended-kalman-filter"]], "Interacting Multiple Model Filter": [[229, "interacting-multiple-model-filter"]], "Planning Examples": [[230, "planning-examples"]], "RRT* Examples": [[231, "rrt-examples"]], "LQR-RRT* with Linear Dynamics": [[231, "lqr-rrt-with-linear-dynamics"]], "LQR-RRT* with Non-Linear Dynamics": [[231, "lqr-rrt-with-non-linear-dynamics"]], "ELQR-RRT* with Non-Linear Dynamics": [[231, "elqr-rrt-with-non-linear-dynamics"]]}, "indexentries": {"gncpy": [[1, "module-gncpy"]], "module": [[1, "module-gncpy"], [3, "module-gncpy.control.elqr"], [4, "module-gncpy.control.lqr"], [17, "module-gncpy.dynamics.aircraft.simple_multirotor"], [35, "module-gncpy.dynamics.basic.clohessy_wiltshire_orbit"], [36, "module-gncpy.dynamics.basic.clohessy_wiltshire_orbit2d"], [37, "module-gncpy.dynamics.basic.coordinated_turn_known"], [38, "module-gncpy.dynamics.basic.coordinated_turn_unknown"], [39, "module-gncpy.dynamics.basic.curvilinear_motion"], [40, "module-gncpy.dynamics.basic.double_integrator"], [41, "module-gncpy.dynamics.basic.dynamics_base"], [42, "module-gncpy.dynamics.basic.irobot_create"], [43, "module-gncpy.dynamics.basic.karlgaard_orbit"], [44, "module-gncpy.dynamics.basic.linear_dynamics_base"], [45, "module-gncpy.dynamics.basic.nonlinear_dynamics_base"], [46, "module-gncpy.dynamics.basic.tschauner_hempel_orbit"], [52, "module-gncpy.dynamics.aircraft"], [53, "module-gncpy.dynamics.basic"], [62, "module-gncpy.filters.bayes_filter"], [63, "module-gncpy.filters.bootstrap_filter"], [64, "module-gncpy.filters.ekf_gaussian_scale_mixture_filter"], [65, "module-gncpy.filters.extended_kalman_filter"], [66, "module-gncpy.filters.gci_filter"], [67, "module-gncpy.filters.gsm_filter_base"], [68, "module-gncpy.filters.imm_gci_filter"], [69, "module-gncpy.filters.interacting_multiple_model"], [70, "module-gncpy.filters.kalman_filter"], [71, "module-gncpy.filters.kf_gaussian_scale_mixture_filter"], [72, "module-gncpy.filters.max_corr_ent_ukf"], [73, "module-gncpy.filters.max_corr_ent_upf"], [74, "module-gncpy.filters.mcmc_particle_filter_base"], [75, "module-gncpy.filters.particle_filter"], [76, "module-gncpy.filters.qkf_gaussian_scale_mixture_filter"], [77, "module-gncpy.filters.quadrature_kalman_filter"], [78, "module-gncpy.filters.sqkf_gaussian_scale_mixture_filter"], [79, "module-gncpy.filters.square_root_qkf"], [80, "module-gncpy.filters.students_t_filter"], [81, "module-gncpy.filters.ukf_gaussian_scale_mixture_filter"], [82, "module-gncpy.filters.unscented_kalman_filter"], [83, "module-gncpy.filters.unscented_particle_filter"], [120, "module-gncpy.game_engine.base_game"], [121, "module-gncpy.game_engine.components"], [122, "module-gncpy.game_engine.entities"], [123, "module-gncpy.game_engine.physics2d"], [124, "module-gncpy.game_engine.rendering2d"], [150, "module-gncpy.games.SimpleUAV2d"], [151, "module-gncpy.control"], [152, "module-gncpy.coordinate_transforms"], [153, "module-gncpy.data_fusion"], [154, "module-gncpy.distributions"], [155, "module-gncpy.dynamics"], [156, "module-gncpy.errors"], [157, "module-gncpy.filters"], [158, "module-gncpy.game_engine"], [159, "module-gncpy.games"], [160, "module-gncpy.math"], [161, "module-gncpy.measurements"], [162, "module-gncpy.orbital_mechanics"], [163, "module-gncpy.planning"], [164, "module-gncpy.plotting"], [165, "module-gncpy.sampling"], [166, "module-gncpy.utilities"], [167, "module-gncpy.wgs84"], [187, "module-gncpy.planning.a_star"], [188, "module-gncpy.planning.reinforcement_learning"], [189, "module-gncpy.planning.rrt_star"], [190, "module-gncpy.planning.reinforcement_learning.envs.simple2d"], [191, "module-gncpy.planning.reinforcement_learning.envs.simple2d.simpleUAV2d"], [194, "module-gncpy.planning.reinforcement_learning.envs"], [195, "module-gncpy.planning.reinforcement_learning.wrappers"]], "elqr (class in gncpy.control.elqr)": [[2, "gncpy.control.elqr.ELQR"]], "q (elqr property)": [[2, "gncpy.control.elqr.ELQR.Q"]], "r (elqr property)": [[2, "gncpy.control.elqr.ELQR.R"]], "__init__() (elqr method)": [[2, "gncpy.control.elqr.ELQR.__init__"]], "backward_pass() (elqr method)": [[2, "gncpy.control.elqr.ELQR.backward_pass"]], "calculate_control() (elqr method)": [[2, "gncpy.control.elqr.ELQR.calculate_control"]], "cost_function() (elqr method)": [[2, "gncpy.control.elqr.ELQR.cost_function"]], "ct_come_mats (elqr attribute)": [[2, "gncpy.control.elqr.ELQR.ct_come_mats"]], "ct_come_vecs (elqr attribute)": [[2, "gncpy.control.elqr.ELQR.ct_come_vecs"]], "dt (elqr property)": [[2, "gncpy.control.elqr.ELQR.dt"]], "forward_pass() (elqr method)": [[2, "gncpy.control.elqr.ELQR.forward_pass"]], "get_state_space() (elqr method)": [[2, "gncpy.control.elqr.ELQR.get_state_space"]], "gif_frame_skip (elqr attribute)": [[2, "gncpy.control.elqr.ELQR.gif_frame_skip"]], "max_iters (elqr attribute)": [[2, "gncpy.control.elqr.ELQR.max_iters"]], "prop_state() (elqr method)": [[2, "gncpy.control.elqr.ELQR.prop_state"]], "prop_state_backward() (elqr method)": [[2, "gncpy.control.elqr.ELQR.prop_state_backward"]], "prop_state_forward() (elqr method)": [[2, "gncpy.control.elqr.ELQR.prop_state_forward"]], "quadratize_cost() (elqr method)": [[2, "gncpy.control.elqr.ELQR.quadratize_cost"]], "reset() (elqr method)": [[2, "gncpy.control.elqr.ELQR.reset"]], "set_cost_model() (elqr method)": [[2, "gncpy.control.elqr.ELQR.set_cost_model"]], "set_state_model() (elqr method)": [[2, "gncpy.control.elqr.ELQR.set_state_model"]], "solve_dare() (elqr method)": [[2, "gncpy.control.elqr.ELQR.solve_dare"]], "tol (elqr attribute)": [[2, "gncpy.control.elqr.ELQR.tol"]], "use_custom_cost (elqr attribute)": [[2, "gncpy.control.elqr.ELQR.use_custom_cost"]], "gncpy.control.elqr": [[3, "module-gncpy.control.elqr"]], "gncpy.control.lqr": [[4, "module-gncpy.control.lqr"]], "lqr (class in gncpy.control.lqr)": [[5, "gncpy.control.lqr.LQR"]], "q (lqr property)": [[5, "gncpy.control.lqr.LQR.Q"]], "r (lqr property)": [[5, "gncpy.control.lqr.LQR.R"]], "__init__() (lqr method)": [[5, "gncpy.control.lqr.LQR.__init__"]], "backward_pass() (lqr method)": [[5, "gncpy.control.lqr.LQR.backward_pass"]], "calculate_control() (lqr method)": [[5, "gncpy.control.lqr.LQR.calculate_control"]], "cost_function() (lqr method)": [[5, "gncpy.control.lqr.LQR.cost_function"]], "ct_go_mats (lqr attribute)": [[5, "gncpy.control.lqr.LQR.ct_go_mats"]], "ct_go_vecs (lqr attribute)": [[5, "gncpy.control.lqr.LQR.ct_go_vecs"]], "dt (lqr property)": [[5, "gncpy.control.lqr.LQR.dt"]], "dynobj (lqr attribute)": [[5, "gncpy.control.lqr.LQR.dynObj"]], "end_state (lqr attribute)": [[5, "gncpy.control.lqr.LQR.end_state"]], "feedback_gain (lqr attribute)": [[5, "gncpy.control.lqr.LQR.feedback_gain"]], "feedthrough_gain (lqr attribute)": [[5, "gncpy.control.lqr.LQR.feedthrough_gain"]], "get_state_space() (lqr method)": [[5, "gncpy.control.lqr.LQR.get_state_space"]], "hard_constraints (lqr attribute)": [[5, "gncpy.control.lqr.LQR.hard_constraints"]], "prop_state() (lqr method)": [[5, "gncpy.control.lqr.LQR.prop_state"]], "prop_state_backward() (lqr method)": [[5, "gncpy.control.lqr.LQR.prop_state_backward"]], "set_cost_model() (lqr method)": [[5, "gncpy.control.lqr.LQR.set_cost_model"]], "set_state_model() (lqr method)": [[5, "gncpy.control.lqr.LQR.set_state_model"]], "solve_dare() (lqr method)": [[5, "gncpy.control.lqr.LQR.solve_dare"]], "time_horizon (lqr attribute)": [[5, "gncpy.control.lqr.LQR.time_horizon"]], "u_nom (lqr attribute)": [[5, "gncpy.control.lqr.LQR.u_nom"]], "ecef_to_lla() (in module gncpy.coordinate_transforms)": [[6, "gncpy.coordinate_transforms.ecef_to_LLA"]], "ecef_to_ned() (in module gncpy.coordinate_transforms)": [[7, "gncpy.coordinate_transforms.ecef_to_NED"]], "lla_to_ecef() (in module gncpy.coordinate_transforms)": [[8, "gncpy.coordinate_transforms.lla_to_ECEF"]], "lla_to_ned() (in module gncpy.coordinate_transforms)": [[9, "gncpy.coordinate_transforms.lla_to_NED"]], "ned_to_lla() (in module gncpy.coordinate_transforms)": [[10, "gncpy.coordinate_transforms.ned_to_LLA"]], "generalizedcovarianceintersection() (in module gncpy.data_fusion)": [[11, "gncpy.data_fusion.GeneralizedCovarianceIntersection"]], "particle (class in gncpy.distributions)": [[12, "gncpy.distributions.Particle"]], "__init__() (particle method)": [[12, "gncpy.distributions.Particle.__init__"]], "mean (particle property)": [[12, "gncpy.distributions.Particle.mean"]], "point (particle attribute)": [[12, "gncpy.distributions.Particle.point"]], "sigmapoints (particle attribute)": [[12, "gncpy.distributions.Particle.sigmaPoints"]], "uncertainty (particle attribute)": [[12, "gncpy.distributions.Particle.uncertainty"]], "particledistribution (class in gncpy.distributions)": [[13, "gncpy.distributions.ParticleDistribution"]], "__init__() (particledistribution method)": [[13, "gncpy.distributions.ParticleDistribution.__init__"]], "add_particle() (particledistribution method)": [[13, "gncpy.distributions.ParticleDistribution.add_particle"]], "clear_particles() (particledistribution method)": [[13, "gncpy.distributions.ParticleDistribution.clear_particles"]], "covariance (particledistribution property)": [[13, "gncpy.distributions.ParticleDistribution.covariance"]], "mean (particledistribution property)": [[13, "gncpy.distributions.ParticleDistribution.mean"]], "num_particles (particledistribution property)": [[13, "gncpy.distributions.ParticleDistribution.num_particles"]], "particles (particledistribution property)": [[13, "gncpy.distributions.ParticleDistribution.particles"]], "uncertainties (particledistribution property)": [[13, "gncpy.distributions.ParticleDistribution.uncertainties"]], "update_weights() (particledistribution method)": [[13, "gncpy.distributions.ParticleDistribution.update_weights"]], "weights (particledistribution property)": [[13, "gncpy.distributions.ParticleDistribution.weights"]], "quadraturepoints (class in gncpy.distributions)": [[14, "gncpy.distributions.QuadraturePoints"]], "__init__() (quadraturepoints method)": [[14, "gncpy.distributions.QuadraturePoints.__init__"]], "cov (quadraturepoints property)": [[14, "gncpy.distributions.QuadraturePoints.cov"]], "mean (quadraturepoints property)": [[14, "gncpy.distributions.QuadraturePoints.mean"]], "num_axes (quadraturepoints attribute)": [[14, "gncpy.distributions.QuadraturePoints.num_axes"]], "num_points (quadraturepoints property)": [[14, "gncpy.distributions.QuadraturePoints.num_points"]], "plot_points() (quadraturepoints method)": [[14, "gncpy.distributions.QuadraturePoints.plot_points"]], "points (quadraturepoints attribute)": [[14, "gncpy.distributions.QuadraturePoints.points"]], "points_per_axis (quadraturepoints attribute)": [[14, "gncpy.distributions.QuadraturePoints.points_per_axis"]], "update_points() (quadraturepoints method)": [[14, "gncpy.distributions.QuadraturePoints.update_points"]], "weights (quadraturepoints attribute)": [[14, "gncpy.distributions.QuadraturePoints.weights"]], "sigmapoints (class in gncpy.distributions)": [[15, "gncpy.distributions.SigmaPoints"]], "__init__() (sigmapoints method)": [[15, "gncpy.distributions.SigmaPoints.__init__"]], "alpha (sigmapoints attribute)": [[15, "gncpy.distributions.SigmaPoints.alpha"]], "beta (sigmapoints attribute)": [[15, "gncpy.distributions.SigmaPoints.beta"]], "cov (sigmapoints property)": [[15, "gncpy.distributions.SigmaPoints.cov"]], "init_weights() (sigmapoints method)": [[15, "gncpy.distributions.SigmaPoints.init_weights"]], "kappa (sigmapoints attribute)": [[15, "gncpy.distributions.SigmaPoints.kappa"]], "lam (sigmapoints property)": [[15, "gncpy.distributions.SigmaPoints.lam"]], "mean (sigmapoints property)": [[15, "gncpy.distributions.SigmaPoints.mean"]], "num_points (sigmapoints property)": [[15, "gncpy.distributions.SigmaPoints.num_points"]], "plot_points() (sigmapoints method)": [[15, "gncpy.distributions.SigmaPoints.plot_points"]], "update_points() (sigmapoints method)": [[15, "gncpy.distributions.SigmaPoints.update_points"]], "weights_cov (sigmapoints property)": [[15, "gncpy.distributions.SigmaPoints.weights_cov"]], "weights_mean (sigmapoints property)": [[15, "gncpy.distributions.SigmaPoints.weights_mean"]], "simpleparticledistribution (class in gncpy.distributions)": [[16, "gncpy.distributions.SimpleParticleDistribution"]], "__init__() (simpleparticledistribution method)": [[16, "gncpy.distributions.SimpleParticleDistribution.__init__"]], "plot_particles() (simpleparticledistribution method)": [[16, "gncpy.distributions.SimpleParticleDistribution.plot_particles"]], "gncpy.dynamics.aircraft.simple_multirotor": [[17, "module-gncpy.dynamics.aircraft.simple_multirotor"]], "aeroparams (class in gncpy.dynamics.aircraft.simple_multirotor)": [[18, "gncpy.dynamics.aircraft.simple_multirotor.AeroParams"]], "__init__() (aeroparams method)": [[18, "gncpy.dynamics.aircraft.simple_multirotor.AeroParams.__init__"]], "cd (aeroparams attribute)": [[18, "gncpy.dynamics.aircraft.simple_multirotor.AeroParams.cd"]], "aircraftparams (class in gncpy.dynamics.aircraft.simple_multirotor)": [[19, "gncpy.dynamics.aircraft.simple_multirotor.AircraftParams"]], "__init__() (aircraftparams method)": [[19, "gncpy.dynamics.aircraft.simple_multirotor.AircraftParams.__init__"]], "aero (aircraftparams attribute)": [[19, "gncpy.dynamics.aircraft.simple_multirotor.AircraftParams.aero"]], "geo (aircraftparams attribute)": [[19, "gncpy.dynamics.aircraft.simple_multirotor.AircraftParams.geo"]], "mass (aircraftparams attribute)": [[19, "gncpy.dynamics.aircraft.simple_multirotor.AircraftParams.mass"]], "motor (aircraftparams attribute)": [[19, "gncpy.dynamics.aircraft.simple_multirotor.AircraftParams.motor"]], "prop (aircraftparams attribute)": [[19, "gncpy.dynamics.aircraft.simple_multirotor.AircraftParams.prop"]], "effector (class in gncpy.dynamics.aircraft.simple_multirotor)": [[20, "gncpy.dynamics.aircraft.simple_multirotor.Effector"]], "__init__() (effector method)": [[20, "gncpy.dynamics.aircraft.simple_multirotor.Effector.__init__"]], "step() (effector method)": [[20, "gncpy.dynamics.aircraft.simple_multirotor.Effector.step"]], "environment (class in gncpy.dynamics.aircraft.simple_multirotor)": [[21, "gncpy.dynamics.aircraft.simple_multirotor.Environment"]], "__init__() (environment method)": [[21, "gncpy.dynamics.aircraft.simple_multirotor.Environment.__init__"]], "state (environment attribute)": [[21, "gncpy.dynamics.aircraft.simple_multirotor.Environment.state"]], "step() (environment method)": [[21, "gncpy.dynamics.aircraft.simple_multirotor.Environment.step"]], "geoparams (class in gncpy.dynamics.aircraft.simple_multirotor)": [[22, "gncpy.dynamics.aircraft.simple_multirotor.GeoParams"]], "__init__() (geoparams method)": [[22, "gncpy.dynamics.aircraft.simple_multirotor.GeoParams.__init__"]], "front_area_m2 (geoparams attribute)": [[22, "gncpy.dynamics.aircraft.simple_multirotor.GeoParams.front_area_m2"]], "massparams (class in gncpy.dynamics.aircraft.simple_multirotor)": [[23, "gncpy.dynamics.aircraft.simple_multirotor.MassParams"]], "__init__() (massparams method)": [[23, "gncpy.dynamics.aircraft.simple_multirotor.MassParams.__init__"]], "cg_m (massparams attribute)": [[23, "gncpy.dynamics.aircraft.simple_multirotor.MassParams.cg_m"]], "inertia_kgm2 (massparams attribute)": [[23, "gncpy.dynamics.aircraft.simple_multirotor.MassParams.inertia_kgm2"]], "mass_kg (massparams attribute)": [[23, "gncpy.dynamics.aircraft.simple_multirotor.MassParams.mass_kg"]], "motorparams (class in gncpy.dynamics.aircraft.simple_multirotor)": [[24, "gncpy.dynamics.aircraft.simple_multirotor.MotorParams"]], "__init__() (motorparams method)": [[24, "gncpy.dynamics.aircraft.simple_multirotor.MotorParams.__init__"]], "dir (motorparams attribute)": [[24, "gncpy.dynamics.aircraft.simple_multirotor.MotorParams.dir"]], "num_motors (motorparams property)": [[24, "gncpy.dynamics.aircraft.simple_multirotor.MotorParams.num_motors"]], "pos_m (motorparams attribute)": [[24, "gncpy.dynamics.aircraft.simple_multirotor.MotorParams.pos_m"]], "propparams (class in gncpy.dynamics.aircraft.simple_multirotor)": [[25, "gncpy.dynamics.aircraft.simple_multirotor.PropParams"]], "__init__() (propparams method)": [[25, "gncpy.dynamics.aircraft.simple_multirotor.PropParams.__init__"]], "poly_thrust (propparams attribute)": [[25, "gncpy.dynamics.aircraft.simple_multirotor.PropParams.poly_thrust"]], "poly_torque (propparams attribute)": [[25, "gncpy.dynamics.aircraft.simple_multirotor.PropParams.poly_torque"]], "simplemultirotor (class in gncpy.dynamics.aircraft.simple_multirotor)": [[26, "gncpy.dynamics.aircraft.simple_multirotor.SimpleMultirotor"]], "__init__() (simplemultirotor method)": [[26, "gncpy.dynamics.aircraft.simple_multirotor.SimpleMultirotor.__init__"]], "effector (simplemultirotor attribute)": [[26, "gncpy.dynamics.aircraft.simple_multirotor.SimpleMultirotor.effector"]], "env (simplemultirotor attribute)": [[26, "gncpy.dynamics.aircraft.simple_multirotor.SimpleMultirotor.env"]], "get_input_mat() (simplemultirotor method)": [[26, "gncpy.dynamics.aircraft.simple_multirotor.SimpleMultirotor.get_input_mat"]], "get_state_mat() (simplemultirotor method)": [[26, "gncpy.dynamics.aircraft.simple_multirotor.SimpleMultirotor.get_state_mat"]], "propagate_state() (simplemultirotor method)": [[26, "gncpy.dynamics.aircraft.simple_multirotor.SimpleMultirotor.propagate_state"]], "set_initial_conditions() (simplemultirotor method)": [[26, "gncpy.dynamics.aircraft.simple_multirotor.SimpleMultirotor.set_initial_conditions"]], "state_map (simplemultirotor attribute)": [[26, "gncpy.dynamics.aircraft.simple_multirotor.SimpleMultirotor.state_map"]], "state_names (simplemultirotor attribute)": [[26, "gncpy.dynamics.aircraft.simple_multirotor.SimpleMultirotor.state_names"]], "state_units (simplemultirotor attribute)": [[26, "gncpy.dynamics.aircraft.simple_multirotor.SimpleMultirotor.state_units"]], "validate_params_file() (simplemultirotor method)": [[26, "gncpy.dynamics.aircraft.simple_multirotor.SimpleMultirotor.validate_params_file"]], "vehicle (simplemultirotor attribute)": [[26, "gncpy.dynamics.aircraft.simple_multirotor.SimpleMultirotor.vehicle"]], "vehicle (class in gncpy.dynamics.aircraft.simple_multirotor)": [[27, "gncpy.dynamics.aircraft.simple_multirotor.Vehicle"]], "__init__() (vehicle method)": [[27, "gncpy.dynamics.aircraft.simple_multirotor.Vehicle.__init__"]], "calc_derived_states() (vehicle method)": [[27, "gncpy.dynamics.aircraft.simple_multirotor.Vehicle.calc_derived_states"]], "eul_to_dcm() (vehicle method)": [[27, "gncpy.dynamics.aircraft.simple_multirotor.Vehicle.eul_to_dcm"]], "params (vehicle attribute)": [[27, "gncpy.dynamics.aircraft.simple_multirotor.Vehicle.params"]], "ref_lat (vehicle attribute)": [[27, "gncpy.dynamics.aircraft.simple_multirotor.Vehicle.ref_lat"]], "ref_lon (vehicle attribute)": [[27, "gncpy.dynamics.aircraft.simple_multirotor.Vehicle.ref_lon"]], "set_dcm_earth2body() (vehicle method)": [[27, "gncpy.dynamics.aircraft.simple_multirotor.Vehicle.set_dcm_earth2body"]], "state (vehicle attribute)": [[27, "gncpy.dynamics.aircraft.simple_multirotor.Vehicle.state"]], "step() (vehicle method)": [[27, "gncpy.dynamics.aircraft.simple_multirotor.Vehicle.step"]], "takenoff (vehicle attribute)": [[27, "gncpy.dynamics.aircraft.simple_multirotor.Vehicle.takenoff"]], "clohessywiltshireorbit (class in gncpy.dynamics.basic.clohessy_wiltshire_orbit)": [[28, "gncpy.dynamics.basic.clohessy_wiltshire_orbit.ClohessyWiltshireOrbit"]], "__init__() (clohessywiltshireorbit method)": [[28, "gncpy.dynamics.basic.clohessy_wiltshire_orbit.ClohessyWiltshireOrbit.__init__"]], "get_dis_process_noise_mat() (clohessywiltshireorbit method)": [[28, "gncpy.dynamics.basic.clohessy_wiltshire_orbit.ClohessyWiltshireOrbit.get_dis_process_noise_mat"]], "get_input_mat() (clohessywiltshireorbit method)": [[28, "gncpy.dynamics.basic.clohessy_wiltshire_orbit.ClohessyWiltshireOrbit.get_input_mat"]], "get_state_mat() (clohessywiltshireorbit method)": [[28, "gncpy.dynamics.basic.clohessy_wiltshire_orbit.ClohessyWiltshireOrbit.get_state_mat"]], "mean_motion (clohessywiltshireorbit attribute)": [[28, "gncpy.dynamics.basic.clohessy_wiltshire_orbit.ClohessyWiltshireOrbit.mean_motion"]], "propagate_state() (clohessywiltshireorbit method)": [[28, "gncpy.dynamics.basic.clohessy_wiltshire_orbit.ClohessyWiltshireOrbit.propagate_state"]], "state_names (clohessywiltshireorbit property)": [[28, "gncpy.dynamics.basic.clohessy_wiltshire_orbit.ClohessyWiltshireOrbit.state_names"]], "clohessywiltshireorbit2d (class in gncpy.dynamics.basic.clohessy_wiltshire_orbit2d)": [[29, "gncpy.dynamics.basic.clohessy_wiltshire_orbit2d.ClohessyWiltshireOrbit2d"]], "__init__() (clohessywiltshireorbit2d method)": [[29, "gncpy.dynamics.basic.clohessy_wiltshire_orbit2d.ClohessyWiltshireOrbit2d.__init__"]], "get_dis_process_noise_mat() (clohessywiltshireorbit2d method)": [[29, "gncpy.dynamics.basic.clohessy_wiltshire_orbit2d.ClohessyWiltshireOrbit2d.get_dis_process_noise_mat"]], "get_input_mat() (clohessywiltshireorbit2d method)": [[29, "gncpy.dynamics.basic.clohessy_wiltshire_orbit2d.ClohessyWiltshireOrbit2d.get_input_mat"]], "get_state_mat() (clohessywiltshireorbit2d method)": [[29, "gncpy.dynamics.basic.clohessy_wiltshire_orbit2d.ClohessyWiltshireOrbit2d.get_state_mat"]], "mean_motion (clohessywiltshireorbit2d attribute)": [[29, "gncpy.dynamics.basic.clohessy_wiltshire_orbit2d.ClohessyWiltshireOrbit2d.mean_motion"]], "propagate_state() (clohessywiltshireorbit2d method)": [[29, "gncpy.dynamics.basic.clohessy_wiltshire_orbit2d.ClohessyWiltshireOrbit2d.propagate_state"]], "state_names (clohessywiltshireorbit2d property)": [[29, "gncpy.dynamics.basic.clohessy_wiltshire_orbit2d.ClohessyWiltshireOrbit2d.state_names"]], "coordinatedturnknown (class in gncpy.dynamics.basic.coordinated_turn_known)": [[30, "gncpy.dynamics.basic.coordinated_turn_known.CoordinatedTurnKnown"]], "__init__() (coordinatedturnknown method)": [[30, "gncpy.dynamics.basic.coordinated_turn_known.CoordinatedTurnKnown.__init__"]], "get_dis_process_noise_mat() (coordinatedturnknown method)": [[30, "gncpy.dynamics.basic.coordinated_turn_known.CoordinatedTurnKnown.get_dis_process_noise_mat"]], "get_input_mat() (coordinatedturnknown method)": [[30, "gncpy.dynamics.basic.coordinated_turn_known.CoordinatedTurnKnown.get_input_mat"]], "get_state_mat() (coordinatedturnknown method)": [[30, "gncpy.dynamics.basic.coordinated_turn_known.CoordinatedTurnKnown.get_state_mat"]], "propagate_state() (coordinatedturnknown method)": [[30, "gncpy.dynamics.basic.coordinated_turn_known.CoordinatedTurnKnown.propagate_state"]], "state_names (coordinatedturnknown attribute)": [[30, "gncpy.dynamics.basic.coordinated_turn_known.CoordinatedTurnKnown.state_names"]], "turn_rate (coordinatedturnknown attribute)": [[30, "gncpy.dynamics.basic.coordinated_turn_known.CoordinatedTurnKnown.turn_rate"]], "coordinatedturnunknown (class in gncpy.dynamics.basic.coordinated_turn_unknown)": [[31, "gncpy.dynamics.basic.coordinated_turn_unknown.CoordinatedTurnUnknown"]], "__init__() (coordinatedturnunknown method)": [[31, "gncpy.dynamics.basic.coordinated_turn_unknown.CoordinatedTurnUnknown.__init__"]], "alpha (coordinatedturnunknown property)": [[31, "gncpy.dynamics.basic.coordinated_turn_unknown.CoordinatedTurnUnknown.alpha"]], "beta (coordinatedturnunknown property)": [[31, "gncpy.dynamics.basic.coordinated_turn_unknown.CoordinatedTurnUnknown.beta"]], "cont_fnc_lst (coordinatedturnunknown property)": [[31, "gncpy.dynamics.basic.coordinated_turn_unknown.CoordinatedTurnUnknown.cont_fnc_lst"]], "get_input_mat() (coordinatedturnunknown method)": [[31, "gncpy.dynamics.basic.coordinated_turn_unknown.CoordinatedTurnUnknown.get_input_mat"]], "get_state_mat() (coordinatedturnunknown method)": [[31, "gncpy.dynamics.basic.coordinated_turn_unknown.CoordinatedTurnUnknown.get_state_mat"]], "propagate_state() (coordinatedturnunknown method)": [[31, "gncpy.dynamics.basic.coordinated_turn_unknown.CoordinatedTurnUnknown.propagate_state"]], "state_names (coordinatedturnunknown attribute)": [[31, "gncpy.dynamics.basic.coordinated_turn_unknown.CoordinatedTurnUnknown.state_names"]], "turn_rate_cor_time (coordinatedturnunknown attribute)": [[31, "gncpy.dynamics.basic.coordinated_turn_unknown.CoordinatedTurnUnknown.turn_rate_cor_time"]], "curvilinearmotion (class in gncpy.dynamics.basic.curvilinear_motion)": [[32, "gncpy.dynamics.basic.curvilinear_motion.CurvilinearMotion"]], "__init__() (curvilinearmotion method)": [[32, "gncpy.dynamics.basic.curvilinear_motion.CurvilinearMotion.__init__"]], "cont_fnc_lst (curvilinearmotion property)": [[32, "gncpy.dynamics.basic.curvilinear_motion.CurvilinearMotion.cont_fnc_lst"]], "get_input_mat() (curvilinearmotion method)": [[32, "gncpy.dynamics.basic.curvilinear_motion.CurvilinearMotion.get_input_mat"]], "get_state_mat() (curvilinearmotion method)": [[32, "gncpy.dynamics.basic.curvilinear_motion.CurvilinearMotion.get_state_mat"]], "propagate_state() (curvilinearmotion method)": [[32, "gncpy.dynamics.basic.curvilinear_motion.CurvilinearMotion.propagate_state"]], "state_names (curvilinearmotion attribute)": [[32, "gncpy.dynamics.basic.curvilinear_motion.CurvilinearMotion.state_names"]], "doubleintegrator (class in gncpy.dynamics.basic.double_integrator)": [[33, "gncpy.dynamics.basic.double_integrator.DoubleIntegrator"]], "__init__() (doubleintegrator method)": [[33, "gncpy.dynamics.basic.double_integrator.DoubleIntegrator.__init__"]], "get_dis_process_noise_mat() (doubleintegrator method)": [[33, "gncpy.dynamics.basic.double_integrator.DoubleIntegrator.get_dis_process_noise_mat"]], "get_input_mat() (doubleintegrator method)": [[33, "gncpy.dynamics.basic.double_integrator.DoubleIntegrator.get_input_mat"]], "get_state_mat() (doubleintegrator method)": [[33, "gncpy.dynamics.basic.double_integrator.DoubleIntegrator.get_state_mat"]], "propagate_state() (doubleintegrator method)": [[33, "gncpy.dynamics.basic.double_integrator.DoubleIntegrator.propagate_state"]], "state_names (doubleintegrator property)": [[33, "gncpy.dynamics.basic.double_integrator.DoubleIntegrator.state_names"]], "dynamicsbase (class in gncpy.dynamics.basic.dynamics_base)": [[34, "gncpy.dynamics.basic.dynamics_base.DynamicsBase"]], "__init__() (dynamicsbase method)": [[34, "gncpy.dynamics.basic.dynamics_base.DynamicsBase.__init__"]], "control_model (dynamicsbase attribute)": [[34, "gncpy.dynamics.basic.dynamics_base.DynamicsBase.control_model"]], "get_input_mat() (dynamicsbase method)": [[34, "gncpy.dynamics.basic.dynamics_base.DynamicsBase.get_input_mat"]], "get_state_mat() (dynamicsbase method)": [[34, "gncpy.dynamics.basic.dynamics_base.DynamicsBase.get_state_mat"]], "propagate_state() (dynamicsbase method)": [[34, "gncpy.dynamics.basic.dynamics_base.DynamicsBase.propagate_state"]], "state_constraint (dynamicsbase attribute)": [[34, "gncpy.dynamics.basic.dynamics_base.DynamicsBase.state_constraint"]], "state_names (dynamicsbase attribute)": [[34, "gncpy.dynamics.basic.dynamics_base.DynamicsBase.state_names"]], "gncpy.dynamics.basic.clohessy_wiltshire_orbit": [[35, "module-gncpy.dynamics.basic.clohessy_wiltshire_orbit"]], "gncpy.dynamics.basic.clohessy_wiltshire_orbit2d": [[36, "module-gncpy.dynamics.basic.clohessy_wiltshire_orbit2d"]], "gncpy.dynamics.basic.coordinated_turn_known": [[37, "module-gncpy.dynamics.basic.coordinated_turn_known"]], "gncpy.dynamics.basic.coordinated_turn_unknown": [[38, "module-gncpy.dynamics.basic.coordinated_turn_unknown"]], "gncpy.dynamics.basic.curvilinear_motion": [[39, "module-gncpy.dynamics.basic.curvilinear_motion"]], "gncpy.dynamics.basic.double_integrator": [[40, "module-gncpy.dynamics.basic.double_integrator"]], "gncpy.dynamics.basic.dynamics_base": [[41, "module-gncpy.dynamics.basic.dynamics_base"]], "gncpy.dynamics.basic.irobot_create": [[42, "module-gncpy.dynamics.basic.irobot_create"]], "gncpy.dynamics.basic.karlgaard_orbit": [[43, "module-gncpy.dynamics.basic.karlgaard_orbit"]], "gncpy.dynamics.basic.linear_dynamics_base": [[44, "module-gncpy.dynamics.basic.linear_dynamics_base"]], "gncpy.dynamics.basic.nonlinear_dynamics_base": [[45, "module-gncpy.dynamics.basic.nonlinear_dynamics_base"]], "gncpy.dynamics.basic.tschauner_hempel_orbit": [[46, "module-gncpy.dynamics.basic.tschauner_hempel_orbit"]], "irobotcreate (class in gncpy.dynamics.basic.irobot_create)": [[47, "gncpy.dynamics.basic.irobot_create.IRobotCreate"]], "__init__() (irobotcreate method)": [[47, "gncpy.dynamics.basic.irobot_create.IRobotCreate.__init__"]], "cont_fnc_lst (irobotcreate property)": [[47, "gncpy.dynamics.basic.irobot_create.IRobotCreate.cont_fnc_lst"]], "get_input_mat() (irobotcreate method)": [[47, "gncpy.dynamics.basic.irobot_create.IRobotCreate.get_input_mat"]], "get_state_mat() (irobotcreate method)": [[47, "gncpy.dynamics.basic.irobot_create.IRobotCreate.get_state_mat"]], "propagate_state() (irobotcreate method)": [[47, "gncpy.dynamics.basic.irobot_create.IRobotCreate.propagate_state"]], "state_names (irobotcreate attribute)": [[47, "gncpy.dynamics.basic.irobot_create.IRobotCreate.state_names"]], "wheel_separation (irobotcreate property)": [[47, "gncpy.dynamics.basic.irobot_create.IRobotCreate.wheel_separation"]], "karlgaardorbit (class in gncpy.dynamics.basic.karlgaard_orbit)": [[48, "gncpy.dynamics.basic.karlgaard_orbit.KarlgaardOrbit"]], "__init__() (karlgaardorbit method)": [[48, "gncpy.dynamics.basic.karlgaard_orbit.KarlgaardOrbit.__init__"]], "cont_fnc_lst (karlgaardorbit property)": [[48, "gncpy.dynamics.basic.karlgaard_orbit.KarlgaardOrbit.cont_fnc_lst"]], "get_input_mat() (karlgaardorbit method)": [[48, "gncpy.dynamics.basic.karlgaard_orbit.KarlgaardOrbit.get_input_mat"]], "get_state_mat() (karlgaardorbit method)": [[48, "gncpy.dynamics.basic.karlgaard_orbit.KarlgaardOrbit.get_state_mat"]], "propagate_state() (karlgaardorbit method)": [[48, "gncpy.dynamics.basic.karlgaard_orbit.KarlgaardOrbit.propagate_state"]], "state_names (karlgaardorbit attribute)": [[48, "gncpy.dynamics.basic.karlgaard_orbit.KarlgaardOrbit.state_names"]], "lineardynamicsbase (class in gncpy.dynamics.basic.linear_dynamics_base)": [[49, "gncpy.dynamics.basic.linear_dynamics_base.LinearDynamicsBase"]], "__init__() (lineardynamicsbase method)": [[49, "gncpy.dynamics.basic.linear_dynamics_base.LinearDynamicsBase.__init__"]], "get_dis_process_noise_mat() (lineardynamicsbase method)": [[49, "gncpy.dynamics.basic.linear_dynamics_base.LinearDynamicsBase.get_dis_process_noise_mat"]], "get_input_mat() (lineardynamicsbase method)": [[49, "gncpy.dynamics.basic.linear_dynamics_base.LinearDynamicsBase.get_input_mat"]], "get_state_mat() (lineardynamicsbase method)": [[49, "gncpy.dynamics.basic.linear_dynamics_base.LinearDynamicsBase.get_state_mat"]], "propagate_state() (lineardynamicsbase method)": [[49, "gncpy.dynamics.basic.linear_dynamics_base.LinearDynamicsBase.propagate_state"]], "state_names (lineardynamicsbase attribute)": [[49, "gncpy.dynamics.basic.linear_dynamics_base.LinearDynamicsBase.state_names"]], "nonlineardynamicsbase (class in gncpy.dynamics.basic.nonlinear_dynamics_base)": [[50, "gncpy.dynamics.basic.nonlinear_dynamics_base.NonlinearDynamicsBase"]], "__init__() (nonlineardynamicsbase method)": [[50, "gncpy.dynamics.basic.nonlinear_dynamics_base.NonlinearDynamicsBase.__init__"]], "cont_fnc_lst (nonlineardynamicsbase property)": [[50, "gncpy.dynamics.basic.nonlinear_dynamics_base.NonlinearDynamicsBase.cont_fnc_lst"]], "dt (nonlineardynamicsbase attribute)": [[50, "gncpy.dynamics.basic.nonlinear_dynamics_base.NonlinearDynamicsBase.dt"]], "get_input_mat() (nonlineardynamicsbase method)": [[50, "gncpy.dynamics.basic.nonlinear_dynamics_base.NonlinearDynamicsBase.get_input_mat"]], "get_state_mat() (nonlineardynamicsbase method)": [[50, "gncpy.dynamics.basic.nonlinear_dynamics_base.NonlinearDynamicsBase.get_state_mat"]], "integrator_params (nonlineardynamicsbase attribute)": [[50, "gncpy.dynamics.basic.nonlinear_dynamics_base.NonlinearDynamicsBase.integrator_params"]], "integrator_type (nonlineardynamicsbase attribute)": [[50, "gncpy.dynamics.basic.nonlinear_dynamics_base.NonlinearDynamicsBase.integrator_type"]], "propagate_state() (nonlineardynamicsbase method)": [[50, "gncpy.dynamics.basic.nonlinear_dynamics_base.NonlinearDynamicsBase.propagate_state"]], "state_names (nonlineardynamicsbase attribute)": [[50, "gncpy.dynamics.basic.nonlinear_dynamics_base.NonlinearDynamicsBase.state_names"]], "tschaunerhempelorbit (class in gncpy.dynamics.basic.tschauner_hempel_orbit)": [[51, "gncpy.dynamics.basic.tschauner_hempel_orbit.TschaunerHempelOrbit"]], "__init__() (tschaunerhempelorbit method)": [[51, "gncpy.dynamics.basic.tschauner_hempel_orbit.TschaunerHempelOrbit.__init__"]], "cont_fnc_lst (tschaunerhempelorbit property)": [[51, "gncpy.dynamics.basic.tschauner_hempel_orbit.TschaunerHempelOrbit.cont_fnc_lst"]], "eccentricity (tschaunerhempelorbit attribute)": [[51, "gncpy.dynamics.basic.tschauner_hempel_orbit.TschaunerHempelOrbit.eccentricity"]], "get_input_mat() (tschaunerhempelorbit method)": [[51, "gncpy.dynamics.basic.tschauner_hempel_orbit.TschaunerHempelOrbit.get_input_mat"]], "get_state_mat() (tschaunerhempelorbit method)": [[51, "gncpy.dynamics.basic.tschauner_hempel_orbit.TschaunerHempelOrbit.get_state_mat"]], "mu (tschaunerhempelorbit attribute)": [[51, "gncpy.dynamics.basic.tschauner_hempel_orbit.TschaunerHempelOrbit.mu"]], "propagate_state() (tschaunerhempelorbit method)": [[51, "gncpy.dynamics.basic.tschauner_hempel_orbit.TschaunerHempelOrbit.propagate_state"]], "semi_major (tschaunerhempelorbit attribute)": [[51, "gncpy.dynamics.basic.tschauner_hempel_orbit.TschaunerHempelOrbit.semi_major"]], "state_names (tschaunerhempelorbit attribute)": [[51, "gncpy.dynamics.basic.tschauner_hempel_orbit.TschaunerHempelOrbit.state_names"]], "gncpy.dynamics.aircraft": [[52, "module-gncpy.dynamics.aircraft"]], "gncpy.dynamics.basic": [[53, "module-gncpy.dynamics.basic"]], "extrememeasurementnoiseerror": [[54, "gncpy.errors.ExtremeMeasurementNoiseError"]], "particledepletionerror": [[55, "gncpy.errors.ParticleDepletionError"]], "particleestimationdomainerror": [[56, "gncpy.errors.ParticleEstimationDomainError"]], "bayesfilter (class in gncpy.filters.bayes_filter)": [[57, "gncpy.filters.bayes_filter.BayesFilter"]], "__init__() (bayesfilter method)": [[57, "gncpy.filters.bayes_filter.BayesFilter.__init__"]], "correct() (bayesfilter method)": [[57, "gncpy.filters.bayes_filter.BayesFilter.correct"]], "load_filter_state() (bayesfilter method)": [[57, "gncpy.filters.bayes_filter.BayesFilter.load_filter_state"]], "predict() (bayesfilter method)": [[57, "gncpy.filters.bayes_filter.BayesFilter.predict"]], "save_filter_state() (bayesfilter method)": [[57, "gncpy.filters.bayes_filter.BayesFilter.save_filter_state"]], "set_measurement_model() (bayesfilter method)": [[57, "gncpy.filters.bayes_filter.BayesFilter.set_measurement_model"]], "set_state_model() (bayesfilter method)": [[57, "gncpy.filters.bayes_filter.BayesFilter.set_state_model"]], "use_cholesky_inverse (bayesfilter attribute)": [[57, "gncpy.filters.bayes_filter.BayesFilter.use_cholesky_inverse"]], "bootstrapfilter (class in gncpy.filters.bootstrap_filter)": [[58, "gncpy.filters.bootstrap_filter.BootstrapFilter"]], "__init__() (bootstrapfilter method)": [[58, "gncpy.filters.bootstrap_filter.BootstrapFilter.__init__"]], "correct() (bootstrapfilter method)": [[58, "gncpy.filters.bootstrap_filter.BootstrapFilter.correct"]], "filt_state (bootstrapfilter attribute)": [[58, "gncpy.filters.bootstrap_filter.BootstrapFilter.filt_state"]], "load_filter_state() (bootstrapfilter method)": [[58, "gncpy.filters.bootstrap_filter.BootstrapFilter.load_filter_state"]], "plot_particles() (bootstrapfilter method)": [[58, "gncpy.filters.bootstrap_filter.BootstrapFilter.plot_particles"]], "predict() (bootstrapfilter method)": [[58, "gncpy.filters.bootstrap_filter.BootstrapFilter.predict"]], "save_filter_state() (bootstrapfilter method)": [[58, "gncpy.filters.bootstrap_filter.BootstrapFilter.save_filter_state"]], "set_measurement_model() (bootstrapfilter method)": [[58, "gncpy.filters.bootstrap_filter.BootstrapFilter.set_measurement_model"]], "set_state_model() (bootstrapfilter method)": [[58, "gncpy.filters.bootstrap_filter.BootstrapFilter.set_state_model"]], "ekfgaussianscalemixturefilter (class in gncpy.filters.ekf_gaussian_scale_mixture_filter)": [[59, "gncpy.filters.ekf_gaussian_scale_mixture_filter.EKFGaussianScaleMixtureFilter"]], "__init__() (ekfgaussianscalemixturefilter method)": [[59, "gncpy.filters.ekf_gaussian_scale_mixture_filter.EKFGaussianScaleMixtureFilter.__init__"]], "cont_cov (ekfgaussianscalemixturefilter property)": [[59, "gncpy.filters.ekf_gaussian_scale_mixture_filter.EKFGaussianScaleMixtureFilter.cont_cov"]], "correct() (ekfgaussianscalemixturefilter method)": [[59, "gncpy.filters.ekf_gaussian_scale_mixture_filter.EKFGaussianScaleMixtureFilter.correct"]], "cov (ekfgaussianscalemixturefilter property)": [[59, "gncpy.filters.ekf_gaussian_scale_mixture_filter.EKFGaussianScaleMixtureFilter.cov"]], "dt (ekfgaussianscalemixturefilter property)": [[59, "gncpy.filters.ekf_gaussian_scale_mixture_filter.EKFGaussianScaleMixtureFilter.dt"]], "filt_state (ekfgaussianscalemixturefilter attribute)": [[59, "gncpy.filters.ekf_gaussian_scale_mixture_filter.EKFGaussianScaleMixtureFilter.filt_state"]], "integrator_params (ekfgaussianscalemixturefilter property)": [[59, "gncpy.filters.ekf_gaussian_scale_mixture_filter.EKFGaussianScaleMixtureFilter.integrator_params"]], "integrator_type (ekfgaussianscalemixturefilter property)": [[59, "gncpy.filters.ekf_gaussian_scale_mixture_filter.EKFGaussianScaleMixtureFilter.integrator_type"]], "load_filter_state() (ekfgaussianscalemixturefilter method)": [[59, "gncpy.filters.ekf_gaussian_scale_mixture_filter.EKFGaussianScaleMixtureFilter.load_filter_state"]], "meas_noise (ekfgaussianscalemixturefilter property)": [[59, "gncpy.filters.ekf_gaussian_scale_mixture_filter.EKFGaussianScaleMixtureFilter.meas_noise"]], "plot_particles() (ekfgaussianscalemixturefilter method)": [[59, "gncpy.filters.ekf_gaussian_scale_mixture_filter.EKFGaussianScaleMixtureFilter.plot_particles"]], "predict() (ekfgaussianscalemixturefilter method)": [[59, "gncpy.filters.ekf_gaussian_scale_mixture_filter.EKFGaussianScaleMixtureFilter.predict"]], "proc_noise (ekfgaussianscalemixturefilter property)": [[59, "gncpy.filters.ekf_gaussian_scale_mixture_filter.EKFGaussianScaleMixtureFilter.proc_noise"]], "save_filter_state() (ekfgaussianscalemixturefilter method)": [[59, "gncpy.filters.ekf_gaussian_scale_mixture_filter.EKFGaussianScaleMixtureFilter.save_filter_state"]], "set_meas_noise_model() (ekfgaussianscalemixturefilter method)": [[59, "gncpy.filters.ekf_gaussian_scale_mixture_filter.EKFGaussianScaleMixtureFilter.set_meas_noise_model"]], "set_measurement_model() (ekfgaussianscalemixturefilter method)": [[59, "gncpy.filters.ekf_gaussian_scale_mixture_filter.EKFGaussianScaleMixtureFilter.set_measurement_model"]], "set_process_noise_model() (ekfgaussianscalemixturefilter method)": [[59, "gncpy.filters.ekf_gaussian_scale_mixture_filter.EKFGaussianScaleMixtureFilter.set_process_noise_model"]], "set_state_model() (ekfgaussianscalemixturefilter method)": [[59, "gncpy.filters.ekf_gaussian_scale_mixture_filter.EKFGaussianScaleMixtureFilter.set_state_model"]], "extendedkalmanfilter (class in gncpy.filters.extended_kalman_filter)": [[60, "gncpy.filters.extended_kalman_filter.ExtendedKalmanFilter"]], "__init__() (extendedkalmanfilter method)": [[60, "gncpy.filters.extended_kalman_filter.ExtendedKalmanFilter.__init__"]], "cont_cov (extendedkalmanfilter attribute)": [[60, "gncpy.filters.extended_kalman_filter.ExtendedKalmanFilter.cont_cov"]], "correct() (extendedkalmanfilter method)": [[60, "gncpy.filters.extended_kalman_filter.ExtendedKalmanFilter.correct"]], "filt_state (extendedkalmanfilter attribute)": [[60, "gncpy.filters.extended_kalman_filter.ExtendedKalmanFilter.filt_state"]], "integrator_params (extendedkalmanfilter attribute)": [[60, "gncpy.filters.extended_kalman_filter.ExtendedKalmanFilter.integrator_params"]], "integrator_type (extendedkalmanfilter attribute)": [[60, "gncpy.filters.extended_kalman_filter.ExtendedKalmanFilter.integrator_type"]], "load_filter_state() (extendedkalmanfilter method)": [[60, "gncpy.filters.extended_kalman_filter.ExtendedKalmanFilter.load_filter_state"]], "predict() (extendedkalmanfilter method)": [[60, "gncpy.filters.extended_kalman_filter.ExtendedKalmanFilter.predict"]], "save_filter_state() (extendedkalmanfilter method)": [[60, "gncpy.filters.extended_kalman_filter.ExtendedKalmanFilter.save_filter_state"]], "set_measurement_model() (extendedkalmanfilter method)": [[60, "gncpy.filters.extended_kalman_filter.ExtendedKalmanFilter.set_measurement_model"]], "set_measurement_noise_estimator() (extendedkalmanfilter method)": [[60, "gncpy.filters.extended_kalman_filter.ExtendedKalmanFilter.set_measurement_noise_estimator"]], "set_state_model() (extendedkalmanfilter method)": [[60, "gncpy.filters.extended_kalman_filter.ExtendedKalmanFilter.set_state_model"]], "gcifilter (class in gncpy.filters.gci_filter)": [[61, "gncpy.filters.gci_filter.GCIFilter"]], "__init__() (gcifilter method)": [[61, "gncpy.filters.gci_filter.GCIFilter.__init__"]], "correct() (gcifilter method)": [[61, "gncpy.filters.gci_filter.GCIFilter.correct"]], "load_filter_state() (gcifilter method)": [[61, "gncpy.filters.gci_filter.GCIFilter.load_filter_state"]], "predict() (gcifilter method)": [[61, "gncpy.filters.gci_filter.GCIFilter.predict"]], "save_filter_state() (gcifilter method)": [[61, "gncpy.filters.gci_filter.GCIFilter.save_filter_state"]], "set_measurement_model() (gcifilter method)": [[61, "gncpy.filters.gci_filter.GCIFilter.set_measurement_model"]], "set_state_model() (gcifilter method)": [[61, "gncpy.filters.gci_filter.GCIFilter.set_state_model"]], "gncpy.filters.bayes_filter": [[62, "module-gncpy.filters.bayes_filter"]], "gncpy.filters.bootstrap_filter": [[63, "module-gncpy.filters.bootstrap_filter"]], "gncpy.filters.ekf_gaussian_scale_mixture_filter": [[64, "module-gncpy.filters.ekf_gaussian_scale_mixture_filter"]], "gncpy.filters.extended_kalman_filter": [[65, "module-gncpy.filters.extended_kalman_filter"]], "gncpy.filters.gci_filter": [[66, "module-gncpy.filters.gci_filter"]], "gncpy.filters.gsm_filter_base": [[67, "module-gncpy.filters.gsm_filter_base"]], "gncpy.filters.imm_gci_filter": [[68, "module-gncpy.filters.imm_gci_filter"]], "gncpy.filters.interacting_multiple_model": [[69, "module-gncpy.filters.interacting_multiple_model"]], "gncpy.filters.kalman_filter": [[70, "module-gncpy.filters.kalman_filter"]], "gncpy.filters.kf_gaussian_scale_mixture_filter": [[71, "module-gncpy.filters.kf_gaussian_scale_mixture_filter"]], "gncpy.filters.max_corr_ent_ukf": [[72, "module-gncpy.filters.max_corr_ent_ukf"]], "gncpy.filters.max_corr_ent_upf": [[73, "module-gncpy.filters.max_corr_ent_upf"]], "gncpy.filters.mcmc_particle_filter_base": [[74, "module-gncpy.filters.mcmc_particle_filter_base"]], "gncpy.filters.particle_filter": [[75, "module-gncpy.filters.particle_filter"]], "gncpy.filters.qkf_gaussian_scale_mixture_filter": [[76, "module-gncpy.filters.qkf_gaussian_scale_mixture_filter"]], "gncpy.filters.quadrature_kalman_filter": [[77, "module-gncpy.filters.quadrature_kalman_filter"]], "gncpy.filters.sqkf_gaussian_scale_mixture_filter": [[78, "module-gncpy.filters.sqkf_gaussian_scale_mixture_filter"]], "gncpy.filters.square_root_qkf": [[79, "module-gncpy.filters.square_root_qkf"]], "gncpy.filters.students_t_filter": [[80, "module-gncpy.filters.students_t_filter"]], "gncpy.filters.ukf_gaussian_scale_mixture_filter": [[81, "module-gncpy.filters.ukf_gaussian_scale_mixture_filter"]], "gncpy.filters.unscented_kalman_filter": [[82, "module-gncpy.filters.unscented_kalman_filter"]], "gncpy.filters.unscented_particle_filter": [[83, "module-gncpy.filters.unscented_particle_filter"]], "gsmfilterbase (class in gncpy.filters.gsm_filter_base)": [[84, "gncpy.filters.gsm_filter_base.GSMFilterBase"]], "__init__() (gsmfilterbase method)": [[84, "gncpy.filters.gsm_filter_base.GSMFilterBase.__init__"]], "correct() (gsmfilterbase method)": [[84, "gncpy.filters.gsm_filter_base.GSMFilterBase.correct"]], "cov (gsmfilterbase property)": [[84, "gncpy.filters.gsm_filter_base.GSMFilterBase.cov"]], "enable_proc_noise_estimation (gsmfilterbase attribute)": [[84, "gncpy.filters.gsm_filter_base.GSMFilterBase.enable_proc_noise_estimation"]], "filt_state (gsmfilterbase attribute)": [[84, "gncpy.filters.gsm_filter_base.GSMFilterBase.filt_state"]], "load_filter_state() (gsmfilterbase method)": [[84, "gncpy.filters.gsm_filter_base.GSMFilterBase.load_filter_state"]], "meas_noise (gsmfilterbase property)": [[84, "gncpy.filters.gsm_filter_base.GSMFilterBase.meas_noise"]], "plot_particles() (gsmfilterbase method)": [[84, "gncpy.filters.gsm_filter_base.GSMFilterBase.plot_particles"]], "predict() (gsmfilterbase method)": [[84, "gncpy.filters.gsm_filter_base.GSMFilterBase.predict"]], "proc_noise (gsmfilterbase property)": [[84, "gncpy.filters.gsm_filter_base.GSMFilterBase.proc_noise"]], "save_filter_state() (gsmfilterbase method)": [[84, "gncpy.filters.gsm_filter_base.GSMFilterBase.save_filter_state"]], "set_meas_noise_model() (gsmfilterbase method)": [[84, "gncpy.filters.gsm_filter_base.GSMFilterBase.set_meas_noise_model"]], "set_measurement_model() (gsmfilterbase method)": [[84, "gncpy.filters.gsm_filter_base.GSMFilterBase.set_measurement_model"]], "set_process_noise_model() (gsmfilterbase method)": [[84, "gncpy.filters.gsm_filter_base.GSMFilterBase.set_process_noise_model"]], "set_state_model() (gsmfilterbase method)": [[84, "gncpy.filters.gsm_filter_base.GSMFilterBase.set_state_model"]], "immgcifilter (class in gncpy.filters.imm_gci_filter)": [[85, "gncpy.filters.imm_gci_filter.IMMGCIFilter"]], "__init__() (immgcifilter method)": [[85, "gncpy.filters.imm_gci_filter.IMMGCIFilter.__init__"]], "correct() (immgcifilter method)": [[85, "gncpy.filters.imm_gci_filter.IMMGCIFilter.correct"]], "cov (immgcifilter property)": [[85, "gncpy.filters.imm_gci_filter.IMMGCIFilter.cov"]], "filt_state (immgcifilter attribute)": [[85, "gncpy.filters.imm_gci_filter.IMMGCIFilter.filt_state"]], "load_filter_state() (immgcifilter method)": [[85, "gncpy.filters.imm_gci_filter.IMMGCIFilter.load_filter_state"]], "predict() (immgcifilter method)": [[85, "gncpy.filters.imm_gci_filter.IMMGCIFilter.predict"]], "save_filter_state() (immgcifilter method)": [[85, "gncpy.filters.imm_gci_filter.IMMGCIFilter.save_filter_state"]], "set_measurement_model() (immgcifilter method)": [[85, "gncpy.filters.imm_gci_filter.IMMGCIFilter.set_measurement_model"]], "set_models() (immgcifilter method)": [[85, "gncpy.filters.imm_gci_filter.IMMGCIFilter.set_models"]], "set_state_model() (immgcifilter method)": [[85, "gncpy.filters.imm_gci_filter.IMMGCIFilter.set_state_model"]], "interactingmultiplemodel (class in gncpy.filters.interacting_multiple_model)": [[86, "gncpy.filters.interacting_multiple_model.InteractingMultipleModel"]], "__init__() (interactingmultiplemodel method)": [[86, "gncpy.filters.interacting_multiple_model.InteractingMultipleModel.__init__"]], "correct() (interactingmultiplemodel method)": [[86, "gncpy.filters.interacting_multiple_model.InteractingMultipleModel.correct"]], "cov (interactingmultiplemodel property)": [[86, "gncpy.filters.interacting_multiple_model.InteractingMultipleModel.cov"]], "filt_state (interactingmultiplemodel attribute)": [[86, "gncpy.filters.interacting_multiple_model.InteractingMultipleModel.filt_state"]], "load_filter_state() (interactingmultiplemodel method)": [[86, "gncpy.filters.interacting_multiple_model.InteractingMultipleModel.load_filter_state"]], "predict() (interactingmultiplemodel method)": [[86, "gncpy.filters.interacting_multiple_model.InteractingMultipleModel.predict"]], "save_filter_state() (interactingmultiplemodel method)": [[86, "gncpy.filters.interacting_multiple_model.InteractingMultipleModel.save_filter_state"]], "set_models() (interactingmultiplemodel method)": [[86, "gncpy.filters.interacting_multiple_model.InteractingMultipleModel.set_models"]], "kalmanfilter (class in gncpy.filters.kalman_filter)": [[87, "gncpy.filters.kalman_filter.KalmanFilter"]], "__init__() (kalmanfilter method)": [[87, "gncpy.filters.kalman_filter.KalmanFilter.__init__"]], "correct() (kalmanfilter method)": [[87, "gncpy.filters.kalman_filter.KalmanFilter.correct"]], "cov (kalmanfilter attribute)": [[87, "gncpy.filters.kalman_filter.KalmanFilter.cov"]], "dt (kalmanfilter attribute)": [[87, "gncpy.filters.kalman_filter.KalmanFilter.dt"]], "filt_state (kalmanfilter attribute)": [[87, "gncpy.filters.kalman_filter.KalmanFilter.filt_state"]], "load_filter_state() (kalmanfilter method)": [[87, "gncpy.filters.kalman_filter.KalmanFilter.load_filter_state"]], "meas_noise (kalmanfilter attribute)": [[87, "gncpy.filters.kalman_filter.KalmanFilter.meas_noise"]], "predict() (kalmanfilter method)": [[87, "gncpy.filters.kalman_filter.KalmanFilter.predict"]], "proc_noise (kalmanfilter attribute)": [[87, "gncpy.filters.kalman_filter.KalmanFilter.proc_noise"]], "save_filter_state() (kalmanfilter method)": [[87, "gncpy.filters.kalman_filter.KalmanFilter.save_filter_state"]], "set_measurement_model() (kalmanfilter method)": [[87, "gncpy.filters.kalman_filter.KalmanFilter.set_measurement_model"]], "set_measurement_noise_estimator() (kalmanfilter method)": [[87, "gncpy.filters.kalman_filter.KalmanFilter.set_measurement_noise_estimator"]], "set_state_model() (kalmanfilter method)": [[87, "gncpy.filters.kalman_filter.KalmanFilter.set_state_model"]], "kfgaussianscalemixturefilter (class in gncpy.filters.kf_gaussian_scale_mixture_filter)": [[88, "gncpy.filters.kf_gaussian_scale_mixture_filter.KFGaussianScaleMixtureFilter"]], "__init__() (kfgaussianscalemixturefilter method)": [[88, "gncpy.filters.kf_gaussian_scale_mixture_filter.KFGaussianScaleMixtureFilter.__init__"]], "correct() (kfgaussianscalemixturefilter method)": [[88, "gncpy.filters.kf_gaussian_scale_mixture_filter.KFGaussianScaleMixtureFilter.correct"]], "cov (kfgaussianscalemixturefilter property)": [[88, "gncpy.filters.kf_gaussian_scale_mixture_filter.KFGaussianScaleMixtureFilter.cov"]], "dt (kfgaussianscalemixturefilter property)": [[88, "gncpy.filters.kf_gaussian_scale_mixture_filter.KFGaussianScaleMixtureFilter.dt"]], "filt_state (kfgaussianscalemixturefilter attribute)": [[88, "gncpy.filters.kf_gaussian_scale_mixture_filter.KFGaussianScaleMixtureFilter.filt_state"]], "load_filter_state() (kfgaussianscalemixturefilter method)": [[88, "gncpy.filters.kf_gaussian_scale_mixture_filter.KFGaussianScaleMixtureFilter.load_filter_state"]], "meas_noise (kfgaussianscalemixturefilter property)": [[88, "gncpy.filters.kf_gaussian_scale_mixture_filter.KFGaussianScaleMixtureFilter.meas_noise"]], "plot_particles() (kfgaussianscalemixturefilter method)": [[88, "gncpy.filters.kf_gaussian_scale_mixture_filter.KFGaussianScaleMixtureFilter.plot_particles"]], "predict() (kfgaussianscalemixturefilter method)": [[88, "gncpy.filters.kf_gaussian_scale_mixture_filter.KFGaussianScaleMixtureFilter.predict"]], "proc_noise (kfgaussianscalemixturefilter property)": [[88, "gncpy.filters.kf_gaussian_scale_mixture_filter.KFGaussianScaleMixtureFilter.proc_noise"]], "save_filter_state() (kfgaussianscalemixturefilter method)": [[88, "gncpy.filters.kf_gaussian_scale_mixture_filter.KFGaussianScaleMixtureFilter.save_filter_state"]], "set_meas_noise_model() (kfgaussianscalemixturefilter method)": [[88, "gncpy.filters.kf_gaussian_scale_mixture_filter.KFGaussianScaleMixtureFilter.set_meas_noise_model"]], "set_measurement_model() (kfgaussianscalemixturefilter method)": [[88, "gncpy.filters.kf_gaussian_scale_mixture_filter.KFGaussianScaleMixtureFilter.set_measurement_model"]], "set_process_noise_model() (kfgaussianscalemixturefilter method)": [[88, "gncpy.filters.kf_gaussian_scale_mixture_filter.KFGaussianScaleMixtureFilter.set_process_noise_model"]], "set_state_model() (kfgaussianscalemixturefilter method)": [[88, "gncpy.filters.kf_gaussian_scale_mixture_filter.KFGaussianScaleMixtureFilter.set_state_model"]], "maxcorrentukf (class in gncpy.filters.max_corr_ent_ukf)": [[89, "gncpy.filters.max_corr_ent_ukf.MaxCorrEntUKF"]], "__init__() (maxcorrentukf method)": [[89, "gncpy.filters.max_corr_ent_ukf.MaxCorrEntUKF.__init__"]], "correct() (maxcorrentukf method)": [[89, "gncpy.filters.max_corr_ent_ukf.MaxCorrEntUKF.correct"]], "filt_state (maxcorrentukf attribute)": [[89, "gncpy.filters.max_corr_ent_ukf.MaxCorrEntUKF.filt_state"]], "init_sigma_points() (maxcorrentukf method)": [[89, "gncpy.filters.max_corr_ent_ukf.MaxCorrEntUKF.init_sigma_points"]], "kernel_bandwidth (maxcorrentukf attribute)": [[89, "gncpy.filters.max_corr_ent_ukf.MaxCorrEntUKF.kernel_bandwidth"]], "load_filter_state() (maxcorrentukf method)": [[89, "gncpy.filters.max_corr_ent_ukf.MaxCorrEntUKF.load_filter_state"]], "predict() (maxcorrentukf method)": [[89, "gncpy.filters.max_corr_ent_ukf.MaxCorrEntUKF.predict"]], "save_filter_state() (maxcorrentukf method)": [[89, "gncpy.filters.max_corr_ent_ukf.MaxCorrEntUKF.save_filter_state"]], "set_measurement_model() (maxcorrentukf method)": [[89, "gncpy.filters.max_corr_ent_ukf.MaxCorrEntUKF.set_measurement_model"]], "set_measurement_noise_estimator() (maxcorrentukf method)": [[89, "gncpy.filters.max_corr_ent_ukf.MaxCorrEntUKF.set_measurement_noise_estimator"]], "set_state_model() (maxcorrentukf method)": [[89, "gncpy.filters.max_corr_ent_ukf.MaxCorrEntUKF.set_state_model"]], "maxcorrentupf (class in gncpy.filters.max_corr_ent_upf)": [[90, "gncpy.filters.max_corr_ent_upf.MaxCorrEntUPF"]], "__init__() (maxcorrentupf method)": [[90, "gncpy.filters.max_corr_ent_upf.MaxCorrEntUPF.__init__"]], "correct() (maxcorrentupf method)": [[90, "gncpy.filters.max_corr_ent_upf.MaxCorrEntUPF.correct"]], "cov (maxcorrentupf property)": [[90, "gncpy.filters.max_corr_ent_upf.MaxCorrEntUPF.cov"]], "extract_dist() (maxcorrentupf method)": [[90, "gncpy.filters.max_corr_ent_upf.MaxCorrEntUPF.extract_dist"]], "filt_state (maxcorrentupf attribute)": [[90, "gncpy.filters.max_corr_ent_upf.MaxCorrEntUPF.filt_state"]], "init_from_dist() (maxcorrentupf method)": [[90, "gncpy.filters.max_corr_ent_upf.MaxCorrEntUPF.init_from_dist"]], "init_particles() (maxcorrentupf method)": [[90, "gncpy.filters.max_corr_ent_upf.MaxCorrEntUPF.init_particles"]], "kernel_bandwidth (maxcorrentupf property)": [[90, "gncpy.filters.max_corr_ent_upf.MaxCorrEntUPF.kernel_bandwidth"]], "load_filter_state() (maxcorrentupf method)": [[90, "gncpy.filters.max_corr_ent_upf.MaxCorrEntUPF.load_filter_state"]], "meas_likelihood_fnc (maxcorrentupf property)": [[90, "gncpy.filters.max_corr_ent_upf.MaxCorrEntUPF.meas_likelihood_fnc"]], "meas_noise (maxcorrentupf property)": [[90, "gncpy.filters.max_corr_ent_upf.MaxCorrEntUPF.meas_noise"]], "move_particles() (maxcorrentupf method)": [[90, "gncpy.filters.max_corr_ent_upf.MaxCorrEntUPF.move_particles"]], "num_particles (maxcorrentupf property)": [[90, "gncpy.filters.max_corr_ent_upf.MaxCorrEntUPF.num_particles"]], "plot_particles() (maxcorrentupf method)": [[90, "gncpy.filters.max_corr_ent_upf.MaxCorrEntUPF.plot_particles"]], "plot_weighted_particles() (maxcorrentupf method)": [[90, "gncpy.filters.max_corr_ent_upf.MaxCorrEntUPF.plot_weighted_particles"]], "predict() (maxcorrentupf method)": [[90, "gncpy.filters.max_corr_ent_upf.MaxCorrEntUPF.predict"]], "proc_noise (maxcorrentupf property)": [[90, "gncpy.filters.max_corr_ent_upf.MaxCorrEntUPF.proc_noise"]], "proposal_fnc (maxcorrentupf property)": [[90, "gncpy.filters.max_corr_ent_upf.MaxCorrEntUPF.proposal_fnc"]], "proposal_sampling_fnc (maxcorrentupf property)": [[90, "gncpy.filters.max_corr_ent_upf.MaxCorrEntUPF.proposal_sampling_fnc"]], "save_filter_state() (maxcorrentupf method)": [[90, "gncpy.filters.max_corr_ent_upf.MaxCorrEntUPF.save_filter_state"]], "set_measurement_model() (maxcorrentupf method)": [[90, "gncpy.filters.max_corr_ent_upf.MaxCorrEntUPF.set_measurement_model"]], "set_state_model() (maxcorrentupf method)": [[90, "gncpy.filters.max_corr_ent_upf.MaxCorrEntUPF.set_state_model"]], "transition_prob_fnc (maxcorrentupf property)": [[90, "gncpy.filters.max_corr_ent_upf.MaxCorrEntUPF.transition_prob_fnc"]], "mcmcparticlefilterbase (class in gncpy.filters.mcmc_particle_filter_base)": [[91, "gncpy.filters.mcmc_particle_filter_base.MCMCParticleFilterBase"]], "__init__() (mcmcparticlefilterbase method)": [[91, "gncpy.filters.mcmc_particle_filter_base.MCMCParticleFilterBase.__init__"]], "correct() (mcmcparticlefilterbase method)": [[91, "gncpy.filters.mcmc_particle_filter_base.MCMCParticleFilterBase.correct"]], "cov (mcmcparticlefilterbase property)": [[91, "gncpy.filters.mcmc_particle_filter_base.MCMCParticleFilterBase.cov"]], "extract_dist() (mcmcparticlefilterbase method)": [[91, "gncpy.filters.mcmc_particle_filter_base.MCMCParticleFilterBase.extract_dist"]], "filt_state (mcmcparticlefilterbase attribute)": [[91, "gncpy.filters.mcmc_particle_filter_base.MCMCParticleFilterBase.filt_state"]], "init_from_dist() (mcmcparticlefilterbase method)": [[91, "gncpy.filters.mcmc_particle_filter_base.MCMCParticleFilterBase.init_from_dist"]], "init_particles() (mcmcparticlefilterbase method)": [[91, "gncpy.filters.mcmc_particle_filter_base.MCMCParticleFilterBase.init_particles"]], "load_filter_state() (mcmcparticlefilterbase method)": [[91, "gncpy.filters.mcmc_particle_filter_base.MCMCParticleFilterBase.load_filter_state"]], "meas_likelihood_fnc (mcmcparticlefilterbase property)": [[91, "gncpy.filters.mcmc_particle_filter_base.MCMCParticleFilterBase.meas_likelihood_fnc"]], "move_particles() (mcmcparticlefilterbase method)": [[91, "gncpy.filters.mcmc_particle_filter_base.MCMCParticleFilterBase.move_particles"]], "num_particles (mcmcparticlefilterbase property)": [[91, "gncpy.filters.mcmc_particle_filter_base.MCMCParticleFilterBase.num_particles"]], "plot_particles() (mcmcparticlefilterbase method)": [[91, "gncpy.filters.mcmc_particle_filter_base.MCMCParticleFilterBase.plot_particles"]], "plot_weighted_particles() (mcmcparticlefilterbase method)": [[91, "gncpy.filters.mcmc_particle_filter_base.MCMCParticleFilterBase.plot_weighted_particles"]], "predict() (mcmcparticlefilterbase method)": [[91, "gncpy.filters.mcmc_particle_filter_base.MCMCParticleFilterBase.predict"]], "proposal_fnc (mcmcparticlefilterbase property)": [[91, "gncpy.filters.mcmc_particle_filter_base.MCMCParticleFilterBase.proposal_fnc"]], "proposal_sampling_fnc (mcmcparticlefilterbase property)": [[91, "gncpy.filters.mcmc_particle_filter_base.MCMCParticleFilterBase.proposal_sampling_fnc"]], "save_filter_state() (mcmcparticlefilterbase method)": [[91, "gncpy.filters.mcmc_particle_filter_base.MCMCParticleFilterBase.save_filter_state"]], "set_measurement_model() (mcmcparticlefilterbase method)": [[91, "gncpy.filters.mcmc_particle_filter_base.MCMCParticleFilterBase.set_measurement_model"]], "set_state_model() (mcmcparticlefilterbase method)": [[91, "gncpy.filters.mcmc_particle_filter_base.MCMCParticleFilterBase.set_state_model"]], "transition_prob_fnc (mcmcparticlefilterbase property)": [[91, "gncpy.filters.mcmc_particle_filter_base.MCMCParticleFilterBase.transition_prob_fnc"]], "use_mcmc (mcmcparticlefilterbase attribute)": [[91, "gncpy.filters.mcmc_particle_filter_base.MCMCParticleFilterBase.use_MCMC"]], "particlefilter (class in gncpy.filters.particle_filter)": [[92, "gncpy.filters.particle_filter.ParticleFilter"]], "__init__() (particlefilter method)": [[92, "gncpy.filters.particle_filter.ParticleFilter.__init__"]], "correct() (particlefilter method)": [[92, "gncpy.filters.particle_filter.ParticleFilter.correct"]], "cov (particlefilter property)": [[92, "gncpy.filters.particle_filter.ParticleFilter.cov"]], "extract_dist() (particlefilter method)": [[92, "gncpy.filters.particle_filter.ParticleFilter.extract_dist"]], "filt_state (particlefilter attribute)": [[92, "gncpy.filters.particle_filter.ParticleFilter.filt_state"]], "init_from_dist() (particlefilter method)": [[92, "gncpy.filters.particle_filter.ParticleFilter.init_from_dist"]], "init_particles() (particlefilter method)": [[92, "gncpy.filters.particle_filter.ParticleFilter.init_particles"]], "load_filter_state() (particlefilter method)": [[92, "gncpy.filters.particle_filter.ParticleFilter.load_filter_state"]], "meas_likelihood_fnc (particlefilter property)": [[92, "gncpy.filters.particle_filter.ParticleFilter.meas_likelihood_fnc"]], "num_particles (particlefilter property)": [[92, "gncpy.filters.particle_filter.ParticleFilter.num_particles"]], "plot_particles() (particlefilter method)": [[92, "gncpy.filters.particle_filter.ParticleFilter.plot_particles"]], "plot_weighted_particles() (particlefilter method)": [[92, "gncpy.filters.particle_filter.ParticleFilter.plot_weighted_particles"]], "predict() (particlefilter method)": [[92, "gncpy.filters.particle_filter.ParticleFilter.predict"]], "proposal_fnc (particlefilter property)": [[92, "gncpy.filters.particle_filter.ParticleFilter.proposal_fnc"]], "proposal_sampling_fnc (particlefilter property)": [[92, "gncpy.filters.particle_filter.ParticleFilter.proposal_sampling_fnc"]], "require_copy_can_dist (particlefilter attribute)": [[92, "gncpy.filters.particle_filter.ParticleFilter.require_copy_can_dist"]], "require_copy_prop_parts (particlefilter attribute)": [[92, "gncpy.filters.particle_filter.ParticleFilter.require_copy_prop_parts"]], "save_filter_state() (particlefilter method)": [[92, "gncpy.filters.particle_filter.ParticleFilter.save_filter_state"]], "set_measurement_model() (particlefilter method)": [[92, "gncpy.filters.particle_filter.ParticleFilter.set_measurement_model"]], "set_state_model() (particlefilter method)": [[92, "gncpy.filters.particle_filter.ParticleFilter.set_state_model"]], "transition_prob_fnc (particlefilter property)": [[92, "gncpy.filters.particle_filter.ParticleFilter.transition_prob_fnc"]], "qkfgaussianscalemixturefilter (class in gncpy.filters.qkf_gaussian_scale_mixture_filter)": [[93, "gncpy.filters.qkf_gaussian_scale_mixture_filter.QKFGaussianScaleMixtureFilter"]], "__init__() (qkfgaussianscalemixturefilter method)": [[93, "gncpy.filters.qkf_gaussian_scale_mixture_filter.QKFGaussianScaleMixtureFilter.__init__"]], "correct() (qkfgaussianscalemixturefilter method)": [[93, "gncpy.filters.qkf_gaussian_scale_mixture_filter.QKFGaussianScaleMixtureFilter.correct"]], "cov (qkfgaussianscalemixturefilter property)": [[93, "gncpy.filters.qkf_gaussian_scale_mixture_filter.QKFGaussianScaleMixtureFilter.cov"]], "filt_state (qkfgaussianscalemixturefilter attribute)": [[93, "gncpy.filters.qkf_gaussian_scale_mixture_filter.QKFGaussianScaleMixtureFilter.filt_state"]], "load_filter_state() (qkfgaussianscalemixturefilter method)": [[93, "gncpy.filters.qkf_gaussian_scale_mixture_filter.QKFGaussianScaleMixtureFilter.load_filter_state"]], "meas_noise (qkfgaussianscalemixturefilter property)": [[93, "gncpy.filters.qkf_gaussian_scale_mixture_filter.QKFGaussianScaleMixtureFilter.meas_noise"]], "plot_particles() (qkfgaussianscalemixturefilter method)": [[93, "gncpy.filters.qkf_gaussian_scale_mixture_filter.QKFGaussianScaleMixtureFilter.plot_particles"]], "points_per_axis (qkfgaussianscalemixturefilter property)": [[93, "gncpy.filters.qkf_gaussian_scale_mixture_filter.QKFGaussianScaleMixtureFilter.points_per_axis"]], "predict() (qkfgaussianscalemixturefilter method)": [[93, "gncpy.filters.qkf_gaussian_scale_mixture_filter.QKFGaussianScaleMixtureFilter.predict"]], "proc_noise (qkfgaussianscalemixturefilter property)": [[93, "gncpy.filters.qkf_gaussian_scale_mixture_filter.QKFGaussianScaleMixtureFilter.proc_noise"]], "save_filter_state() (qkfgaussianscalemixturefilter method)": [[93, "gncpy.filters.qkf_gaussian_scale_mixture_filter.QKFGaussianScaleMixtureFilter.save_filter_state"]], "set_meas_noise_model() (qkfgaussianscalemixturefilter method)": [[93, "gncpy.filters.qkf_gaussian_scale_mixture_filter.QKFGaussianScaleMixtureFilter.set_meas_noise_model"]], "set_measurement_model() (qkfgaussianscalemixturefilter method)": [[93, "gncpy.filters.qkf_gaussian_scale_mixture_filter.QKFGaussianScaleMixtureFilter.set_measurement_model"]], "set_process_noise_model() (qkfgaussianscalemixturefilter method)": [[93, "gncpy.filters.qkf_gaussian_scale_mixture_filter.QKFGaussianScaleMixtureFilter.set_process_noise_model"]], "set_state_model() (qkfgaussianscalemixturefilter method)": [[93, "gncpy.filters.qkf_gaussian_scale_mixture_filter.QKFGaussianScaleMixtureFilter.set_state_model"]], "quadraturekalmanfilter (class in gncpy.filters.quadrature_kalman_filter)": [[94, "gncpy.filters.quadrature_kalman_filter.QuadratureKalmanFilter"]], "__init__() (quadraturekalmanfilter method)": [[94, "gncpy.filters.quadrature_kalman_filter.QuadratureKalmanFilter.__init__"]], "correct() (quadraturekalmanfilter method)": [[94, "gncpy.filters.quadrature_kalman_filter.QuadratureKalmanFilter.correct"]], "filt_state (quadraturekalmanfilter attribute)": [[94, "gncpy.filters.quadrature_kalman_filter.QuadratureKalmanFilter.filt_state"]], "load_filter_state() (quadraturekalmanfilter method)": [[94, "gncpy.filters.quadrature_kalman_filter.QuadratureKalmanFilter.load_filter_state"]], "plot_quadrature() (quadraturekalmanfilter method)": [[94, "gncpy.filters.quadrature_kalman_filter.QuadratureKalmanFilter.plot_quadrature"]], "points_per_axis (quadraturekalmanfilter property)": [[94, "gncpy.filters.quadrature_kalman_filter.QuadratureKalmanFilter.points_per_axis"]], "predict() (quadraturekalmanfilter method)": [[94, "gncpy.filters.quadrature_kalman_filter.QuadratureKalmanFilter.predict"]], "quadpoints (quadraturekalmanfilter attribute)": [[94, "gncpy.filters.quadrature_kalman_filter.QuadratureKalmanFilter.quadPoints"]], "save_filter_state() (quadraturekalmanfilter method)": [[94, "gncpy.filters.quadrature_kalman_filter.QuadratureKalmanFilter.save_filter_state"]], "set_measurement_model() (quadraturekalmanfilter method)": [[94, "gncpy.filters.quadrature_kalman_filter.QuadratureKalmanFilter.set_measurement_model"]], "set_measurement_noise_estimator() (quadraturekalmanfilter method)": [[94, "gncpy.filters.quadrature_kalman_filter.QuadratureKalmanFilter.set_measurement_noise_estimator"]], "set_state_model() (quadraturekalmanfilter method)": [[94, "gncpy.filters.quadrature_kalman_filter.QuadratureKalmanFilter.set_state_model"]], "sqkfgaussianscalemixturefilter (class in gncpy.filters.sqkf_gaussian_scale_mixture_filter)": [[95, "gncpy.filters.sqkf_gaussian_scale_mixture_filter.SQKFGaussianScaleMixtureFilter"]], "__init__() (sqkfgaussianscalemixturefilter method)": [[95, "gncpy.filters.sqkf_gaussian_scale_mixture_filter.SQKFGaussianScaleMixtureFilter.__init__"]], "correct() (sqkfgaussianscalemixturefilter method)": [[95, "gncpy.filters.sqkf_gaussian_scale_mixture_filter.SQKFGaussianScaleMixtureFilter.correct"]], "cov (sqkfgaussianscalemixturefilter property)": [[95, "gncpy.filters.sqkf_gaussian_scale_mixture_filter.SQKFGaussianScaleMixtureFilter.cov"]], "filt_state (sqkfgaussianscalemixturefilter attribute)": [[95, "gncpy.filters.sqkf_gaussian_scale_mixture_filter.SQKFGaussianScaleMixtureFilter.filt_state"]], "load_filter_state() (sqkfgaussianscalemixturefilter method)": [[95, "gncpy.filters.sqkf_gaussian_scale_mixture_filter.SQKFGaussianScaleMixtureFilter.load_filter_state"]], "meas_noise (sqkfgaussianscalemixturefilter property)": [[95, "gncpy.filters.sqkf_gaussian_scale_mixture_filter.SQKFGaussianScaleMixtureFilter.meas_noise"]], "plot_particles() (sqkfgaussianscalemixturefilter method)": [[95, "gncpy.filters.sqkf_gaussian_scale_mixture_filter.SQKFGaussianScaleMixtureFilter.plot_particles"]], "points_per_axis (sqkfgaussianscalemixturefilter property)": [[95, "gncpy.filters.sqkf_gaussian_scale_mixture_filter.SQKFGaussianScaleMixtureFilter.points_per_axis"]], "predict() (sqkfgaussianscalemixturefilter method)": [[95, "gncpy.filters.sqkf_gaussian_scale_mixture_filter.SQKFGaussianScaleMixtureFilter.predict"]], "proc_noise (sqkfgaussianscalemixturefilter property)": [[95, "gncpy.filters.sqkf_gaussian_scale_mixture_filter.SQKFGaussianScaleMixtureFilter.proc_noise"]], "save_filter_state() (sqkfgaussianscalemixturefilter method)": [[95, "gncpy.filters.sqkf_gaussian_scale_mixture_filter.SQKFGaussianScaleMixtureFilter.save_filter_state"]], "set_meas_noise_model() (sqkfgaussianscalemixturefilter method)": [[95, "gncpy.filters.sqkf_gaussian_scale_mixture_filter.SQKFGaussianScaleMixtureFilter.set_meas_noise_model"]], "set_measurement_model() (sqkfgaussianscalemixturefilter method)": [[95, "gncpy.filters.sqkf_gaussian_scale_mixture_filter.SQKFGaussianScaleMixtureFilter.set_measurement_model"]], "set_process_noise_model() (sqkfgaussianscalemixturefilter method)": [[95, "gncpy.filters.sqkf_gaussian_scale_mixture_filter.SQKFGaussianScaleMixtureFilter.set_process_noise_model"]], "set_state_model() (sqkfgaussianscalemixturefilter method)": [[95, "gncpy.filters.sqkf_gaussian_scale_mixture_filter.SQKFGaussianScaleMixtureFilter.set_state_model"]], "squarerootqkf (class in gncpy.filters.square_root_qkf)": [[96, "gncpy.filters.square_root_qkf.SquareRootQKF"]], "__init__() (squarerootqkf method)": [[96, "gncpy.filters.square_root_qkf.SquareRootQKF.__init__"]], "correct() (squarerootqkf method)": [[96, "gncpy.filters.square_root_qkf.SquareRootQKF.correct"]], "cov (squarerootqkf property)": [[96, "gncpy.filters.square_root_qkf.SquareRootQKF.cov"]], "filt_state (squarerootqkf attribute)": [[96, "gncpy.filters.square_root_qkf.SquareRootQKF.filt_state"]], "load_filter_state() (squarerootqkf method)": [[96, "gncpy.filters.square_root_qkf.SquareRootQKF.load_filter_state"]], "meas_noise (squarerootqkf property)": [[96, "gncpy.filters.square_root_qkf.SquareRootQKF.meas_noise"]], "plot_quadrature() (squarerootqkf method)": [[96, "gncpy.filters.square_root_qkf.SquareRootQKF.plot_quadrature"]], "points_per_axis (squarerootqkf property)": [[96, "gncpy.filters.square_root_qkf.SquareRootQKF.points_per_axis"]], "predict() (squarerootqkf method)": [[96, "gncpy.filters.square_root_qkf.SquareRootQKF.predict"]], "proc_noise (squarerootqkf property)": [[96, "gncpy.filters.square_root_qkf.SquareRootQKF.proc_noise"]], "save_filter_state() (squarerootqkf method)": [[96, "gncpy.filters.square_root_qkf.SquareRootQKF.save_filter_state"]], "set_measurement_model() (squarerootqkf method)": [[96, "gncpy.filters.square_root_qkf.SquareRootQKF.set_measurement_model"]], "set_measurement_noise_estimator() (squarerootqkf method)": [[96, "gncpy.filters.square_root_qkf.SquareRootQKF.set_measurement_noise_estimator"]], "set_state_model() (squarerootqkf method)": [[96, "gncpy.filters.square_root_qkf.SquareRootQKF.set_state_model"]], "studentstfilter (class in gncpy.filters.students_t_filter)": [[97, "gncpy.filters.students_t_filter.StudentsTFilter"]], "__init__() (studentstfilter method)": [[97, "gncpy.filters.students_t_filter.StudentsTFilter.__init__"]], "correct() (studentstfilter method)": [[97, "gncpy.filters.students_t_filter.StudentsTFilter.correct"]], "cov (studentstfilter property)": [[97, "gncpy.filters.students_t_filter.StudentsTFilter.cov"]], "dof (studentstfilter attribute)": [[97, "gncpy.filters.students_t_filter.StudentsTFilter.dof"]], "filt_state (studentstfilter attribute)": [[97, "gncpy.filters.students_t_filter.StudentsTFilter.filt_state"]], "load_filter_state() (studentstfilter method)": [[97, "gncpy.filters.students_t_filter.StudentsTFilter.load_filter_state"]], "meas_noise_dof (studentstfilter attribute)": [[97, "gncpy.filters.students_t_filter.StudentsTFilter.meas_noise_dof"]], "predict() (studentstfilter method)": [[97, "gncpy.filters.students_t_filter.StudentsTFilter.predict"]], "proc_noise_dof (studentstfilter attribute)": [[97, "gncpy.filters.students_t_filter.StudentsTFilter.proc_noise_dof"]], "save_filter_state() (studentstfilter method)": [[97, "gncpy.filters.students_t_filter.StudentsTFilter.save_filter_state"]], "scale (studentstfilter attribute)": [[97, "gncpy.filters.students_t_filter.StudentsTFilter.scale"]], "set_measurement_model() (studentstfilter method)": [[97, "gncpy.filters.students_t_filter.StudentsTFilter.set_measurement_model"]], "set_measurement_noise_estimator() (studentstfilter method)": [[97, "gncpy.filters.students_t_filter.StudentsTFilter.set_measurement_noise_estimator"]], "set_state_model() (studentstfilter method)": [[97, "gncpy.filters.students_t_filter.StudentsTFilter.set_state_model"]], "use_moment_matching (studentstfilter attribute)": [[97, "gncpy.filters.students_t_filter.StudentsTFilter.use_moment_matching"]], "ukfgaussianscalemixturefilter (class in gncpy.filters.ukf_gaussian_scale_mixture_filter)": [[98, "gncpy.filters.ukf_gaussian_scale_mixture_filter.UKFGaussianScaleMixtureFilter"]], "__init__() (ukfgaussianscalemixturefilter method)": [[98, "gncpy.filters.ukf_gaussian_scale_mixture_filter.UKFGaussianScaleMixtureFilter.__init__"]], "alpha (ukfgaussianscalemixturefilter property)": [[98, "gncpy.filters.ukf_gaussian_scale_mixture_filter.UKFGaussianScaleMixtureFilter.alpha"]], "beta (ukfgaussianscalemixturefilter property)": [[98, "gncpy.filters.ukf_gaussian_scale_mixture_filter.UKFGaussianScaleMixtureFilter.beta"]], "correct() (ukfgaussianscalemixturefilter method)": [[98, "gncpy.filters.ukf_gaussian_scale_mixture_filter.UKFGaussianScaleMixtureFilter.correct"]], "cov (ukfgaussianscalemixturefilter property)": [[98, "gncpy.filters.ukf_gaussian_scale_mixture_filter.UKFGaussianScaleMixtureFilter.cov"]], "dt (ukfgaussianscalemixturefilter property)": [[98, "gncpy.filters.ukf_gaussian_scale_mixture_filter.UKFGaussianScaleMixtureFilter.dt"]], "filt_state (ukfgaussianscalemixturefilter attribute)": [[98, "gncpy.filters.ukf_gaussian_scale_mixture_filter.UKFGaussianScaleMixtureFilter.filt_state"]], "init_sigma_points() (ukfgaussianscalemixturefilter method)": [[98, "gncpy.filters.ukf_gaussian_scale_mixture_filter.UKFGaussianScaleMixtureFilter.init_sigma_points"]], "kappa (ukfgaussianscalemixturefilter property)": [[98, "gncpy.filters.ukf_gaussian_scale_mixture_filter.UKFGaussianScaleMixtureFilter.kappa"]], "load_filter_state() (ukfgaussianscalemixturefilter method)": [[98, "gncpy.filters.ukf_gaussian_scale_mixture_filter.UKFGaussianScaleMixtureFilter.load_filter_state"]], "meas_noise (ukfgaussianscalemixturefilter property)": [[98, "gncpy.filters.ukf_gaussian_scale_mixture_filter.UKFGaussianScaleMixtureFilter.meas_noise"]], "plot_particles() (ukfgaussianscalemixturefilter method)": [[98, "gncpy.filters.ukf_gaussian_scale_mixture_filter.UKFGaussianScaleMixtureFilter.plot_particles"]], "predict() (ukfgaussianscalemixturefilter method)": [[98, "gncpy.filters.ukf_gaussian_scale_mixture_filter.UKFGaussianScaleMixtureFilter.predict"]], "proc_noise (ukfgaussianscalemixturefilter property)": [[98, "gncpy.filters.ukf_gaussian_scale_mixture_filter.UKFGaussianScaleMixtureFilter.proc_noise"]], "save_filter_state() (ukfgaussianscalemixturefilter method)": [[98, "gncpy.filters.ukf_gaussian_scale_mixture_filter.UKFGaussianScaleMixtureFilter.save_filter_state"]], "set_meas_noise_model() (ukfgaussianscalemixturefilter method)": [[98, "gncpy.filters.ukf_gaussian_scale_mixture_filter.UKFGaussianScaleMixtureFilter.set_meas_noise_model"]], "set_measurement_model() (ukfgaussianscalemixturefilter method)": [[98, "gncpy.filters.ukf_gaussian_scale_mixture_filter.UKFGaussianScaleMixtureFilter.set_measurement_model"]], "set_process_noise_model() (ukfgaussianscalemixturefilter method)": [[98, "gncpy.filters.ukf_gaussian_scale_mixture_filter.UKFGaussianScaleMixtureFilter.set_process_noise_model"]], "set_state_model() (ukfgaussianscalemixturefilter method)": [[98, "gncpy.filters.ukf_gaussian_scale_mixture_filter.UKFGaussianScaleMixtureFilter.set_state_model"]], "unscentedkalmanfilter (class in gncpy.filters.unscented_kalman_filter)": [[99, "gncpy.filters.unscented_kalman_filter.UnscentedKalmanFilter"]], "__init__() (unscentedkalmanfilter method)": [[99, "gncpy.filters.unscented_kalman_filter.UnscentedKalmanFilter.__init__"]], "alpha (unscentedkalmanfilter attribute)": [[99, "gncpy.filters.unscented_kalman_filter.UnscentedKalmanFilter.alpha"]], "beta (unscentedkalmanfilter attribute)": [[99, "gncpy.filters.unscented_kalman_filter.UnscentedKalmanFilter.beta"]], "correct() (unscentedkalmanfilter method)": [[99, "gncpy.filters.unscented_kalman_filter.UnscentedKalmanFilter.correct"]], "filt_state (unscentedkalmanfilter attribute)": [[99, "gncpy.filters.unscented_kalman_filter.UnscentedKalmanFilter.filt_state"]], "init_sigma_points() (unscentedkalmanfilter method)": [[99, "gncpy.filters.unscented_kalman_filter.UnscentedKalmanFilter.init_sigma_points"]], "kappa (unscentedkalmanfilter attribute)": [[99, "gncpy.filters.unscented_kalman_filter.UnscentedKalmanFilter.kappa"]], "load_filter_state() (unscentedkalmanfilter method)": [[99, "gncpy.filters.unscented_kalman_filter.UnscentedKalmanFilter.load_filter_state"]], "predict() (unscentedkalmanfilter method)": [[99, "gncpy.filters.unscented_kalman_filter.UnscentedKalmanFilter.predict"]], "save_filter_state() (unscentedkalmanfilter method)": [[99, "gncpy.filters.unscented_kalman_filter.UnscentedKalmanFilter.save_filter_state"]], "set_measurement_model() (unscentedkalmanfilter method)": [[99, "gncpy.filters.unscented_kalman_filter.UnscentedKalmanFilter.set_measurement_model"]], "set_measurement_noise_estimator() (unscentedkalmanfilter method)": [[99, "gncpy.filters.unscented_kalman_filter.UnscentedKalmanFilter.set_measurement_noise_estimator"]], "set_state_model() (unscentedkalmanfilter method)": [[99, "gncpy.filters.unscented_kalman_filter.UnscentedKalmanFilter.set_state_model"]], "unscentedparticlefilter (class in gncpy.filters.unscented_particle_filter)": [[100, "gncpy.filters.unscented_particle_filter.UnscentedParticleFilter"]], "__init__() (unscentedparticlefilter method)": [[100, "gncpy.filters.unscented_particle_filter.UnscentedParticleFilter.__init__"]], "correct() (unscentedparticlefilter method)": [[100, "gncpy.filters.unscented_particle_filter.UnscentedParticleFilter.correct"]], "cov (unscentedparticlefilter property)": [[100, "gncpy.filters.unscented_particle_filter.UnscentedParticleFilter.cov"]], "extract_dist() (unscentedparticlefilter method)": [[100, "gncpy.filters.unscented_particle_filter.UnscentedParticleFilter.extract_dist"]], "filt_state (unscentedparticlefilter attribute)": [[100, "gncpy.filters.unscented_particle_filter.UnscentedParticleFilter.filt_state"]], "init_from_dist() (unscentedparticlefilter method)": [[100, "gncpy.filters.unscented_particle_filter.UnscentedParticleFilter.init_from_dist"]], "init_particles() (unscentedparticlefilter method)": [[100, "gncpy.filters.unscented_particle_filter.UnscentedParticleFilter.init_particles"]], "load_filter_state() (unscentedparticlefilter method)": [[100, "gncpy.filters.unscented_particle_filter.UnscentedParticleFilter.load_filter_state"]], "meas_likelihood_fnc (unscentedparticlefilter property)": [[100, "gncpy.filters.unscented_particle_filter.UnscentedParticleFilter.meas_likelihood_fnc"]], "meas_noise (unscentedparticlefilter property)": [[100, "gncpy.filters.unscented_particle_filter.UnscentedParticleFilter.meas_noise"]], "move_particles() (unscentedparticlefilter method)": [[100, "gncpy.filters.unscented_particle_filter.UnscentedParticleFilter.move_particles"]], "num_particles (unscentedparticlefilter property)": [[100, "gncpy.filters.unscented_particle_filter.UnscentedParticleFilter.num_particles"]], "plot_particles() (unscentedparticlefilter method)": [[100, "gncpy.filters.unscented_particle_filter.UnscentedParticleFilter.plot_particles"]], "plot_weighted_particles() (unscentedparticlefilter method)": [[100, "gncpy.filters.unscented_particle_filter.UnscentedParticleFilter.plot_weighted_particles"]], "predict() (unscentedparticlefilter method)": [[100, "gncpy.filters.unscented_particle_filter.UnscentedParticleFilter.predict"]], "proc_noise (unscentedparticlefilter property)": [[100, "gncpy.filters.unscented_particle_filter.UnscentedParticleFilter.proc_noise"]], "proposal_fnc (unscentedparticlefilter property)": [[100, "gncpy.filters.unscented_particle_filter.UnscentedParticleFilter.proposal_fnc"]], "proposal_sampling_fnc (unscentedparticlefilter property)": [[100, "gncpy.filters.unscented_particle_filter.UnscentedParticleFilter.proposal_sampling_fnc"]], "save_filter_state() (unscentedparticlefilter method)": [[100, "gncpy.filters.unscented_particle_filter.UnscentedParticleFilter.save_filter_state"]], "set_measurement_model() (unscentedparticlefilter method)": [[100, "gncpy.filters.unscented_particle_filter.UnscentedParticleFilter.set_measurement_model"]], "set_state_model() (unscentedparticlefilter method)": [[100, "gncpy.filters.unscented_particle_filter.UnscentedParticleFilter.set_state_model"]], "transition_prob_fnc (unscentedparticlefilter property)": [[100, "gncpy.filters.unscented_particle_filter.UnscentedParticleFilter.transition_prob_fnc"]], "base2dparams (class in gncpy.game_engine.base_game)": [[101, "gncpy.game_engine.base_game.Base2dParams"]], "__init__() (base2dparams method)": [[101, "gncpy.game_engine.base_game.Base2dParams.__init__"]], "max_time (base2dparams attribute)": [[101, "gncpy.game_engine.base_game.Base2dParams.max_time"]], "physics (base2dparams attribute)": [[101, "gncpy.game_engine.base_game.Base2dParams.physics"]], "start_time (base2dparams attribute)": [[101, "gncpy.game_engine.base_game.Base2dParams.start_time"]], "basegame (class in gncpy.game_engine.base_game)": [[102, "gncpy.game_engine.base_game.BaseGame"]], "__init__() (basegame method)": [[102, "gncpy.game_engine.base_game.BaseGame.__init__"]], "config_file (basegame attribute)": [[102, "gncpy.game_engine.base_game.BaseGame.config_file"]], "current_frame (basegame attribute)": [[102, "gncpy.game_engine.base_game.BaseGame.current_frame"]], "entitymanager (basegame attribute)": [[102, "gncpy.game_engine.base_game.BaseGame.entityManager"]], "game_over (basegame attribute)": [[102, "gncpy.game_engine.base_game.BaseGame.game_over"]], "library_dir (basegame attribute)": [[102, "gncpy.game_engine.base_game.BaseGame.library_dir"]], "params (basegame attribute)": [[102, "gncpy.game_engine.base_game.BaseGame.params"]], "parse_config_file() (basegame method)": [[102, "gncpy.game_engine.base_game.BaseGame.parse_config_file"]], "register_params() (basegame method)": [[102, "gncpy.game_engine.base_game.BaseGame.register_params"]], "render_fps (basegame attribute)": [[102, "gncpy.game_engine.base_game.BaseGame.render_fps"]], "render_mode (basegame attribute)": [[102, "gncpy.game_engine.base_game.BaseGame.render_mode"]], "reset() (basegame method)": [[102, "gncpy.game_engine.base_game.BaseGame.reset"]], "rng (basegame attribute)": [[102, "gncpy.game_engine.base_game.BaseGame.rng"]], "s_collision() (basegame method)": [[102, "gncpy.game_engine.base_game.BaseGame.s_collision"]], "s_game_over() (basegame method)": [[102, "gncpy.game_engine.base_game.BaseGame.s_game_over"]], "s_input() (basegame method)": [[102, "gncpy.game_engine.base_game.BaseGame.s_input"]], "s_movement() (basegame method)": [[102, "gncpy.game_engine.base_game.BaseGame.s_movement"]], "s_score() (basegame method)": [[102, "gncpy.game_engine.base_game.BaseGame.s_score"]], "score (basegame attribute)": [[102, "gncpy.game_engine.base_game.BaseGame.score"]], "seed_val (basegame attribute)": [[102, "gncpy.game_engine.base_game.BaseGame.seed_val"]], "setup() (basegame method)": [[102, "gncpy.game_engine.base_game.BaseGame.setup"]], "step() (basegame method)": [[102, "gncpy.game_engine.base_game.BaseGame.step"]], "validate_config_file() (basegame method)": [[102, "gncpy.game_engine.base_game.BaseGame.validate_config_file"]], "basegame2d (class in gncpy.game_engine.base_game)": [[103, "gncpy.game_engine.base_game.BaseGame2d"]], "__init__() (basegame2d method)": [[103, "gncpy.game_engine.base_game.BaseGame2d.__init__"]], "append_name_to_keys() (basegame2d method)": [[103, "gncpy.game_engine.base_game.BaseGame2d.append_name_to_keys"]], "clock (basegame2d attribute)": [[103, "gncpy.game_engine.base_game.BaseGame2d.clock"]], "close() (basegame2d method)": [[103, "gncpy.game_engine.base_game.BaseGame2d.close"]], "current_time (basegame2d property)": [[103, "gncpy.game_engine.base_game.BaseGame2d.current_time"]], "current_update_count (basegame2d attribute)": [[103, "gncpy.game_engine.base_game.BaseGame2d.current_update_count"]], "dist_per_pix (basegame2d attribute)": [[103, "gncpy.game_engine.base_game.BaseGame2d.dist_per_pix"]], "elapsed_time (basegame2d property)": [[103, "gncpy.game_engine.base_game.BaseGame2d.elapsed_time"]], "get_image_size() (basegame2d method)": [[103, "gncpy.game_engine.base_game.BaseGame2d.get_image_size"]], "img (basegame2d attribute)": [[103, "gncpy.game_engine.base_game.BaseGame2d.img"]], "parse_config_file() (basegame2d method)": [[103, "gncpy.game_engine.base_game.BaseGame2d.parse_config_file"]], "register_params() (basegame2d method)": [[103, "gncpy.game_engine.base_game.BaseGame2d.register_params"]], "reset() (basegame2d method)": [[103, "gncpy.game_engine.base_game.BaseGame2d.reset"]], "s_collision() (basegame2d method)": [[103, "gncpy.game_engine.base_game.BaseGame2d.s_collision"]], "s_game_over() (basegame2d method)": [[103, "gncpy.game_engine.base_game.BaseGame2d.s_game_over"]], "s_input() (basegame2d method)": [[103, "gncpy.game_engine.base_game.BaseGame2d.s_input"]], "s_movement() (basegame2d method)": [[103, "gncpy.game_engine.base_game.BaseGame2d.s_movement"]], "s_render() (basegame2d method)": [[103, "gncpy.game_engine.base_game.BaseGame2d.s_render"]], "s_score() (basegame2d method)": [[103, "gncpy.game_engine.base_game.BaseGame2d.s_score"]], "setup() (basegame2d method)": [[103, "gncpy.game_engine.base_game.BaseGame2d.setup"]], "step() (basegame2d method)": [[103, "gncpy.game_engine.base_game.BaseGame2d.step"]], "validate_config_file() (basegame2d method)": [[103, "gncpy.game_engine.base_game.BaseGame2d.validate_config_file"]], "window (basegame2d attribute)": [[103, "gncpy.game_engine.base_game.BaseGame2d.window"]], "baseparams (class in gncpy.game_engine.base_game)": [[104, "gncpy.game_engine.base_game.BaseParams"]], "__init__() (baseparams method)": [[104, "gncpy.game_engine.base_game.BaseParams.__init__"]], "window (baseparams attribute)": [[104, "gncpy.game_engine.base_game.BaseParams.window"]], "windowparams (class in gncpy.game_engine.base_game)": [[105, "gncpy.game_engine.base_game.WindowParams"]], "__init__() (windowparams method)": [[105, "gncpy.game_engine.base_game.WindowParams.__init__"]], "height (windowparams attribute)": [[105, "gncpy.game_engine.base_game.WindowParams.height"]], "width (windowparams attribute)": [[105, "gncpy.game_engine.base_game.WindowParams.width"]], "ndarray_representer() (in module gncpy.game_engine.base_game)": [[106, "gncpy.game_engine.base_game.ndarray_representer"]], "yaml (in module gncpy.game_engine.base_game)": [[107, "gncpy.game_engine.base_game.yaml"]], "cbirth (class in gncpy.game_engine.components)": [[108, "gncpy.game_engine.components.CBirth"]], "__init__() (cbirth method)": [[108, "gncpy.game_engine.components.CBirth.__init__"]], "loc (cbirth attribute)": [[108, "gncpy.game_engine.components.CBirth.loc"]], "randomize (cbirth attribute)": [[108, "gncpy.game_engine.components.CBirth.randomize"]], "sample() (cbirth method)": [[108, "gncpy.game_engine.components.CBirth.sample"]], "ccapabilities (class in gncpy.game_engine.components)": [[109, "gncpy.game_engine.components.CCapabilities"]], "__init__() (ccapabilities method)": [[109, "gncpy.game_engine.components.CCapabilities.__init__"]], "capabilities (ccapabilities attribute)": [[109, "gncpy.game_engine.components.CCapabilities.capabilities"]], "ccollision (class in gncpy.game_engine.components)": [[110, "gncpy.game_engine.components.CCollision"]], "__init__() (ccollision method)": [[110, "gncpy.game_engine.components.CCollision.__init__"]], "aabb (ccollision attribute)": [[110, "gncpy.game_engine.components.CCollision.aabb"]], "cdynamics (class in gncpy.game_engine.components)": [[111, "gncpy.game_engine.components.CDynamics"]], "__init__() (cdynamics method)": [[111, "gncpy.game_engine.components.CDynamics.__init__"]], "ctrl_args (cdynamics attribute)": [[111, "gncpy.game_engine.components.CDynamics.ctrl_args"]], "dynobj (cdynamics attribute)": [[111, "gncpy.game_engine.components.CDynamics.dynObj"]], "last_state (cdynamics attribute)": [[111, "gncpy.game_engine.components.CDynamics.last_state"]], "pos_inds (cdynamics attribute)": [[111, "gncpy.game_engine.components.CDynamics.pos_inds"]], "state_args (cdynamics attribute)": [[111, "gncpy.game_engine.components.CDynamics.state_args"]], "state_high (cdynamics attribute)": [[111, "gncpy.game_engine.components.CDynamics.state_high"]], "state_low (cdynamics attribute)": [[111, "gncpy.game_engine.components.CDynamics.state_low"]], "vel_inds (cdynamics attribute)": [[111, "gncpy.game_engine.components.CDynamics.vel_inds"]], "cevents (class in gncpy.game_engine.components)": [[112, "gncpy.game_engine.components.CEvents"]], "__init__() (cevents method)": [[112, "gncpy.game_engine.components.CEvents.__init__"]], "events (cevents attribute)": [[112, "gncpy.game_engine.components.CEvents.events"]], "chazard (class in gncpy.game_engine.components)": [[113, "gncpy.game_engine.components.CHazard"]], "__init__() (chazard method)": [[113, "gncpy.game_engine.components.CHazard.__init__"]], "entrance_times (chazard attribute)": [[113, "gncpy.game_engine.components.CHazard.entrance_times"]], "prob_of_death (chazard attribute)": [[113, "gncpy.game_engine.components.CHazard.prob_of_death"]], "cpriority (class in gncpy.game_engine.components)": [[114, "gncpy.game_engine.components.CPriority"]], "__init__() (cpriority method)": [[114, "gncpy.game_engine.components.CPriority.__init__"]], "priority (cpriority attribute)": [[114, "gncpy.game_engine.components.CPriority.priority"]], "cshape (class in gncpy.game_engine.components)": [[115, "gncpy.game_engine.components.CShape"]], "__init__() (cshape method)": [[115, "gncpy.game_engine.components.CShape.__init__"]], "color (cshape attribute)": [[115, "gncpy.game_engine.components.CShape.color"]], "shape (cshape attribute)": [[115, "gncpy.game_engine.components.CShape.shape"]], "type (cshape attribute)": [[115, "gncpy.game_engine.components.CShape.type"]], "zorder (cshape attribute)": [[115, "gncpy.game_engine.components.CShape.zorder"]], "ctransform (class in gncpy.game_engine.components)": [[116, "gncpy.game_engine.components.CTransform"]], "__init__() (ctransform method)": [[116, "gncpy.game_engine.components.CTransform.__init__"]], "last_pos (ctransform attribute)": [[116, "gncpy.game_engine.components.CTransform.last_pos"]], "pos (ctransform attribute)": [[116, "gncpy.game_engine.components.CTransform.pos"]], "library_asset_dir (in module gncpy.game_engine.components)": [[117, "gncpy.game_engine.components.library_asset_dir"]], "entity (class in gncpy.game_engine.entities)": [[118, "gncpy.game_engine.entities.Entity"]], "__init__() (entity method)": [[118, "gncpy.game_engine.entities.Entity.__init__"]], "active (entity property)": [[118, "gncpy.game_engine.entities.Entity.active"]], "add_component() (entity method)": [[118, "gncpy.game_engine.entities.Entity.add_component"]], "destroy() (entity method)": [[118, "gncpy.game_engine.entities.Entity.destroy"]], "get_component() (entity method)": [[118, "gncpy.game_engine.entities.Entity.get_component"]], "has_component() (entity method)": [[118, "gncpy.game_engine.entities.Entity.has_component"]], "id (entity property)": [[118, "gncpy.game_engine.entities.Entity.id"]], "tag (entity property)": [[118, "gncpy.game_engine.entities.Entity.tag"]], "entitymanager (class in gncpy.game_engine.entities)": [[119, "gncpy.game_engine.entities.EntityManager"]], "__init__() (entitymanager method)": [[119, "gncpy.game_engine.entities.EntityManager.__init__"]], "add_entity() (entitymanager method)": [[119, "gncpy.game_engine.entities.EntityManager.add_entity"]], "get_entities() (entitymanager method)": [[119, "gncpy.game_engine.entities.EntityManager.get_entities"]], "get_entity_ids() (entitymanager method)": [[119, "gncpy.game_engine.entities.EntityManager.get_entity_ids"]], "update() (entitymanager method)": [[119, "gncpy.game_engine.entities.EntityManager.update"]], "gncpy.game_engine.base_game": [[120, "module-gncpy.game_engine.base_game"]], "gncpy.game_engine.components": [[121, "module-gncpy.game_engine.components"]], "gncpy.game_engine.entities": [[122, "module-gncpy.game_engine.entities"]], "gncpy.game_engine.physics2d": [[123, "module-gncpy.game_engine.physics2d"]], "gncpy.game_engine.rendering2d": [[124, "module-gncpy.game_engine.rendering2d"]], "collision2dparams (class in gncpy.game_engine.physics2d)": [[125, "gncpy.game_engine.physics2d.Collision2dParams"]], "__init__() (collision2dparams method)": [[125, "gncpy.game_engine.physics2d.Collision2dParams.__init__"]], "height (collision2dparams attribute)": [[125, "gncpy.game_engine.physics2d.Collision2dParams.height"]], "width (collision2dparams attribute)": [[125, "gncpy.game_engine.physics2d.Collision2dParams.width"]], "physics2dparams (class in gncpy.game_engine.physics2d)": [[126, "gncpy.game_engine.physics2d.Physics2dParams"]], "__init__() (physics2dparams method)": [[126, "gncpy.game_engine.physics2d.Physics2dParams.__init__"]], "dist_height (physics2dparams attribute)": [[126, "gncpy.game_engine.physics2d.Physics2dParams.dist_height"]], "dist_width (physics2dparams attribute)": [[126, "gncpy.game_engine.physics2d.Physics2dParams.dist_width"]], "dt (physics2dparams attribute)": [[126, "gncpy.game_engine.physics2d.Physics2dParams.dt"]], "min_pos (physics2dparams attribute)": [[126, "gncpy.game_engine.physics2d.Physics2dParams.min_pos"]], "step_factor (physics2dparams attribute)": [[126, "gncpy.game_engine.physics2d.Physics2dParams.step_factor"]], "update_dt (physics2dparams property)": [[126, "gncpy.game_engine.physics2d.Physics2dParams.update_dt"]], "check_collision2d() (in module gncpy.game_engine.physics2d)": [[127, "gncpy.game_engine.physics2d.check_collision2d"]], "clamp_window_bounds2d() (in module gncpy.game_engine.physics2d)": [[128, "gncpy.game_engine.physics2d.clamp_window_bounds2d"]], "dist_to_pixels() (in module gncpy.game_engine.physics2d)": [[129, "gncpy.game_engine.physics2d.dist_to_pixels"]], "pixels_to_dist() (in module gncpy.game_engine.physics2d)": [[130, "gncpy.game_engine.physics2d.pixels_to_dist"]], "resolve_collision2d() (in module gncpy.game_engine.physics2d)": [[131, "gncpy.game_engine.physics2d.resolve_collision2d"]], "shape2dparams (class in gncpy.game_engine.rendering2d)": [[132, "gncpy.game_engine.rendering2d.Shape2dParams"]], "__init__() (shape2dparams method)": [[132, "gncpy.game_engine.rendering2d.Shape2dParams.__init__"]], "color (shape2dparams attribute)": [[132, "gncpy.game_engine.rendering2d.Shape2dParams.color"]], "file (shape2dparams attribute)": [[132, "gncpy.game_engine.rendering2d.Shape2dParams.file"]], "height (shape2dparams attribute)": [[132, "gncpy.game_engine.rendering2d.Shape2dParams.height"]], "type (shape2dparams attribute)": [[132, "gncpy.game_engine.rendering2d.Shape2dParams.type"]], "width (shape2dparams attribute)": [[132, "gncpy.game_engine.rendering2d.Shape2dParams.width"]], "get_drawable_entities() (in module gncpy.game_engine.rendering2d)": [[133, "gncpy.game_engine.rendering2d.get_drawable_entities"]], "init_rendering_system() (in module gncpy.game_engine.rendering2d)": [[134, "gncpy.game_engine.rendering2d.init_rendering_system"]], "init_window() (in module gncpy.game_engine.rendering2d)": [[135, "gncpy.game_engine.rendering2d.init_window"]], "render() (in module gncpy.game_engine.rendering2d)": [[136, "gncpy.game_engine.rendering2d.render"]], "shutdown() (in module gncpy.game_engine.rendering2d)": [[137, "gncpy.game_engine.rendering2d.shutdown"]], "birthmodelparams (class in gncpy.games.simpleuav2d)": [[138, "gncpy.games.SimpleUAV2d.BirthModelParams"]], "__init__() (birthmodelparams method)": [[138, "gncpy.games.SimpleUAV2d.BirthModelParams.__init__"]], "extra_params (birthmodelparams attribute)": [[138, "gncpy.games.SimpleUAV2d.BirthModelParams.extra_params"]], "location (birthmodelparams attribute)": [[138, "gncpy.games.SimpleUAV2d.BirthModelParams.location"]], "prob (birthmodelparams attribute)": [[138, "gncpy.games.SimpleUAV2d.BirthModelParams.prob"]], "randomize (birthmodelparams attribute)": [[138, "gncpy.games.SimpleUAV2d.BirthModelParams.randomize"]], "scale (birthmodelparams attribute)": [[138, "gncpy.games.SimpleUAV2d.BirthModelParams.scale"]], "times (birthmodelparams attribute)": [[138, "gncpy.games.SimpleUAV2d.BirthModelParams.times"]], "type (birthmodelparams attribute)": [[138, "gncpy.games.SimpleUAV2d.BirthModelParams.type"]], "controlmodelparams (class in gncpy.games.simpleuav2d)": [[139, "gncpy.games.SimpleUAV2d.ControlModelParams"]], "__init__() (controlmodelparams method)": [[139, "gncpy.games.SimpleUAV2d.ControlModelParams.__init__"]], "max_turn_rate (controlmodelparams attribute)": [[139, "gncpy.games.SimpleUAV2d.ControlModelParams.max_turn_rate"]], "max_vel (controlmodelparams attribute)": [[139, "gncpy.games.SimpleUAV2d.ControlModelParams.max_vel"]], "max_vel_x (controlmodelparams attribute)": [[139, "gncpy.games.SimpleUAV2d.ControlModelParams.max_vel_x"]], "max_vel_y (controlmodelparams attribute)": [[139, "gncpy.games.SimpleUAV2d.ControlModelParams.max_vel_y"]], "type (controlmodelparams attribute)": [[139, "gncpy.games.SimpleUAV2d.ControlModelParams.type"]], "dynamicsparams (class in gncpy.games.simpleuav2d)": [[140, "gncpy.games.SimpleUAV2d.DynamicsParams"]], "__init__() (dynamicsparams method)": [[140, "gncpy.games.SimpleUAV2d.DynamicsParams.__init__"]], "controlmodel (dynamicsparams attribute)": [[140, "gncpy.games.SimpleUAV2d.DynamicsParams.controlModel"]], "extra_params (dynamicsparams attribute)": [[140, "gncpy.games.SimpleUAV2d.DynamicsParams.extra_params"]], "stateconstraint (dynamicsparams attribute)": [[140, "gncpy.games.SimpleUAV2d.DynamicsParams.stateConstraint"]], "type (dynamicsparams attribute)": [[140, "gncpy.games.SimpleUAV2d.DynamicsParams.type"]], "eventtype (class in gncpy.games.simpleuav2d)": [[141, "gncpy.games.SimpleUAV2d.EventType"]], "__init__() (eventtype method)": [[141, "gncpy.games.SimpleUAV2d.EventType.__init__"]], "hazardparams (class in gncpy.games.simpleuav2d)": [[142, "gncpy.games.SimpleUAV2d.HazardParams"]], "__init__() (hazardparams method)": [[142, "gncpy.games.SimpleUAV2d.HazardParams.__init__"]], "collision (hazardparams attribute)": [[142, "gncpy.games.SimpleUAV2d.HazardParams.collision"]], "loc_x (hazardparams attribute)": [[142, "gncpy.games.SimpleUAV2d.HazardParams.loc_x"]], "loc_y (hazardparams attribute)": [[142, "gncpy.games.SimpleUAV2d.HazardParams.loc_y"]], "prob_of_death (hazardparams attribute)": [[142, "gncpy.games.SimpleUAV2d.HazardParams.prob_of_death"]], "shape (hazardparams attribute)": [[142, "gncpy.games.SimpleUAV2d.HazardParams.shape"]], "obstacleparams (class in gncpy.games.simpleuav2d)": [[143, "gncpy.games.SimpleUAV2d.ObstacleParams"]], "__init__() (obstacleparams method)": [[143, "gncpy.games.SimpleUAV2d.ObstacleParams.__init__"]], "collision (obstacleparams attribute)": [[143, "gncpy.games.SimpleUAV2d.ObstacleParams.collision"]], "loc_x (obstacleparams attribute)": [[143, "gncpy.games.SimpleUAV2d.ObstacleParams.loc_x"]], "loc_y (obstacleparams attribute)": [[143, "gncpy.games.SimpleUAV2d.ObstacleParams.loc_y"]], "shape (obstacleparams attribute)": [[143, "gncpy.games.SimpleUAV2d.ObstacleParams.shape"]], "params (class in gncpy.games.simpleuav2d)": [[144, "gncpy.games.SimpleUAV2d.Params"]], "__init__() (params method)": [[144, "gncpy.games.SimpleUAV2d.Params.__init__"]], "hazards (params attribute)": [[144, "gncpy.games.SimpleUAV2d.Params.hazards"]], "obstacles (params attribute)": [[144, "gncpy.games.SimpleUAV2d.Params.obstacles"]], "players (params attribute)": [[144, "gncpy.games.SimpleUAV2d.Params.players"]], "score (params attribute)": [[144, "gncpy.games.SimpleUAV2d.Params.score"]], "targets (params attribute)": [[144, "gncpy.games.SimpleUAV2d.Params.targets"]], "playerparams (class in gncpy.games.simpleuav2d)": [[145, "gncpy.games.SimpleUAV2d.PlayerParams"]], "__init__() (playerparams method)": [[145, "gncpy.games.SimpleUAV2d.PlayerParams.__init__"]], "birth (playerparams attribute)": [[145, "gncpy.games.SimpleUAV2d.PlayerParams.birth"]], "capabilities (playerparams attribute)": [[145, "gncpy.games.SimpleUAV2d.PlayerParams.capabilities"]], "collision (playerparams attribute)": [[145, "gncpy.games.SimpleUAV2d.PlayerParams.collision"]], "dynamics (playerparams attribute)": [[145, "gncpy.games.SimpleUAV2d.PlayerParams.dynamics"]], "shape (playerparams attribute)": [[145, "gncpy.games.SimpleUAV2d.PlayerParams.shape"]], "scoreparams (class in gncpy.games.simpleuav2d)": [[146, "gncpy.games.SimpleUAV2d.ScoreParams"]], "__init__() (scoreparams method)": [[146, "gncpy.games.SimpleUAV2d.ScoreParams.__init__"]], "death_decay (scoreparams attribute)": [[146, "gncpy.games.SimpleUAV2d.ScoreParams.death_decay"]], "death_penalty (scoreparams attribute)": [[146, "gncpy.games.SimpleUAV2d.ScoreParams.death_penalty"]], "death_scale (scoreparams attribute)": [[146, "gncpy.games.SimpleUAV2d.ScoreParams.death_scale"]], "hazard_multiplier (scoreparams attribute)": [[146, "gncpy.games.SimpleUAV2d.ScoreParams.hazard_multiplier"]], "min_vel_per (scoreparams attribute)": [[146, "gncpy.games.SimpleUAV2d.ScoreParams.min_vel_per"]], "missed_multiplier (scoreparams attribute)": [[146, "gncpy.games.SimpleUAV2d.ScoreParams.missed_multiplier"]], "time_penalty (scoreparams attribute)": [[146, "gncpy.games.SimpleUAV2d.ScoreParams.time_penalty"]], "type (scoreparams attribute)": [[146, "gncpy.games.SimpleUAV2d.ScoreParams.type"]], "vel_penalty (scoreparams attribute)": [[146, "gncpy.games.SimpleUAV2d.ScoreParams.vel_penalty"]], "wall_penalty (scoreparams attribute)": [[146, "gncpy.games.SimpleUAV2d.ScoreParams.wall_penalty"]], "simpleuav2d (class in gncpy.games.simpleuav2d)": [[147, "gncpy.games.SimpleUAV2d.SimpleUAV2d"]], "__init__() (simpleuav2d method)": [[147, "gncpy.games.SimpleUAV2d.SimpleUAV2d.__init__"], [192, "gncpy.planning.reinforcement_learning.envs.simple2d.simpleUAV2d.SimpleUAV2d.__init__"]], "all_capabilities (simpleuav2d attribute)": [[147, "gncpy.games.SimpleUAV2d.SimpleUAV2d.all_capabilities"]], "append_name_to_keys() (simpleuav2d method)": [[147, "gncpy.games.SimpleUAV2d.SimpleUAV2d.append_name_to_keys"]], "basic_reward() (simpleuav2d method)": [[147, "gncpy.games.SimpleUAV2d.SimpleUAV2d.basic_reward"]], "close() (simpleuav2d method)": [[147, "gncpy.games.SimpleUAV2d.SimpleUAV2d.close"], [192, "gncpy.planning.reinforcement_learning.envs.simple2d.simpleUAV2d.SimpleUAV2d.close"]], "create_dynamics() (simpleuav2d method)": [[147, "gncpy.games.SimpleUAV2d.SimpleUAV2d.create_dynamics"]], "create_hazards() (simpleuav2d method)": [[147, "gncpy.games.SimpleUAV2d.SimpleUAV2d.create_hazards"]], "create_obstacles() (simpleuav2d method)": [[147, "gncpy.games.SimpleUAV2d.SimpleUAV2d.create_obstacles"]], "create_player() (simpleuav2d method)": [[147, "gncpy.games.SimpleUAV2d.SimpleUAV2d.create_player"]], "create_targets() (simpleuav2d method)": [[147, "gncpy.games.SimpleUAV2d.SimpleUAV2d.create_targets"]], "cur_target_seq (simpleuav2d attribute)": [[147, "gncpy.games.SimpleUAV2d.SimpleUAV2d.cur_target_seq"]], "current_time (simpleuav2d property)": [[147, "gncpy.games.SimpleUAV2d.SimpleUAV2d.current_time"]], "elapsed_time (simpleuav2d property)": [[147, "gncpy.games.SimpleUAV2d.SimpleUAV2d.elapsed_time"]], "get_image_size() (simpleuav2d method)": [[147, "gncpy.games.SimpleUAV2d.SimpleUAV2d.get_image_size"]], "get_player_ids() (simpleuav2d method)": [[147, "gncpy.games.SimpleUAV2d.SimpleUAV2d.get_player_ids"]], "get_player_pos_vel_inds() (simpleuav2d method)": [[147, "gncpy.games.SimpleUAV2d.SimpleUAV2d.get_player_pos_vel_inds"]], "get_player_state_bounds() (simpleuav2d method)": [[147, "gncpy.games.SimpleUAV2d.SimpleUAV2d.get_player_state_bounds"]], "get_players_state() (simpleuav2d method)": [[147, "gncpy.games.SimpleUAV2d.SimpleUAV2d.get_players_state"]], "has_random_player_birth_times (simpleuav2d attribute)": [[147, "gncpy.games.SimpleUAV2d.SimpleUAV2d.has_random_player_birth_times"]], "max_player_birth_time (simpleuav2d attribute)": [[147, "gncpy.games.SimpleUAV2d.SimpleUAV2d.max_player_birth_time"]], "parse_config_file() (simpleuav2d method)": [[147, "gncpy.games.SimpleUAV2d.SimpleUAV2d.parse_config_file"]], "propagate_dynamics() (simpleuav2d method)": [[147, "gncpy.games.SimpleUAV2d.SimpleUAV2d.propagate_dynamics"]], "register_params() (simpleuav2d method)": [[147, "gncpy.games.SimpleUAV2d.SimpleUAV2d.register_params"]], "reset() (simpleuav2d method)": [[147, "gncpy.games.SimpleUAV2d.SimpleUAV2d.reset"], [192, "gncpy.planning.reinforcement_learning.envs.simple2d.simpleUAV2d.SimpleUAV2d.reset"]], "s_collision() (simpleuav2d method)": [[147, "gncpy.games.SimpleUAV2d.SimpleUAV2d.s_collision"]], "s_game_over() (simpleuav2d method)": [[147, "gncpy.games.SimpleUAV2d.SimpleUAV2d.s_game_over"]], "s_input() (simpleuav2d method)": [[147, "gncpy.games.SimpleUAV2d.SimpleUAV2d.s_input"]], "s_movement() (simpleuav2d method)": [[147, "gncpy.games.SimpleUAV2d.SimpleUAV2d.s_movement"]], "s_render() (simpleuav2d method)": [[147, "gncpy.games.SimpleUAV2d.SimpleUAV2d.s_render"]], "s_score() (simpleuav2d method)": [[147, "gncpy.games.SimpleUAV2d.SimpleUAV2d.s_score"]], "setup() (simpleuav2d method)": [[147, "gncpy.games.SimpleUAV2d.SimpleUAV2d.setup"]], "spawn_players() (simpleuav2d method)": [[147, "gncpy.games.SimpleUAV2d.SimpleUAV2d.spawn_players"]], "step() (simpleuav2d method)": [[147, "gncpy.games.SimpleUAV2d.SimpleUAV2d.step"], [192, "gncpy.planning.reinforcement_learning.envs.simple2d.simpleUAV2d.SimpleUAV2d.step"]], "target_seq (simpleuav2d attribute)": [[147, "gncpy.games.SimpleUAV2d.SimpleUAV2d.target_seq"]], "validate_config_file() (simpleuav2d method)": [[147, "gncpy.games.SimpleUAV2d.SimpleUAV2d.validate_config_file"]], "stateconstraintparams (class in gncpy.games.simpleuav2d)": [[148, "gncpy.games.SimpleUAV2d.StateConstraintParams"]], "__init__() (stateconstraintparams method)": [[148, "gncpy.games.SimpleUAV2d.StateConstraintParams.__init__"]], "max_vels (stateconstraintparams attribute)": [[148, "gncpy.games.SimpleUAV2d.StateConstraintParams.max_vels"]], "min_vels (stateconstraintparams attribute)": [[148, "gncpy.games.SimpleUAV2d.StateConstraintParams.min_vels"]], "type (stateconstraintparams attribute)": [[148, "gncpy.games.SimpleUAV2d.StateConstraintParams.type"]], "targetparams (class in gncpy.games.simpleuav2d)": [[149, "gncpy.games.SimpleUAV2d.TargetParams"]], "__init__() (targetparams method)": [[149, "gncpy.games.SimpleUAV2d.TargetParams.__init__"]], "capabilities (targetparams attribute)": [[149, "gncpy.games.SimpleUAV2d.TargetParams.capabilities"]], "collision (targetparams attribute)": [[149, "gncpy.games.SimpleUAV2d.TargetParams.collision"]], "loc_x (targetparams attribute)": [[149, "gncpy.games.SimpleUAV2d.TargetParams.loc_x"]], "loc_y (targetparams attribute)": [[149, "gncpy.games.SimpleUAV2d.TargetParams.loc_y"]], "order (targetparams attribute)": [[149, "gncpy.games.SimpleUAV2d.TargetParams.order"]], "priority (targetparams attribute)": [[149, "gncpy.games.SimpleUAV2d.TargetParams.priority"]], "shape (targetparams attribute)": [[149, "gncpy.games.SimpleUAV2d.TargetParams.shape"]], "gncpy.games.simpleuav2d": [[150, "module-gncpy.games.SimpleUAV2d"]], "gncpy.control": [[151, "module-gncpy.control"]], "gncpy.coordinate_transforms": [[152, "module-gncpy.coordinate_transforms"]], "gncpy.data_fusion": [[153, "module-gncpy.data_fusion"]], "gncpy.distributions": [[154, "module-gncpy.distributions"]], "gncpy.dynamics": [[155, "module-gncpy.dynamics"]], "gncpy.errors": [[156, "module-gncpy.errors"]], "gncpy.filters": [[157, "module-gncpy.filters"]], "gncpy.game_engine": [[158, "module-gncpy.game_engine"]], "gncpy.games": [[159, "module-gncpy.games"]], "gncpy.math": [[160, "module-gncpy.math"]], "gncpy.measurements": [[161, "module-gncpy.measurements"]], "gncpy.orbital_mechanics": [[162, "module-gncpy.orbital_mechanics"]], "gncpy.planning": [[163, "module-gncpy.planning"]], "gncpy.plotting": [[164, "module-gncpy.plotting"]], "gncpy.sampling": [[165, "module-gncpy.sampling"]], "gncpy.utilities": [[166, "module-gncpy.utilities"]], "gncpy.wgs84": [[167, "module-gncpy.wgs84"]], "epanechnikov_kernel() (in module gncpy.math)": [[168, "gncpy.math.epanechnikov_kernel"]], "gamma_fnc() (in module gncpy.math)": [[169, "gncpy.math.gamma_fnc"]], "gaussian_kernel() (in module gncpy.math)": [[170, "gncpy.math.gaussian_kernel"]], "get_elem_sym_fnc() (in module gncpy.math)": [[171, "gncpy.math.get_elem_sym_fnc"]], "get_hessian() (in module gncpy.math)": [[172, "gncpy.math.get_hessian"]], "get_input_jacobian() (in module gncpy.math)": [[173, "gncpy.math.get_input_jacobian"]], "get_jacobian() (in module gncpy.math)": [[174, "gncpy.math.get_jacobian"]], "get_state_jacobian() (in module gncpy.math)": [[175, "gncpy.math.get_state_jacobian"]], "log_sum_exp() (in module gncpy.math)": [[176, "gncpy.math.log_sum_exp"]], "rk4() (in module gncpy.math)": [[177, "gncpy.math.rk4"]], "rk4_backward() (in module gncpy.math)": [[178, "gncpy.math.rk4_backward"]], "weighted_sum_mat() (in module gncpy.math)": [[179, "gncpy.math.weighted_sum_mat"]], "weighted_sum_vec() (in module gncpy.math)": [[180, "gncpy.math.weighted_sum_vec"]], "correct_lon_ascend() (in module gncpy.orbital_mechanics)": [[181, "gncpy.orbital_mechanics.correct_lon_ascend"]], "ecc_anom_from_mean() (in module gncpy.orbital_mechanics)": [[182, "gncpy.orbital_mechanics.ecc_anom_from_mean"]], "ecef_from_orbit() (in module gncpy.orbital_mechanics)": [[183, "gncpy.orbital_mechanics.ecef_from_orbit"]], "true_anom_from_ecc() (in module gncpy.orbital_mechanics)": [[184, "gncpy.orbital_mechanics.true_anom_from_ecc"]], "astar (class in gncpy.planning.a_star)": [[185, "gncpy.planning.a_star.AStar"]], "__init__() (astar method)": [[185, "gncpy.planning.a_star.AStar.__init__"]], "beam_search_max_nodes (astar attribute)": [[185, "gncpy.planning.a_star.AStar.beam_search_max_nodes"]], "calc_heuristic() (astar method)": [[185, "gncpy.planning.a_star.AStar.calc_heuristic"]], "calc_weight() (astar method)": [[185, "gncpy.planning.a_star.AStar.calc_weight"]], "draw_end() (astar method)": [[185, "gncpy.planning.a_star.AStar.draw_end"]], "draw_map() (astar method)": [[185, "gncpy.planning.a_star.AStar.draw_map"]], "draw_start() (astar method)": [[185, "gncpy.planning.a_star.AStar.draw_start"]], "final_path() (astar method)": [[185, "gncpy.planning.a_star.AStar.final_path"]], "get_map_cost() (astar method)": [[185, "gncpy.planning.a_star.AStar.get_map_cost"]], "ind_to_pos() (astar method)": [[185, "gncpy.planning.a_star.AStar.ind_to_pos"]], "is_valid() (astar method)": [[185, "gncpy.planning.a_star.AStar.is_valid"]], "max (astar attribute)": [[185, "gncpy.planning.a_star.AStar.max"]], "min (astar attribute)": [[185, "gncpy.planning.a_star.AStar.min"]], "motion (astar attribute)": [[185, "gncpy.planning.a_star.AStar.motion"]], "plan() (astar method)": [[185, "gncpy.planning.a_star.AStar.plan"]], "pos_to_ind() (astar method)": [[185, "gncpy.planning.a_star.AStar.pos_to_ind"]], "ravel_ind() (astar method)": [[185, "gncpy.planning.a_star.AStar.ravel_ind"]], "resolution (astar attribute)": [[185, "gncpy.planning.a_star.AStar.resolution"]], "set_map() (astar method)": [[185, "gncpy.planning.a_star.AStar.set_map"]], "use_beam_search (astar attribute)": [[185, "gncpy.planning.a_star.AStar.use_beam_search"]], "weight (astar attribute)": [[185, "gncpy.planning.a_star.AStar.weight"]], "node (class in gncpy.planning.a_star)": [[186, "gncpy.planning.a_star.Node"]], "__init__() (node method)": [[186, "gncpy.planning.a_star.Node.__init__"], [204, "gncpy.planning.rrt_star.Node.__init__"]], "cost (node attribute)": [[186, "gncpy.planning.a_star.Node.cost"], [204, "gncpy.planning.rrt_star.Node.cost"]], "indices (node attribute)": [[186, "gncpy.planning.a_star.Node.indices"]], "parent_idx (node attribute)": [[186, "gncpy.planning.a_star.Node.parent_idx"]], "gncpy.planning.a_star": [[187, "module-gncpy.planning.a_star"]], "gncpy.planning.reinforcement_learning": [[188, "module-gncpy.planning.reinforcement_learning"]], "gncpy.planning.rrt_star": [[189, "module-gncpy.planning.rrt_star"]], "gncpy.planning.reinforcement_learning.envs.simple2d": [[190, "module-gncpy.planning.reinforcement_learning.envs.simple2d"]], "gncpy.planning.reinforcement_learning.envs.simple2d.simpleuav2d": [[191, "module-gncpy.planning.reinforcement_learning.envs.simple2d.simpleUAV2d"]], "simpleuav2d (class in gncpy.planning.reinforcement_learning.envs.simple2d.simpleuav2d)": [[192, "gncpy.planning.reinforcement_learning.envs.simple2d.simpleUAV2d.SimpleUAV2d"]], "action_space (simpleuav2d attribute)": [[192, "gncpy.planning.reinforcement_learning.envs.simple2d.simpleUAV2d.SimpleUAV2d.action_space"]], "aux_use_n_targets (simpleuav2d attribute)": [[192, "gncpy.planning.reinforcement_learning.envs.simple2d.simpleUAV2d.SimpleUAV2d.aux_use_n_targets"]], "aux_use_time (simpleuav2d attribute)": [[192, "gncpy.planning.reinforcement_learning.envs.simple2d.simpleUAV2d.SimpleUAV2d.aux_use_time"]], "calc_obs_space() (simpleuav2d method)": [[192, "gncpy.planning.reinforcement_learning.envs.simple2d.simpleUAV2d.SimpleUAV2d.calc_obs_space"]], "fig (simpleuav2d attribute)": [[192, "gncpy.planning.reinforcement_learning.envs.simple2d.simpleUAV2d.SimpleUAV2d.fig"]], "game (simpleuav2d attribute)": [[192, "gncpy.planning.reinforcement_learning.envs.simple2d.simpleUAV2d.SimpleUAV2d.game"]], "gen_act_map() (simpleuav2d method)": [[192, "gncpy.planning.reinforcement_learning.envs.simple2d.simpleUAV2d.SimpleUAV2d.gen_act_map"]], "max_time (simpleuav2d attribute)": [[192, "gncpy.planning.reinforcement_learning.envs.simple2d.simpleUAV2d.SimpleUAV2d.max_time"]], "metadata (simpleuav2d attribute)": [[192, "gncpy.planning.reinforcement_learning.envs.simple2d.simpleUAV2d.SimpleUAV2d.metadata"]], "np_random (simpleuav2d property)": [[192, "gncpy.planning.reinforcement_learning.envs.simple2d.simpleUAV2d.SimpleUAV2d.np_random"]], "obs_type (simpleuav2d attribute)": [[192, "gncpy.planning.reinforcement_learning.envs.simple2d.simpleUAV2d.SimpleUAV2d.obs_type"]], "observation_space (simpleuav2d attribute)": [[192, "gncpy.planning.reinforcement_learning.envs.simple2d.simpleUAV2d.SimpleUAV2d.observation_space"]], "render_mode (simpleuav2d attribute)": [[192, "gncpy.planning.reinforcement_learning.envs.simple2d.simpleUAV2d.SimpleUAV2d.render_mode"]], "seed() (simpleuav2d method)": [[192, "gncpy.planning.reinforcement_learning.envs.simple2d.simpleUAV2d.SimpleUAV2d.seed"]], "unwrapped (simpleuav2d property)": [[192, "gncpy.planning.reinforcement_learning.envs.simple2d.simpleUAV2d.SimpleUAV2d.unwrapped"]], "simpleuavhazards2d (class in gncpy.planning.reinforcement_learning.envs.simple2d.simpleuav2d)": [[193, "gncpy.planning.reinforcement_learning.envs.simple2d.simpleUAV2d.SimpleUAVHazards2d"]], "__init__() (simpleuavhazards2d method)": [[193, "gncpy.planning.reinforcement_learning.envs.simple2d.simpleUAV2d.SimpleUAVHazards2d.__init__"]], "action_space (simpleuavhazards2d attribute)": [[193, "gncpy.planning.reinforcement_learning.envs.simple2d.simpleUAV2d.SimpleUAVHazards2d.action_space"]], "calc_obs_space() (simpleuavhazards2d method)": [[193, "gncpy.planning.reinforcement_learning.envs.simple2d.simpleUAV2d.SimpleUAVHazards2d.calc_obs_space"]], "close() (simpleuavhazards2d method)": [[193, "gncpy.planning.reinforcement_learning.envs.simple2d.simpleUAV2d.SimpleUAVHazards2d.close"]], "gen_act_map() (simpleuavhazards2d method)": [[193, "gncpy.planning.reinforcement_learning.envs.simple2d.simpleUAV2d.SimpleUAVHazards2d.gen_act_map"]], "metadata (simpleuavhazards2d attribute)": [[193, "gncpy.planning.reinforcement_learning.envs.simple2d.simpleUAV2d.SimpleUAVHazards2d.metadata"]], "np_random (simpleuavhazards2d property)": [[193, "gncpy.planning.reinforcement_learning.envs.simple2d.simpleUAV2d.SimpleUAVHazards2d.np_random"]], "reset() (simpleuavhazards2d method)": [[193, "gncpy.planning.reinforcement_learning.envs.simple2d.simpleUAV2d.SimpleUAVHazards2d.reset"]], "seed() (simpleuavhazards2d method)": [[193, "gncpy.planning.reinforcement_learning.envs.simple2d.simpleUAV2d.SimpleUAVHazards2d.seed"]], "step() (simpleuavhazards2d method)": [[193, "gncpy.planning.reinforcement_learning.envs.simple2d.simpleUAV2d.SimpleUAVHazards2d.step"]], "unwrapped (simpleuavhazards2d property)": [[193, "gncpy.planning.reinforcement_learning.envs.simple2d.simpleUAV2d.SimpleUAVHazards2d.unwrapped"]], "gncpy.planning.reinforcement_learning.envs": [[194, "module-gncpy.planning.reinforcement_learning.envs"]], "gncpy.planning.reinforcement_learning.wrappers": [[195, "module-gncpy.planning.reinforcement_learning.wrappers"]], "bufferfames (class in gncpy.planning.reinforcement_learning.wrappers)": [[196, "gncpy.planning.reinforcement_learning.wrappers.BufferFames"]], "__init__() (bufferfames method)": [[196, "gncpy.planning.reinforcement_learning.wrappers.BufferFames.__init__"]], "action_space (bufferfames property)": [[196, "gncpy.planning.reinforcement_learning.wrappers.BufferFames.action_space"]], "class_name() (bufferfames class method)": [[196, "gncpy.planning.reinforcement_learning.wrappers.BufferFames.class_name"]], "close() (bufferfames method)": [[196, "gncpy.planning.reinforcement_learning.wrappers.BufferFames.close"]], "metadata (bufferfames property)": [[196, "gncpy.planning.reinforcement_learning.wrappers.BufferFames.metadata"]], "np_random (bufferfames property)": [[196, "gncpy.planning.reinforcement_learning.wrappers.BufferFames.np_random"]], "observation() (bufferfames method)": [[196, "gncpy.planning.reinforcement_learning.wrappers.BufferFames.observation"]], "observation_space (bufferfames property)": [[196, "gncpy.planning.reinforcement_learning.wrappers.BufferFames.observation_space"]], "render_mode (bufferfames property)": [[196, "gncpy.planning.reinforcement_learning.wrappers.BufferFames.render_mode"]], "reset() (bufferfames method)": [[196, "gncpy.planning.reinforcement_learning.wrappers.BufferFames.reset"]], "reward_range (bufferfames property)": [[196, "gncpy.planning.reinforcement_learning.wrappers.BufferFames.reward_range"]], "seed() (bufferfames method)": [[196, "gncpy.planning.reinforcement_learning.wrappers.BufferFames.seed"]], "spec (bufferfames property)": [[196, "gncpy.planning.reinforcement_learning.wrappers.BufferFames.spec"]], "step() (bufferfames method)": [[196, "gncpy.planning.reinforcement_learning.wrappers.BufferFames.step"]], "unwrapped (bufferfames property)": [[196, "gncpy.planning.reinforcement_learning.wrappers.BufferFames.unwrapped"]], "grayscaleobservation (class in gncpy.planning.reinforcement_learning.wrappers)": [[197, "gncpy.planning.reinforcement_learning.wrappers.GrayScaleObservation"]], "__init__() (grayscaleobservation method)": [[197, "gncpy.planning.reinforcement_learning.wrappers.GrayScaleObservation.__init__"]], "action_space (grayscaleobservation property)": [[197, "gncpy.planning.reinforcement_learning.wrappers.GrayScaleObservation.action_space"]], "class_name() (grayscaleobservation class method)": [[197, "gncpy.planning.reinforcement_learning.wrappers.GrayScaleObservation.class_name"]], "close() (grayscaleobservation method)": [[197, "gncpy.planning.reinforcement_learning.wrappers.GrayScaleObservation.close"]], "metadata (grayscaleobservation property)": [[197, "gncpy.planning.reinforcement_learning.wrappers.GrayScaleObservation.metadata"]], "np_random (grayscaleobservation property)": [[197, "gncpy.planning.reinforcement_learning.wrappers.GrayScaleObservation.np_random"]], "observation() (grayscaleobservation method)": [[197, "gncpy.planning.reinforcement_learning.wrappers.GrayScaleObservation.observation"]], "observation_space (grayscaleobservation property)": [[197, "gncpy.planning.reinforcement_learning.wrappers.GrayScaleObservation.observation_space"]], "render_mode (grayscaleobservation property)": [[197, "gncpy.planning.reinforcement_learning.wrappers.GrayScaleObservation.render_mode"]], "reset() (grayscaleobservation method)": [[197, "gncpy.planning.reinforcement_learning.wrappers.GrayScaleObservation.reset"]], "reward_range (grayscaleobservation property)": [[197, "gncpy.planning.reinforcement_learning.wrappers.GrayScaleObservation.reward_range"]], "seed() (grayscaleobservation method)": [[197, "gncpy.planning.reinforcement_learning.wrappers.GrayScaleObservation.seed"]], "spec (grayscaleobservation property)": [[197, "gncpy.planning.reinforcement_learning.wrappers.GrayScaleObservation.spec"]], "step() (grayscaleobservation method)": [[197, "gncpy.planning.reinforcement_learning.wrappers.GrayScaleObservation.step"]], "unwrapped (grayscaleobservation property)": [[197, "gncpy.planning.reinforcement_learning.wrappers.GrayScaleObservation.unwrapped"]], "maxframes (class in gncpy.planning.reinforcement_learning.wrappers)": [[198, "gncpy.planning.reinforcement_learning.wrappers.MaxFrames"]], "__init__() (maxframes method)": [[198, "gncpy.planning.reinforcement_learning.wrappers.MaxFrames.__init__"]], "action_space (maxframes property)": [[198, "gncpy.planning.reinforcement_learning.wrappers.MaxFrames.action_space"]], "class_name() (maxframes class method)": [[198, "gncpy.planning.reinforcement_learning.wrappers.MaxFrames.class_name"]], "close() (maxframes method)": [[198, "gncpy.planning.reinforcement_learning.wrappers.MaxFrames.close"]], "metadata (maxframes property)": [[198, "gncpy.planning.reinforcement_learning.wrappers.MaxFrames.metadata"]], "np_random (maxframes property)": [[198, "gncpy.planning.reinforcement_learning.wrappers.MaxFrames.np_random"]], "observation() (maxframes method)": [[198, "gncpy.planning.reinforcement_learning.wrappers.MaxFrames.observation"]], "observation_space (maxframes property)": [[198, "gncpy.planning.reinforcement_learning.wrappers.MaxFrames.observation_space"]], "render_mode (maxframes property)": [[198, "gncpy.planning.reinforcement_learning.wrappers.MaxFrames.render_mode"]], "reset() (maxframes method)": [[198, "gncpy.planning.reinforcement_learning.wrappers.MaxFrames.reset"]], "reward_range (maxframes property)": [[198, "gncpy.planning.reinforcement_learning.wrappers.MaxFrames.reward_range"]], "seed() (maxframes method)": [[198, "gncpy.planning.reinforcement_learning.wrappers.MaxFrames.seed"]], "spec (maxframes property)": [[198, "gncpy.planning.reinforcement_learning.wrappers.MaxFrames.spec"]], "step() (maxframes method)": [[198, "gncpy.planning.reinforcement_learning.wrappers.MaxFrames.step"]], "unwrapped (maxframes property)": [[198, "gncpy.planning.reinforcement_learning.wrappers.MaxFrames.unwrapped"]], "resizeimage (class in gncpy.planning.reinforcement_learning.wrappers)": [[199, "gncpy.planning.reinforcement_learning.wrappers.ResizeImage"]], "__init__() (resizeimage method)": [[199, "gncpy.planning.reinforcement_learning.wrappers.ResizeImage.__init__"]], "action_space (resizeimage property)": [[199, "gncpy.planning.reinforcement_learning.wrappers.ResizeImage.action_space"]], "class_name() (resizeimage class method)": [[199, "gncpy.planning.reinforcement_learning.wrappers.ResizeImage.class_name"]], "close() (resizeimage method)": [[199, "gncpy.planning.reinforcement_learning.wrappers.ResizeImage.close"]], "metadata (resizeimage property)": [[199, "gncpy.planning.reinforcement_learning.wrappers.ResizeImage.metadata"]], "np_random (resizeimage property)": [[199, "gncpy.planning.reinforcement_learning.wrappers.ResizeImage.np_random"]], "observation() (resizeimage method)": [[199, "gncpy.planning.reinforcement_learning.wrappers.ResizeImage.observation"]], "observation_space (resizeimage property)": [[199, "gncpy.planning.reinforcement_learning.wrappers.ResizeImage.observation_space"]], "render_mode (resizeimage property)": [[199, "gncpy.planning.reinforcement_learning.wrappers.ResizeImage.render_mode"]], "reset() (resizeimage method)": [[199, "gncpy.planning.reinforcement_learning.wrappers.ResizeImage.reset"]], "reward_range (resizeimage property)": [[199, "gncpy.planning.reinforcement_learning.wrappers.ResizeImage.reward_range"]], "seed() (resizeimage method)": [[199, "gncpy.planning.reinforcement_learning.wrappers.ResizeImage.seed"]], "spec (resizeimage property)": [[199, "gncpy.planning.reinforcement_learning.wrappers.ResizeImage.spec"]], "step() (resizeimage method)": [[199, "gncpy.planning.reinforcement_learning.wrappers.ResizeImage.step"]], "unwrapped (resizeimage property)": [[199, "gncpy.planning.reinforcement_learning.wrappers.ResizeImage.unwrapped"]], "skipframes (class in gncpy.planning.reinforcement_learning.wrappers)": [[200, "gncpy.planning.reinforcement_learning.wrappers.SkipFrames"]], "__init__() (skipframes method)": [[200, "gncpy.planning.reinforcement_learning.wrappers.SkipFrames.__init__"]], "action_space (skipframes property)": [[200, "gncpy.planning.reinforcement_learning.wrappers.SkipFrames.action_space"]], "class_name() (skipframes class method)": [[200, "gncpy.planning.reinforcement_learning.wrappers.SkipFrames.class_name"]], "close() (skipframes method)": [[200, "gncpy.planning.reinforcement_learning.wrappers.SkipFrames.close"]], "metadata (skipframes property)": [[200, "gncpy.planning.reinforcement_learning.wrappers.SkipFrames.metadata"]], "np_random (skipframes property)": [[200, "gncpy.planning.reinforcement_learning.wrappers.SkipFrames.np_random"]], "observation_space (skipframes property)": [[200, "gncpy.planning.reinforcement_learning.wrappers.SkipFrames.observation_space"]], "render_mode (skipframes property)": [[200, "gncpy.planning.reinforcement_learning.wrappers.SkipFrames.render_mode"]], "reset() (skipframes method)": [[200, "gncpy.planning.reinforcement_learning.wrappers.SkipFrames.reset"]], "reward_range (skipframes property)": [[200, "gncpy.planning.reinforcement_learning.wrappers.SkipFrames.reward_range"]], "seed() (skipframes method)": [[200, "gncpy.planning.reinforcement_learning.wrappers.SkipFrames.seed"]], "spec (skipframes property)": [[200, "gncpy.planning.reinforcement_learning.wrappers.SkipFrames.spec"]], "step() (skipframes method)": [[200, "gncpy.planning.reinforcement_learning.wrappers.SkipFrames.step"]], "unwrapped (skipframes property)": [[200, "gncpy.planning.reinforcement_learning.wrappers.SkipFrames.unwrapped"]], "stackframes (class in gncpy.planning.reinforcement_learning.wrappers)": [[201, "gncpy.planning.reinforcement_learning.wrappers.StackFrames"]], "__init__() (stackframes method)": [[201, "gncpy.planning.reinforcement_learning.wrappers.StackFrames.__init__"]], "action_space (stackframes property)": [[201, "gncpy.planning.reinforcement_learning.wrappers.StackFrames.action_space"]], "class_name() (stackframes class method)": [[201, "gncpy.planning.reinforcement_learning.wrappers.StackFrames.class_name"]], "close() (stackframes method)": [[201, "gncpy.planning.reinforcement_learning.wrappers.StackFrames.close"]], "metadata (stackframes property)": [[201, "gncpy.planning.reinforcement_learning.wrappers.StackFrames.metadata"]], "np_random (stackframes property)": [[201, "gncpy.planning.reinforcement_learning.wrappers.StackFrames.np_random"]], "observation() (stackframes method)": [[201, "gncpy.planning.reinforcement_learning.wrappers.StackFrames.observation"]], "observation_space (stackframes property)": [[201, "gncpy.planning.reinforcement_learning.wrappers.StackFrames.observation_space"]], "render_mode (stackframes property)": [[201, "gncpy.planning.reinforcement_learning.wrappers.StackFrames.render_mode"]], "reset() (stackframes method)": [[201, "gncpy.planning.reinforcement_learning.wrappers.StackFrames.reset"]], "reward_range (stackframes property)": [[201, "gncpy.planning.reinforcement_learning.wrappers.StackFrames.reward_range"]], "seed() (stackframes method)": [[201, "gncpy.planning.reinforcement_learning.wrappers.StackFrames.seed"]], "spec (stackframes property)": [[201, "gncpy.planning.reinforcement_learning.wrappers.StackFrames.spec"]], "step() (stackframes method)": [[201, "gncpy.planning.reinforcement_learning.wrappers.StackFrames.step"]], "unwrapped (stackframes property)": [[201, "gncpy.planning.reinforcement_learning.wrappers.StackFrames.unwrapped"]], "extendedlqrrrtstar (class in gncpy.planning.rrt_star)": [[202, "gncpy.planning.rrt_star.ExtendedLQRRRTStar"]], "__init__() (extendedlqrrrtstar method)": [[202, "gncpy.planning.rrt_star.ExtendedLQRRRTStar.__init__"]], "lqrrrtstar (class in gncpy.planning.rrt_star)": [[203, "gncpy.planning.rrt_star.LQRRRTStar"]], "nobs (lqrrrtstar attribute)": [[203, "gncpy.planning.rrt_star.LQRRRTStar.Nobs"]], "p (lqrrrtstar attribute)": [[203, "gncpy.planning.rrt_star.LQRRRTStar.P"]], "s (lqrrrtstar attribute)": [[203, "gncpy.planning.rrt_star.LQRRRTStar.S"]], "__init__() (lqrrrtstar method)": [[203, "gncpy.planning.rrt_star.LQRRRTStar.__init__"]], "connect_circle_dist (lqrrrtstar attribute)": [[203, "gncpy.planning.rrt_star.LQRRRTStar.connect_circle_dist"]], "ell_con (lqrrrtstar attribute)": [[203, "gncpy.planning.rrt_star.LQRRRTStar.ell_con"]], "end (lqrrrtstar attribute)": [[203, "gncpy.planning.rrt_star.LQRRRTStar.end"]], "expand_dis (lqrrrtstar attribute)": [[203, "gncpy.planning.rrt_star.LQRRRTStar.expand_dis"]], "goal_sample_rate (lqrrrtstar attribute)": [[203, "gncpy.planning.rrt_star.LQRRRTStar.goal_sample_rate"]], "max_iter (lqrrrtstar attribute)": [[203, "gncpy.planning.rrt_star.LQRRRTStar.max_iter"]], "max_rand (lqrrrtstar attribute)": [[203, "gncpy.planning.rrt_star.LQRRRTStar.max_rand"]], "min_rand (lqrrrtstar attribute)": [[203, "gncpy.planning.rrt_star.LQRRRTStar.min_rand"]], "node_list (lqrrrtstar attribute)": [[203, "gncpy.planning.rrt_star.LQRRRTStar.node_list"]], "obstacle_list (lqrrrtstar attribute)": [[203, "gncpy.planning.rrt_star.LQRRRTStar.obstacle_list"]], "planner (lqrrrtstar attribute)": [[203, "gncpy.planning.rrt_star.LQRRRTStar.planner"]], "pos_inds (lqrrrtstar attribute)": [[203, "gncpy.planning.rrt_star.LQRRRTStar.pos_inds"]], "rng (lqrrrtstar attribute)": [[203, "gncpy.planning.rrt_star.LQRRRTStar.rng"]], "sampling_fun (lqrrrtstar attribute)": [[203, "gncpy.planning.rrt_star.LQRRRTStar.sampling_fun"]], "start (lqrrrtstar attribute)": [[203, "gncpy.planning.rrt_star.LQRRRTStar.start"]], "step_size (lqrrrtstar attribute)": [[203, "gncpy.planning.rrt_star.LQRRRTStar.step_size"]], "node (class in gncpy.planning.rrt_star)": [[204, "gncpy.planning.rrt_star.Node"]], "parent (node attribute)": [[204, "gncpy.planning.rrt_star.Node.parent"]], "path (node attribute)": [[204, "gncpy.planning.rrt_star.Node.path"]], "sv (node attribute)": [[204, "gncpy.planning.rrt_star.Node.sv"]], "u (node attribute)": [[204, "gncpy.planning.rrt_star.Node.u"]], "calc_error_ellipse() (in module gncpy.plotting)": [[205, "gncpy.plotting.calc_error_ellipse"]], "get_cmap() (in module gncpy.plotting)": [[206, "gncpy.plotting.get_cmap"]], "init_plotting_opts() (in module gncpy.plotting)": [[207, "gncpy.plotting.init_plotting_opts"]], "set_title_label() (in module gncpy.plotting)": [[208, "gncpy.plotting.set_title_label"]], "metropolishastings (class in gncpy.sampling)": [[209, "gncpy.sampling.MetropolisHastings"]], "__init__() (metropolishastings method)": [[209, "gncpy.sampling.MetropolisHastings.__init__"]], "classpropertydescriptor (class in gncpy.utilities)": [[210, "gncpy.utilities.ClassPropertyDescriptor"]], "__init__() (classpropertydescriptor method)": [[210, "gncpy.utilities.ClassPropertyDescriptor.__init__"]], "classpropertymetaclass (class in gncpy.utilities)": [[211, "gncpy.utilities.ClassPropertyMetaClass"]], "__init__() (classpropertymetaclass method)": [[211, "gncpy.utilities.ClassPropertyMetaClass.__init__"]], "mro() (classpropertymetaclass method)": [[211, "gncpy.utilities.ClassPropertyMetaClass.mro"]], "classproperty() (in module gncpy.utilities)": [[212, "gncpy.utilities.classproperty"]], "calc_earth_rate() (in module gncpy.wgs84)": [[213, "gncpy.wgs84.calc_earth_rate"]], "calc_ew_rad() (in module gncpy.wgs84)": [[214, "gncpy.wgs84.calc_ew_rad"]], "calc_gravity() (in module gncpy.wgs84)": [[215, "gncpy.wgs84.calc_gravity"]], "calc_ns_rad() (in module gncpy.wgs84)": [[216, "gncpy.wgs84.calc_ns_rad"]], "calc_transport_rate() (in module gncpy.wgs84)": [[217, "gncpy.wgs84.calc_transport_rate"]], "convert_msl_to_wgs() (in module gncpy.wgs84)": [[218, "gncpy.wgs84.convert_msl_to_wgs"]], "convert_wgs_to_msl() (in module gncpy.wgs84)": [[219, "gncpy.wgs84.convert_wgs_to_msl"]], "init_egm_lookup_table() (in module gncpy.wgs84)": [[220, "gncpy.wgs84.init_egm_lookup_table"]]}})
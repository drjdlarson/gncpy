Search.setIndex({"docnames": ["References", "_autosummary/gncpy", "_autosummary/gncpy/control/gncpy.control.ELQR", "_autosummary/gncpy/control/gncpy.control.LQR", "_autosummary/gncpy/coordinate_transforms/gncpy.coordinate_transforms.ecef_to_LLA", "_autosummary/gncpy/coordinate_transforms/gncpy.coordinate_transforms.ecef_to_NED", "_autosummary/gncpy/coordinate_transforms/gncpy.coordinate_transforms.lla_to_ECEF", "_autosummary/gncpy/coordinate_transforms/gncpy.coordinate_transforms.lla_to_NED", "_autosummary/gncpy/coordinate_transforms/gncpy.coordinate_transforms.ned_to_LLA", "_autosummary/gncpy/data_fusion/gncpy.data_fusion.GeneralizedCovarianceIntersection", "_autosummary/gncpy/distributions/gncpy.distributions.Particle", "_autosummary/gncpy/distributions/gncpy.distributions.ParticleDistribution", "_autosummary/gncpy/distributions/gncpy.distributions.QuadraturePoints", "_autosummary/gncpy/distributions/gncpy.distributions.SigmaPoints", "_autosummary/gncpy/distributions/gncpy.distributions.SimpleParticleDistribution", "_autosummary/gncpy/dynamics/aircraft/gncpy.dynamics.aircraft.simple_multirotor", "_autosummary/gncpy/dynamics/aircraft/simple_multirotor/gncpy.dynamics.aircraft.simple_multirotor.AeroParams", "_autosummary/gncpy/dynamics/aircraft/simple_multirotor/gncpy.dynamics.aircraft.simple_multirotor.AircraftParams", "_autosummary/gncpy/dynamics/aircraft/simple_multirotor/gncpy.dynamics.aircraft.simple_multirotor.Effector", "_autosummary/gncpy/dynamics/aircraft/simple_multirotor/gncpy.dynamics.aircraft.simple_multirotor.Environment", "_autosummary/gncpy/dynamics/aircraft/simple_multirotor/gncpy.dynamics.aircraft.simple_multirotor.GeoParams", "_autosummary/gncpy/dynamics/aircraft/simple_multirotor/gncpy.dynamics.aircraft.simple_multirotor.MassParams", "_autosummary/gncpy/dynamics/aircraft/simple_multirotor/gncpy.dynamics.aircraft.simple_multirotor.MotorParams", "_autosummary/gncpy/dynamics/aircraft/simple_multirotor/gncpy.dynamics.aircraft.simple_multirotor.PropParams", "_autosummary/gncpy/dynamics/aircraft/simple_multirotor/gncpy.dynamics.aircraft.simple_multirotor.SimpleMultirotor", "_autosummary/gncpy/dynamics/aircraft/simple_multirotor/gncpy.dynamics.aircraft.simple_multirotor.Vehicle", "_autosummary/gncpy/dynamics/basic/gncpy.dynamics.basic.ClohessyWiltshireOrbit", "_autosummary/gncpy/dynamics/basic/gncpy.dynamics.basic.ClohessyWiltshireOrbit2d", "_autosummary/gncpy/dynamics/basic/gncpy.dynamics.basic.CoordinatedTurnKnown", "_autosummary/gncpy/dynamics/basic/gncpy.dynamics.basic.CoordinatedTurnUnknown", "_autosummary/gncpy/dynamics/basic/gncpy.dynamics.basic.CurvilinearMotion", "_autosummary/gncpy/dynamics/basic/gncpy.dynamics.basic.DoubleIntegrator", "_autosummary/gncpy/dynamics/basic/gncpy.dynamics.basic.DynamicsBase", "_autosummary/gncpy/dynamics/basic/gncpy.dynamics.basic.IRobotCreate", "_autosummary/gncpy/dynamics/basic/gncpy.dynamics.basic.KarlgaardOrbit", "_autosummary/gncpy/dynamics/basic/gncpy.dynamics.basic.LinearDynamicsBase", "_autosummary/gncpy/dynamics/basic/gncpy.dynamics.basic.NonlinearDynamicsBase", "_autosummary/gncpy/dynamics/basic/gncpy.dynamics.basic.TschaunerHempelOrbit", "_autosummary/gncpy/dynamics/gncpy.dynamics.aircraft", "_autosummary/gncpy/dynamics/gncpy.dynamics.basic", "_autosummary/gncpy/errors/gncpy.errors.ExtremeMeasurementNoiseError", "_autosummary/gncpy/errors/gncpy.errors.ParticleDepletionError", "_autosummary/gncpy/errors/gncpy.errors.ParticleEstimationDomainError", "_autosummary/gncpy/filters/bayes_filter/gncpy.filters.bayes_filter.BayesFilter", "_autosummary/gncpy/filters/bootstrap_filter/gncpy.filters.bootstrap_filter.BootstrapFilter", "_autosummary/gncpy/filters/ekf_gaussian_scale_mixture_filter/gncpy.filters.ekf_gaussian_scale_mixture_filter.EKFGaussianScaleMixtureFilter", "_autosummary/gncpy/filters/extended_kalman_filter/gncpy.filters.extended_kalman_filter.ExtendedKalmanFilter", "_autosummary/gncpy/filters/gci_filter/gncpy.filters.gci_filter.GCIFilter", "_autosummary/gncpy/filters/gncpy.filters.bayes_filter", "_autosummary/gncpy/filters/gncpy.filters.bootstrap_filter", "_autosummary/gncpy/filters/gncpy.filters.ekf_gaussian_scale_mixture_filter", "_autosummary/gncpy/filters/gncpy.filters.extended_kalman_filter", "_autosummary/gncpy/filters/gncpy.filters.gci_filter", "_autosummary/gncpy/filters/gncpy.filters.gsm_filter_base", "_autosummary/gncpy/filters/gncpy.filters.imm_gci_filter", "_autosummary/gncpy/filters/gncpy.filters.interacting_multiple_model", "_autosummary/gncpy/filters/gncpy.filters.kalman_filter", "_autosummary/gncpy/filters/gncpy.filters.kf_gaussian_scale_mixture_filter", "_autosummary/gncpy/filters/gncpy.filters.max_corr_ent_ukf", "_autosummary/gncpy/filters/gncpy.filters.max_corr_ent_upf", "_autosummary/gncpy/filters/gncpy.filters.mcmc_particle_filter_base", "_autosummary/gncpy/filters/gncpy.filters.particle_filter", "_autosummary/gncpy/filters/gncpy.filters.qkf_gaussian_scale_mixture_filter", "_autosummary/gncpy/filters/gncpy.filters.quadrature_kalman_filter", "_autosummary/gncpy/filters/gncpy.filters.sqkf_gaussian_scale_mixture_filter", "_autosummary/gncpy/filters/gncpy.filters.square_root_qkf", "_autosummary/gncpy/filters/gncpy.filters.students_t_filter", "_autosummary/gncpy/filters/gncpy.filters.ukf_gaussian_scale_mixture_filter", "_autosummary/gncpy/filters/gncpy.filters.unscented_kalman_filter", "_autosummary/gncpy/filters/gncpy.filters.unscented_particle_filter", "_autosummary/gncpy/filters/gsm_filter_base/gncpy.filters.gsm_filter_base.GSMFilterBase", "_autosummary/gncpy/filters/imm_gci_filter/gncpy.filters.imm_gci_filter.IMMGCIFilter", "_autosummary/gncpy/filters/interacting_multiple_model/gncpy.filters.interacting_multiple_model.InteractingMultipleModel", "_autosummary/gncpy/filters/kalman_filter/gncpy.filters.kalman_filter.KalmanFilter", "_autosummary/gncpy/filters/kf_gaussian_scale_mixture_filter/gncpy.filters.kf_gaussian_scale_mixture_filter.KFGaussianScaleMixtureFilter", "_autosummary/gncpy/filters/max_corr_ent_ukf/gncpy.filters.max_corr_ent_ukf.MaxCorrEntUKF", "_autosummary/gncpy/filters/max_corr_ent_upf/gncpy.filters.max_corr_ent_upf.MaxCorrEntUPF", "_autosummary/gncpy/filters/mcmc_particle_filter_base/gncpy.filters.mcmc_particle_filter_base.MCMCParticleFilterBase", "_autosummary/gncpy/filters/particle_filter/gncpy.filters.particle_filter.ParticleFilter", "_autosummary/gncpy/filters/qkf_gaussian_scale_mixture_filter/gncpy.filters.qkf_gaussian_scale_mixture_filter.QKFGaussianScaleMixtureFilter", "_autosummary/gncpy/filters/quadrature_kalman_filter/gncpy.filters.quadrature_kalman_filter.QuadratureKalmanFilter", "_autosummary/gncpy/filters/sqkf_gaussian_scale_mixture_filter/gncpy.filters.sqkf_gaussian_scale_mixture_filter.SQKFGaussianScaleMixtureFilter", "_autosummary/gncpy/filters/square_root_qkf/gncpy.filters.square_root_qkf.SquareRootQKF", "_autosummary/gncpy/filters/students_t_filter/gncpy.filters.students_t_filter.StudentsTFilter", "_autosummary/gncpy/filters/ukf_gaussian_scale_mixture_filter/gncpy.filters.ukf_gaussian_scale_mixture_filter.UKFGaussianScaleMixtureFilter", "_autosummary/gncpy/filters/unscented_kalman_filter/gncpy.filters.unscented_kalman_filter.UnscentedKalmanFilter", "_autosummary/gncpy/filters/unscented_particle_filter/gncpy.filters.unscented_particle_filter.UnscentedParticleFilter", "_autosummary/gncpy/game_engine/base_game/gncpy.game_engine.base_game.Base2dParams", "_autosummary/gncpy/game_engine/base_game/gncpy.game_engine.base_game.BaseGame", "_autosummary/gncpy/game_engine/base_game/gncpy.game_engine.base_game.BaseGame2d", "_autosummary/gncpy/game_engine/base_game/gncpy.game_engine.base_game.BaseParams", "_autosummary/gncpy/game_engine/base_game/gncpy.game_engine.base_game.WindowParams", "_autosummary/gncpy/game_engine/base_game/gncpy.game_engine.base_game.ndarray_representer", "_autosummary/gncpy/game_engine/base_game/gncpy.game_engine.base_game.yaml", "_autosummary/gncpy/game_engine/components/gncpy.game_engine.components.CBirth", "_autosummary/gncpy/game_engine/components/gncpy.game_engine.components.CCapabilities", "_autosummary/gncpy/game_engine/components/gncpy.game_engine.components.CCollision", "_autosummary/gncpy/game_engine/components/gncpy.game_engine.components.CDynamics", "_autosummary/gncpy/game_engine/components/gncpy.game_engine.components.CEvents", "_autosummary/gncpy/game_engine/components/gncpy.game_engine.components.CHazard", "_autosummary/gncpy/game_engine/components/gncpy.game_engine.components.CPriority", "_autosummary/gncpy/game_engine/components/gncpy.game_engine.components.CShape", "_autosummary/gncpy/game_engine/components/gncpy.game_engine.components.CTransform", "_autosummary/gncpy/game_engine/components/gncpy.game_engine.components.library_asset_dir", "_autosummary/gncpy/game_engine/entities/gncpy.game_engine.entities.Entity", "_autosummary/gncpy/game_engine/entities/gncpy.game_engine.entities.EntityManager", "_autosummary/gncpy/game_engine/gncpy.game_engine.base_game", "_autosummary/gncpy/game_engine/gncpy.game_engine.components", "_autosummary/gncpy/game_engine/gncpy.game_engine.entities", "_autosummary/gncpy/game_engine/gncpy.game_engine.physics2d", "_autosummary/gncpy/game_engine/gncpy.game_engine.rendering2d", "_autosummary/gncpy/game_engine/physics2d/gncpy.game_engine.physics2d.Collision2dParams", "_autosummary/gncpy/game_engine/physics2d/gncpy.game_engine.physics2d.Physics2dParams", "_autosummary/gncpy/game_engine/physics2d/gncpy.game_engine.physics2d.check_collision2d", "_autosummary/gncpy/game_engine/physics2d/gncpy.game_engine.physics2d.clamp_window_bounds2d", "_autosummary/gncpy/game_engine/physics2d/gncpy.game_engine.physics2d.dist_to_pixels", "_autosummary/gncpy/game_engine/physics2d/gncpy.game_engine.physics2d.pixels_to_dist", "_autosummary/gncpy/game_engine/physics2d/gncpy.game_engine.physics2d.resolve_collision2d", "_autosummary/gncpy/game_engine/rendering2d/gncpy.game_engine.rendering2d.Shape2dParams", "_autosummary/gncpy/game_engine/rendering2d/gncpy.game_engine.rendering2d.get_drawable_entities", "_autosummary/gncpy/game_engine/rendering2d/gncpy.game_engine.rendering2d.init_rendering_system", "_autosummary/gncpy/game_engine/rendering2d/gncpy.game_engine.rendering2d.init_window", "_autosummary/gncpy/game_engine/rendering2d/gncpy.game_engine.rendering2d.render", "_autosummary/gncpy/game_engine/rendering2d/gncpy.game_engine.rendering2d.shutdown", "_autosummary/gncpy/games/SimpleUAV2d/gncpy.games.SimpleUAV2d.BirthModelParams", "_autosummary/gncpy/games/SimpleUAV2d/gncpy.games.SimpleUAV2d.ControlModelParams", "_autosummary/gncpy/games/SimpleUAV2d/gncpy.games.SimpleUAV2d.DynamicsParams", "_autosummary/gncpy/games/SimpleUAV2d/gncpy.games.SimpleUAV2d.EventType", "_autosummary/gncpy/games/SimpleUAV2d/gncpy.games.SimpleUAV2d.HazardParams", "_autosummary/gncpy/games/SimpleUAV2d/gncpy.games.SimpleUAV2d.ObstacleParams", "_autosummary/gncpy/games/SimpleUAV2d/gncpy.games.SimpleUAV2d.Params", "_autosummary/gncpy/games/SimpleUAV2d/gncpy.games.SimpleUAV2d.PlayerParams", "_autosummary/gncpy/games/SimpleUAV2d/gncpy.games.SimpleUAV2d.ScoreParams", "_autosummary/gncpy/games/SimpleUAV2d/gncpy.games.SimpleUAV2d.SimpleUAV2d", "_autosummary/gncpy/games/SimpleUAV2d/gncpy.games.SimpleUAV2d.StateConstraintParams", "_autosummary/gncpy/games/SimpleUAV2d/gncpy.games.SimpleUAV2d.TargetParams", "_autosummary/gncpy/games/gncpy.games.SimpleUAV2d", "_autosummary/gncpy/gncpy.control", "_autosummary/gncpy/gncpy.coordinate_transforms", "_autosummary/gncpy/gncpy.data_fusion", "_autosummary/gncpy/gncpy.distributions", "_autosummary/gncpy/gncpy.dynamics", "_autosummary/gncpy/gncpy.errors", "_autosummary/gncpy/gncpy.filters", "_autosummary/gncpy/gncpy.game_engine", "_autosummary/gncpy/gncpy.games", "_autosummary/gncpy/gncpy.math", "_autosummary/gncpy/gncpy.measurements", "_autosummary/gncpy/gncpy.orbital_mechanics", "_autosummary/gncpy/gncpy.planning", "_autosummary/gncpy/gncpy.plotting", "_autosummary/gncpy/gncpy.sampling", "_autosummary/gncpy/gncpy.utilities", "_autosummary/gncpy/gncpy.wgs84", "_autosummary/gncpy/math/gncpy.math.epanechnikov_kernel", "_autosummary/gncpy/math/gncpy.math.gamma_fnc", "_autosummary/gncpy/math/gncpy.math.gaussian_kernel", "_autosummary/gncpy/math/gncpy.math.get_elem_sym_fnc", "_autosummary/gncpy/math/gncpy.math.get_hessian", "_autosummary/gncpy/math/gncpy.math.get_input_jacobian", "_autosummary/gncpy/math/gncpy.math.get_jacobian", "_autosummary/gncpy/math/gncpy.math.get_state_jacobian", "_autosummary/gncpy/math/gncpy.math.log_sum_exp", "_autosummary/gncpy/math/gncpy.math.rk4", "_autosummary/gncpy/math/gncpy.math.rk4_backward", "_autosummary/gncpy/math/gncpy.math.weighted_sum_mat", "_autosummary/gncpy/math/gncpy.math.weighted_sum_vec", "_autosummary/gncpy/orbital_mechanics/gncpy.orbital_mechanics.correct_lon_ascend", "_autosummary/gncpy/orbital_mechanics/gncpy.orbital_mechanics.ecc_anom_from_mean", "_autosummary/gncpy/orbital_mechanics/gncpy.orbital_mechanics.ecef_from_orbit", "_autosummary/gncpy/orbital_mechanics/gncpy.orbital_mechanics.true_anom_from_ecc", "_autosummary/gncpy/planning/a_star/gncpy.planning.a_star.AStar", "_autosummary/gncpy/planning/a_star/gncpy.planning.a_star.Node", "_autosummary/gncpy/planning/gncpy.planning.a_star", "_autosummary/gncpy/planning/gncpy.planning.reinforcement_learning", "_autosummary/gncpy/planning/gncpy.planning.rrt_star", "_autosummary/gncpy/planning/reinforcement_learning/envs/gncpy.planning.reinforcement_learning.envs.simple2d", "_autosummary/gncpy/planning/reinforcement_learning/envs/simple2d/gncpy.planning.reinforcement_learning.envs.simple2d.simpleUAV2d", "_autosummary/gncpy/planning/reinforcement_learning/envs/simple2d/simpleUAV2d/gncpy.planning.reinforcement_learning.envs.simple2d.simpleUAV2d.SimpleUAV2d", "_autosummary/gncpy/planning/reinforcement_learning/envs/simple2d/simpleUAV2d/gncpy.planning.reinforcement_learning.envs.simple2d.simpleUAV2d.SimpleUAVHazards2d", "_autosummary/gncpy/planning/reinforcement_learning/gncpy.planning.reinforcement_learning.envs", "_autosummary/gncpy/planning/reinforcement_learning/gncpy.planning.reinforcement_learning.wrappers", "_autosummary/gncpy/planning/reinforcement_learning/wrappers/gncpy.planning.reinforcement_learning.wrappers.BufferFames", "_autosummary/gncpy/planning/reinforcement_learning/wrappers/gncpy.planning.reinforcement_learning.wrappers.GrayScaleObservation", "_autosummary/gncpy/planning/reinforcement_learning/wrappers/gncpy.planning.reinforcement_learning.wrappers.MaxFrames", "_autosummary/gncpy/planning/reinforcement_learning/wrappers/gncpy.planning.reinforcement_learning.wrappers.ResizeImage", "_autosummary/gncpy/planning/reinforcement_learning/wrappers/gncpy.planning.reinforcement_learning.wrappers.SkipFrames", "_autosummary/gncpy/planning/reinforcement_learning/wrappers/gncpy.planning.reinforcement_learning.wrappers.StackFrames", "_autosummary/gncpy/planning/rrt_star/gncpy.planning.rrt_star.ExtendedLQRRRTStar", "_autosummary/gncpy/planning/rrt_star/gncpy.planning.rrt_star.LQRRRTStar", "_autosummary/gncpy/planning/rrt_star/gncpy.planning.rrt_star.Node", "_autosummary/gncpy/plotting/gncpy.plotting.calc_error_ellipse", "_autosummary/gncpy/plotting/gncpy.plotting.get_cmap", "_autosummary/gncpy/plotting/gncpy.plotting.init_plotting_opts", "_autosummary/gncpy/plotting/gncpy.plotting.set_title_label", "_autosummary/gncpy/sampling/gncpy.sampling.MetropolisHastings", "_autosummary/gncpy/utilities/gncpy.utilities.ClassPropertyDescriptor", "_autosummary/gncpy/utilities/gncpy.utilities.ClassPropertyMetaClass", "_autosummary/gncpy/utilities/gncpy.utilities.classproperty", "_autosummary/gncpy/wgs84/gncpy.wgs84.calc_earth_rate", "_autosummary/gncpy/wgs84/gncpy.wgs84.calc_ew_rad", "_autosummary/gncpy/wgs84/gncpy.wgs84.calc_gravity", "_autosummary/gncpy/wgs84/gncpy.wgs84.calc_ns_rad", "_autosummary/gncpy/wgs84/gncpy.wgs84.calc_transport_rate", "_autosummary/gncpy/wgs84/gncpy.wgs84.convert_msl_to_wgs", "_autosummary/gncpy/wgs84/gncpy.wgs84.convert_wgs_to_msl", "_autosummary/gncpy/wgs84/gncpy.wgs84.init_egm_lookup_table", "api", "cicd", "index", "license", "toolchain", "usage", "usage/a_star", "usage/control", "usage/filters", "usage/planning", "usage/rrtstar"], "filenames": ["References.rst", "_autosummary/gncpy.rst", "_autosummary/gncpy/control/gncpy.control.ELQR.rst", "_autosummary/gncpy/control/gncpy.control.LQR.rst", "_autosummary/gncpy/coordinate_transforms/gncpy.coordinate_transforms.ecef_to_LLA.rst", "_autosummary/gncpy/coordinate_transforms/gncpy.coordinate_transforms.ecef_to_NED.rst", "_autosummary/gncpy/coordinate_transforms/gncpy.coordinate_transforms.lla_to_ECEF.rst", "_autosummary/gncpy/coordinate_transforms/gncpy.coordinate_transforms.lla_to_NED.rst", "_autosummary/gncpy/coordinate_transforms/gncpy.coordinate_transforms.ned_to_LLA.rst", "_autosummary/gncpy/data_fusion/gncpy.data_fusion.GeneralizedCovarianceIntersection.rst", "_autosummary/gncpy/distributions/gncpy.distributions.Particle.rst", "_autosummary/gncpy/distributions/gncpy.distributions.ParticleDistribution.rst", "_autosummary/gncpy/distributions/gncpy.distributions.QuadraturePoints.rst", "_autosummary/gncpy/distributions/gncpy.distributions.SigmaPoints.rst", "_autosummary/gncpy/distributions/gncpy.distributions.SimpleParticleDistribution.rst", "_autosummary/gncpy/dynamics/aircraft/gncpy.dynamics.aircraft.simple_multirotor.rst", "_autosummary/gncpy/dynamics/aircraft/simple_multirotor/gncpy.dynamics.aircraft.simple_multirotor.AeroParams.rst", "_autosummary/gncpy/dynamics/aircraft/simple_multirotor/gncpy.dynamics.aircraft.simple_multirotor.AircraftParams.rst", "_autosummary/gncpy/dynamics/aircraft/simple_multirotor/gncpy.dynamics.aircraft.simple_multirotor.Effector.rst", "_autosummary/gncpy/dynamics/aircraft/simple_multirotor/gncpy.dynamics.aircraft.simple_multirotor.Environment.rst", "_autosummary/gncpy/dynamics/aircraft/simple_multirotor/gncpy.dynamics.aircraft.simple_multirotor.GeoParams.rst", "_autosummary/gncpy/dynamics/aircraft/simple_multirotor/gncpy.dynamics.aircraft.simple_multirotor.MassParams.rst", "_autosummary/gncpy/dynamics/aircraft/simple_multirotor/gncpy.dynamics.aircraft.simple_multirotor.MotorParams.rst", "_autosummary/gncpy/dynamics/aircraft/simple_multirotor/gncpy.dynamics.aircraft.simple_multirotor.PropParams.rst", "_autosummary/gncpy/dynamics/aircraft/simple_multirotor/gncpy.dynamics.aircraft.simple_multirotor.SimpleMultirotor.rst", "_autosummary/gncpy/dynamics/aircraft/simple_multirotor/gncpy.dynamics.aircraft.simple_multirotor.Vehicle.rst", "_autosummary/gncpy/dynamics/basic/gncpy.dynamics.basic.ClohessyWiltshireOrbit.rst", "_autosummary/gncpy/dynamics/basic/gncpy.dynamics.basic.ClohessyWiltshireOrbit2d.rst", "_autosummary/gncpy/dynamics/basic/gncpy.dynamics.basic.CoordinatedTurnKnown.rst", "_autosummary/gncpy/dynamics/basic/gncpy.dynamics.basic.CoordinatedTurnUnknown.rst", "_autosummary/gncpy/dynamics/basic/gncpy.dynamics.basic.CurvilinearMotion.rst", "_autosummary/gncpy/dynamics/basic/gncpy.dynamics.basic.DoubleIntegrator.rst", "_autosummary/gncpy/dynamics/basic/gncpy.dynamics.basic.DynamicsBase.rst", "_autosummary/gncpy/dynamics/basic/gncpy.dynamics.basic.IRobotCreate.rst", "_autosummary/gncpy/dynamics/basic/gncpy.dynamics.basic.KarlgaardOrbit.rst", "_autosummary/gncpy/dynamics/basic/gncpy.dynamics.basic.LinearDynamicsBase.rst", "_autosummary/gncpy/dynamics/basic/gncpy.dynamics.basic.NonlinearDynamicsBase.rst", "_autosummary/gncpy/dynamics/basic/gncpy.dynamics.basic.TschaunerHempelOrbit.rst", "_autosummary/gncpy/dynamics/gncpy.dynamics.aircraft.rst", "_autosummary/gncpy/dynamics/gncpy.dynamics.basic.rst", "_autosummary/gncpy/errors/gncpy.errors.ExtremeMeasurementNoiseError.rst", "_autosummary/gncpy/errors/gncpy.errors.ParticleDepletionError.rst", "_autosummary/gncpy/errors/gncpy.errors.ParticleEstimationDomainError.rst", "_autosummary/gncpy/filters/bayes_filter/gncpy.filters.bayes_filter.BayesFilter.rst", "_autosummary/gncpy/filters/bootstrap_filter/gncpy.filters.bootstrap_filter.BootstrapFilter.rst", "_autosummary/gncpy/filters/ekf_gaussian_scale_mixture_filter/gncpy.filters.ekf_gaussian_scale_mixture_filter.EKFGaussianScaleMixtureFilter.rst", "_autosummary/gncpy/filters/extended_kalman_filter/gncpy.filters.extended_kalman_filter.ExtendedKalmanFilter.rst", "_autosummary/gncpy/filters/gci_filter/gncpy.filters.gci_filter.GCIFilter.rst", "_autosummary/gncpy/filters/gncpy.filters.bayes_filter.rst", "_autosummary/gncpy/filters/gncpy.filters.bootstrap_filter.rst", "_autosummary/gncpy/filters/gncpy.filters.ekf_gaussian_scale_mixture_filter.rst", "_autosummary/gncpy/filters/gncpy.filters.extended_kalman_filter.rst", "_autosummary/gncpy/filters/gncpy.filters.gci_filter.rst", "_autosummary/gncpy/filters/gncpy.filters.gsm_filter_base.rst", "_autosummary/gncpy/filters/gncpy.filters.imm_gci_filter.rst", "_autosummary/gncpy/filters/gncpy.filters.interacting_multiple_model.rst", "_autosummary/gncpy/filters/gncpy.filters.kalman_filter.rst", "_autosummary/gncpy/filters/gncpy.filters.kf_gaussian_scale_mixture_filter.rst", "_autosummary/gncpy/filters/gncpy.filters.max_corr_ent_ukf.rst", "_autosummary/gncpy/filters/gncpy.filters.max_corr_ent_upf.rst", "_autosummary/gncpy/filters/gncpy.filters.mcmc_particle_filter_base.rst", "_autosummary/gncpy/filters/gncpy.filters.particle_filter.rst", "_autosummary/gncpy/filters/gncpy.filters.qkf_gaussian_scale_mixture_filter.rst", "_autosummary/gncpy/filters/gncpy.filters.quadrature_kalman_filter.rst", "_autosummary/gncpy/filters/gncpy.filters.sqkf_gaussian_scale_mixture_filter.rst", "_autosummary/gncpy/filters/gncpy.filters.square_root_qkf.rst", "_autosummary/gncpy/filters/gncpy.filters.students_t_filter.rst", "_autosummary/gncpy/filters/gncpy.filters.ukf_gaussian_scale_mixture_filter.rst", "_autosummary/gncpy/filters/gncpy.filters.unscented_kalman_filter.rst", "_autosummary/gncpy/filters/gncpy.filters.unscented_particle_filter.rst", "_autosummary/gncpy/filters/gsm_filter_base/gncpy.filters.gsm_filter_base.GSMFilterBase.rst", "_autosummary/gncpy/filters/imm_gci_filter/gncpy.filters.imm_gci_filter.IMMGCIFilter.rst", "_autosummary/gncpy/filters/interacting_multiple_model/gncpy.filters.interacting_multiple_model.InteractingMultipleModel.rst", "_autosummary/gncpy/filters/kalman_filter/gncpy.filters.kalman_filter.KalmanFilter.rst", "_autosummary/gncpy/filters/kf_gaussian_scale_mixture_filter/gncpy.filters.kf_gaussian_scale_mixture_filter.KFGaussianScaleMixtureFilter.rst", "_autosummary/gncpy/filters/max_corr_ent_ukf/gncpy.filters.max_corr_ent_ukf.MaxCorrEntUKF.rst", "_autosummary/gncpy/filters/max_corr_ent_upf/gncpy.filters.max_corr_ent_upf.MaxCorrEntUPF.rst", "_autosummary/gncpy/filters/mcmc_particle_filter_base/gncpy.filters.mcmc_particle_filter_base.MCMCParticleFilterBase.rst", "_autosummary/gncpy/filters/particle_filter/gncpy.filters.particle_filter.ParticleFilter.rst", "_autosummary/gncpy/filters/qkf_gaussian_scale_mixture_filter/gncpy.filters.qkf_gaussian_scale_mixture_filter.QKFGaussianScaleMixtureFilter.rst", "_autosummary/gncpy/filters/quadrature_kalman_filter/gncpy.filters.quadrature_kalman_filter.QuadratureKalmanFilter.rst", "_autosummary/gncpy/filters/sqkf_gaussian_scale_mixture_filter/gncpy.filters.sqkf_gaussian_scale_mixture_filter.SQKFGaussianScaleMixtureFilter.rst", "_autosummary/gncpy/filters/square_root_qkf/gncpy.filters.square_root_qkf.SquareRootQKF.rst", "_autosummary/gncpy/filters/students_t_filter/gncpy.filters.students_t_filter.StudentsTFilter.rst", "_autosummary/gncpy/filters/ukf_gaussian_scale_mixture_filter/gncpy.filters.ukf_gaussian_scale_mixture_filter.UKFGaussianScaleMixtureFilter.rst", "_autosummary/gncpy/filters/unscented_kalman_filter/gncpy.filters.unscented_kalman_filter.UnscentedKalmanFilter.rst", "_autosummary/gncpy/filters/unscented_particle_filter/gncpy.filters.unscented_particle_filter.UnscentedParticleFilter.rst", "_autosummary/gncpy/game_engine/base_game/gncpy.game_engine.base_game.Base2dParams.rst", "_autosummary/gncpy/game_engine/base_game/gncpy.game_engine.base_game.BaseGame.rst", "_autosummary/gncpy/game_engine/base_game/gncpy.game_engine.base_game.BaseGame2d.rst", "_autosummary/gncpy/game_engine/base_game/gncpy.game_engine.base_game.BaseParams.rst", "_autosummary/gncpy/game_engine/base_game/gncpy.game_engine.base_game.WindowParams.rst", "_autosummary/gncpy/game_engine/base_game/gncpy.game_engine.base_game.ndarray_representer.rst", "_autosummary/gncpy/game_engine/base_game/gncpy.game_engine.base_game.yaml.rst", "_autosummary/gncpy/game_engine/components/gncpy.game_engine.components.CBirth.rst", "_autosummary/gncpy/game_engine/components/gncpy.game_engine.components.CCapabilities.rst", "_autosummary/gncpy/game_engine/components/gncpy.game_engine.components.CCollision.rst", "_autosummary/gncpy/game_engine/components/gncpy.game_engine.components.CDynamics.rst", "_autosummary/gncpy/game_engine/components/gncpy.game_engine.components.CEvents.rst", "_autosummary/gncpy/game_engine/components/gncpy.game_engine.components.CHazard.rst", "_autosummary/gncpy/game_engine/components/gncpy.game_engine.components.CPriority.rst", "_autosummary/gncpy/game_engine/components/gncpy.game_engine.components.CShape.rst", "_autosummary/gncpy/game_engine/components/gncpy.game_engine.components.CTransform.rst", "_autosummary/gncpy/game_engine/components/gncpy.game_engine.components.library_asset_dir.rst", "_autosummary/gncpy/game_engine/entities/gncpy.game_engine.entities.Entity.rst", "_autosummary/gncpy/game_engine/entities/gncpy.game_engine.entities.EntityManager.rst", "_autosummary/gncpy/game_engine/gncpy.game_engine.base_game.rst", "_autosummary/gncpy/game_engine/gncpy.game_engine.components.rst", "_autosummary/gncpy/game_engine/gncpy.game_engine.entities.rst", "_autosummary/gncpy/game_engine/gncpy.game_engine.physics2d.rst", "_autosummary/gncpy/game_engine/gncpy.game_engine.rendering2d.rst", "_autosummary/gncpy/game_engine/physics2d/gncpy.game_engine.physics2d.Collision2dParams.rst", "_autosummary/gncpy/game_engine/physics2d/gncpy.game_engine.physics2d.Physics2dParams.rst", "_autosummary/gncpy/game_engine/physics2d/gncpy.game_engine.physics2d.check_collision2d.rst", "_autosummary/gncpy/game_engine/physics2d/gncpy.game_engine.physics2d.clamp_window_bounds2d.rst", "_autosummary/gncpy/game_engine/physics2d/gncpy.game_engine.physics2d.dist_to_pixels.rst", "_autosummary/gncpy/game_engine/physics2d/gncpy.game_engine.physics2d.pixels_to_dist.rst", "_autosummary/gncpy/game_engine/physics2d/gncpy.game_engine.physics2d.resolve_collision2d.rst", "_autosummary/gncpy/game_engine/rendering2d/gncpy.game_engine.rendering2d.Shape2dParams.rst", "_autosummary/gncpy/game_engine/rendering2d/gncpy.game_engine.rendering2d.get_drawable_entities.rst", "_autosummary/gncpy/game_engine/rendering2d/gncpy.game_engine.rendering2d.init_rendering_system.rst", "_autosummary/gncpy/game_engine/rendering2d/gncpy.game_engine.rendering2d.init_window.rst", "_autosummary/gncpy/game_engine/rendering2d/gncpy.game_engine.rendering2d.render.rst", "_autosummary/gncpy/game_engine/rendering2d/gncpy.game_engine.rendering2d.shutdown.rst", "_autosummary/gncpy/games/SimpleUAV2d/gncpy.games.SimpleUAV2d.BirthModelParams.rst", "_autosummary/gncpy/games/SimpleUAV2d/gncpy.games.SimpleUAV2d.ControlModelParams.rst", "_autosummary/gncpy/games/SimpleUAV2d/gncpy.games.SimpleUAV2d.DynamicsParams.rst", "_autosummary/gncpy/games/SimpleUAV2d/gncpy.games.SimpleUAV2d.EventType.rst", "_autosummary/gncpy/games/SimpleUAV2d/gncpy.games.SimpleUAV2d.HazardParams.rst", "_autosummary/gncpy/games/SimpleUAV2d/gncpy.games.SimpleUAV2d.ObstacleParams.rst", "_autosummary/gncpy/games/SimpleUAV2d/gncpy.games.SimpleUAV2d.Params.rst", "_autosummary/gncpy/games/SimpleUAV2d/gncpy.games.SimpleUAV2d.PlayerParams.rst", "_autosummary/gncpy/games/SimpleUAV2d/gncpy.games.SimpleUAV2d.ScoreParams.rst", "_autosummary/gncpy/games/SimpleUAV2d/gncpy.games.SimpleUAV2d.SimpleUAV2d.rst", "_autosummary/gncpy/games/SimpleUAV2d/gncpy.games.SimpleUAV2d.StateConstraintParams.rst", "_autosummary/gncpy/games/SimpleUAV2d/gncpy.games.SimpleUAV2d.TargetParams.rst", "_autosummary/gncpy/games/gncpy.games.SimpleUAV2d.rst", "_autosummary/gncpy/gncpy.control.rst", "_autosummary/gncpy/gncpy.coordinate_transforms.rst", "_autosummary/gncpy/gncpy.data_fusion.rst", "_autosummary/gncpy/gncpy.distributions.rst", "_autosummary/gncpy/gncpy.dynamics.rst", "_autosummary/gncpy/gncpy.errors.rst", "_autosummary/gncpy/gncpy.filters.rst", "_autosummary/gncpy/gncpy.game_engine.rst", "_autosummary/gncpy/gncpy.games.rst", "_autosummary/gncpy/gncpy.math.rst", "_autosummary/gncpy/gncpy.measurements.rst", "_autosummary/gncpy/gncpy.orbital_mechanics.rst", "_autosummary/gncpy/gncpy.planning.rst", "_autosummary/gncpy/gncpy.plotting.rst", "_autosummary/gncpy/gncpy.sampling.rst", "_autosummary/gncpy/gncpy.utilities.rst", "_autosummary/gncpy/gncpy.wgs84.rst", "_autosummary/gncpy/math/gncpy.math.epanechnikov_kernel.rst", "_autosummary/gncpy/math/gncpy.math.gamma_fnc.rst", "_autosummary/gncpy/math/gncpy.math.gaussian_kernel.rst", "_autosummary/gncpy/math/gncpy.math.get_elem_sym_fnc.rst", "_autosummary/gncpy/math/gncpy.math.get_hessian.rst", "_autosummary/gncpy/math/gncpy.math.get_input_jacobian.rst", "_autosummary/gncpy/math/gncpy.math.get_jacobian.rst", "_autosummary/gncpy/math/gncpy.math.get_state_jacobian.rst", "_autosummary/gncpy/math/gncpy.math.log_sum_exp.rst", "_autosummary/gncpy/math/gncpy.math.rk4.rst", "_autosummary/gncpy/math/gncpy.math.rk4_backward.rst", "_autosummary/gncpy/math/gncpy.math.weighted_sum_mat.rst", "_autosummary/gncpy/math/gncpy.math.weighted_sum_vec.rst", "_autosummary/gncpy/orbital_mechanics/gncpy.orbital_mechanics.correct_lon_ascend.rst", "_autosummary/gncpy/orbital_mechanics/gncpy.orbital_mechanics.ecc_anom_from_mean.rst", "_autosummary/gncpy/orbital_mechanics/gncpy.orbital_mechanics.ecef_from_orbit.rst", "_autosummary/gncpy/orbital_mechanics/gncpy.orbital_mechanics.true_anom_from_ecc.rst", "_autosummary/gncpy/planning/a_star/gncpy.planning.a_star.AStar.rst", "_autosummary/gncpy/planning/a_star/gncpy.planning.a_star.Node.rst", "_autosummary/gncpy/planning/gncpy.planning.a_star.rst", "_autosummary/gncpy/planning/gncpy.planning.reinforcement_learning.rst", "_autosummary/gncpy/planning/gncpy.planning.rrt_star.rst", "_autosummary/gncpy/planning/reinforcement_learning/envs/gncpy.planning.reinforcement_learning.envs.simple2d.rst", "_autosummary/gncpy/planning/reinforcement_learning/envs/simple2d/gncpy.planning.reinforcement_learning.envs.simple2d.simpleUAV2d.rst", "_autosummary/gncpy/planning/reinforcement_learning/envs/simple2d/simpleUAV2d/gncpy.planning.reinforcement_learning.envs.simple2d.simpleUAV2d.SimpleUAV2d.rst", "_autosummary/gncpy/planning/reinforcement_learning/envs/simple2d/simpleUAV2d/gncpy.planning.reinforcement_learning.envs.simple2d.simpleUAV2d.SimpleUAVHazards2d.rst", "_autosummary/gncpy/planning/reinforcement_learning/gncpy.planning.reinforcement_learning.envs.rst", "_autosummary/gncpy/planning/reinforcement_learning/gncpy.planning.reinforcement_learning.wrappers.rst", "_autosummary/gncpy/planning/reinforcement_learning/wrappers/gncpy.planning.reinforcement_learning.wrappers.BufferFames.rst", "_autosummary/gncpy/planning/reinforcement_learning/wrappers/gncpy.planning.reinforcement_learning.wrappers.GrayScaleObservation.rst", "_autosummary/gncpy/planning/reinforcement_learning/wrappers/gncpy.planning.reinforcement_learning.wrappers.MaxFrames.rst", "_autosummary/gncpy/planning/reinforcement_learning/wrappers/gncpy.planning.reinforcement_learning.wrappers.ResizeImage.rst", "_autosummary/gncpy/planning/reinforcement_learning/wrappers/gncpy.planning.reinforcement_learning.wrappers.SkipFrames.rst", "_autosummary/gncpy/planning/reinforcement_learning/wrappers/gncpy.planning.reinforcement_learning.wrappers.StackFrames.rst", "_autosummary/gncpy/planning/rrt_star/gncpy.planning.rrt_star.ExtendedLQRRRTStar.rst", "_autosummary/gncpy/planning/rrt_star/gncpy.planning.rrt_star.LQRRRTStar.rst", "_autosummary/gncpy/planning/rrt_star/gncpy.planning.rrt_star.Node.rst", "_autosummary/gncpy/plotting/gncpy.plotting.calc_error_ellipse.rst", "_autosummary/gncpy/plotting/gncpy.plotting.get_cmap.rst", "_autosummary/gncpy/plotting/gncpy.plotting.init_plotting_opts.rst", "_autosummary/gncpy/plotting/gncpy.plotting.set_title_label.rst", "_autosummary/gncpy/sampling/gncpy.sampling.MetropolisHastings.rst", "_autosummary/gncpy/utilities/gncpy.utilities.ClassPropertyDescriptor.rst", "_autosummary/gncpy/utilities/gncpy.utilities.ClassPropertyMetaClass.rst", "_autosummary/gncpy/utilities/gncpy.utilities.classproperty.rst", "_autosummary/gncpy/wgs84/gncpy.wgs84.calc_earth_rate.rst", "_autosummary/gncpy/wgs84/gncpy.wgs84.calc_ew_rad.rst", "_autosummary/gncpy/wgs84/gncpy.wgs84.calc_gravity.rst", "_autosummary/gncpy/wgs84/gncpy.wgs84.calc_ns_rad.rst", "_autosummary/gncpy/wgs84/gncpy.wgs84.calc_transport_rate.rst", "_autosummary/gncpy/wgs84/gncpy.wgs84.convert_msl_to_wgs.rst", "_autosummary/gncpy/wgs84/gncpy.wgs84.convert_wgs_to_msl.rst", "_autosummary/gncpy/wgs84/gncpy.wgs84.init_egm_lookup_table.rst", "api.rst", "cicd.rst", "index.rst", "license.rst", "toolchain.rst", "usage.rst", "usage/a_star.rst", "usage/control.rst", "usage/filters.rst", "usage/planning.rst", "usage/rrtstar.rst"], "titles": ["References", "gncpy", "ELQR", "LQR", "gncpy.coordinate_transforms.ecef_to_LLA", "gncpy.coordinate_transforms.ecef_to_NED", "gncpy.coordinate_transforms.lla_to_ECEF", "gncpy.coordinate_transforms.lla_to_NED", "gncpy.coordinate_transforms.ned_to_LLA", "gncpy.data_fusion.GeneralizedCovarianceIntersection", "Particle", "ParticleDistribution", "QuadraturePoints", "SigmaPoints", "SimpleParticleDistribution", "simple_multirotor", "AeroParams", "AircraftParams", "Effector", "Environment", "GeoParams", "MassParams", "MotorParams", "PropParams", "SimpleMultirotor", "Vehicle", "ClohessyWiltshireOrbit", "ClohessyWiltshireOrbit2d", "CoordinatedTurnKnown", "CoordinatedTurnUnknown", "CurvilinearMotion", "DoubleIntegrator", "DynamicsBase", "IRobotCreate", "KarlgaardOrbit", "LinearDynamicsBase", "NonlinearDynamicsBase", "TschaunerHempelOrbit", "aircraft", "basic", "gncpy.errors.ExtremeMeasurementNoiseError", "gncpy.errors.ParticleDepletionError", "gncpy.errors.ParticleEstimationDomainError", "BayesFilter", "BootstrapFilter", "EKFGaussianScaleMixtureFilter", "ExtendedKalmanFilter", "GCIFilter", "bayes_filter", "bootstrap_filter", "ekf_gaussian_scale_mixture_filter", "extended_kalman_filter", "gci_filter", "gsm_filter_base", "imm_gci_filter", "interacting_multiple_model", "kalman_filter", "kf_gaussian_scale_mixture_filter", "max_corr_ent_ukf", "max_corr_ent_upf", "mcmc_particle_filter_base", "particle_filter", "qkf_gaussian_scale_mixture_filter", "quadrature_kalman_filter", "sqkf_gaussian_scale_mixture_filter", "square_root_qkf", "students_t_filter", "ukf_gaussian_scale_mixture_filter", "unscented_kalman_filter", "unscented_particle_filter", "GSMFilterBase", "IMMGCIFilter", "InteractingMultipleModel", "KalmanFilter", "KFGaussianScaleMixtureFilter", "MaxCorrEntUKF", "MaxCorrEntUPF", "MCMCParticleFilterBase", "ParticleFilter", "QKFGaussianScaleMixtureFilter", "QuadratureKalmanFilter", "SQKFGaussianScaleMixtureFilter", "SquareRootQKF", "StudentsTFilter", "UKFGaussianScaleMixtureFilter", "UnscentedKalmanFilter", "UnscentedParticleFilter", "Base2dParams", "BaseGame", "BaseGame2d", "BaseParams", "WindowParams", "gncpy.game_engine.base_game.ndarray_representer", "gncpy.game_engine.base_game.yaml", "CBirth", "CCapabilities", "CCollision", "CDynamics", "CEvents", "CHazard", "CPriority", "CShape", "CTransform", "gncpy.game_engine.components.library_asset_dir", "Entity", "EntityManager", "base_game", "components", "entities", "physics2d", "rendering2d", "Collision2dParams", "Physics2dParams", "gncpy.game_engine.physics2d.check_collision2d", "gncpy.game_engine.physics2d.clamp_window_bounds2d", "gncpy.game_engine.physics2d.dist_to_pixels", "gncpy.game_engine.physics2d.pixels_to_dist", "gncpy.game_engine.physics2d.resolve_collision2d", "Shape2dParams", "gncpy.game_engine.rendering2d.get_drawable_entities", "gncpy.game_engine.rendering2d.init_rendering_system", "gncpy.game_engine.rendering2d.init_window", "gncpy.game_engine.rendering2d.render", "gncpy.game_engine.rendering2d.shutdown", "BirthModelParams", "ControlModelParams", "DynamicsParams", "EventType", "HazardParams", "ObstacleParams", "Params", "PlayerParams", "ScoreParams", "SimpleUAV2d", "StateConstraintParams", "TargetParams", "SimpleUAV2d", "control", "coordinate_transforms", "data_fusion", "distributions", "dynamics", "errors", "filters", "game_engine", "games", "math", "measurements", "orbital_mechanics", "planning", "plotting", "sampling", "utilities", "wgs84", "gncpy.math.epanechnikov_kernel", "gncpy.math.gamma_fnc", "gncpy.math.gaussian_kernel", "gncpy.math.get_elem_sym_fnc", "gncpy.math.get_hessian", "gncpy.math.get_input_jacobian", "gncpy.math.get_jacobian", "gncpy.math.get_state_jacobian", "gncpy.math.log_sum_exp", "gncpy.math.rk4", "gncpy.math.rk4_backward", "gncpy.math.weighted_sum_mat", "gncpy.math.weighted_sum_vec", "gncpy.orbital_mechanics.correct_lon_ascend", "gncpy.orbital_mechanics.ecc_anom_from_mean", "gncpy.orbital_mechanics.ecef_from_orbit", "gncpy.orbital_mechanics.true_anom_from_ecc", "AStar", "Node", "a_star", "reinforcement_learning", "rrt_star", "simple2d", "simpleUAV2d", "SimpleUAV2d", "SimpleUAVHazards2d", "envs", "wrappers", "BufferFames", "GrayScaleObservation", "MaxFrames", "ResizeImage", "SkipFrames", "StackFrames", "ExtendedLQRRRTStar", "LQRRRTStar", "Node", "gncpy.plotting.calc_error_ellipse", "gncpy.plotting.get_cmap", "gncpy.plotting.init_plotting_opts", "gncpy.plotting.set_title_label", "MetropolisHastings", "ClassPropertyDescriptor", "ClassPropertyMetaClass", "gncpy.utilities.classproperty", "gncpy.wgs84.calc_earth_rate", "gncpy.wgs84.calc_ew_rad", "gncpy.wgs84.calc_gravity", "gncpy.wgs84.calc_ns_rad", "gncpy.wgs84.calc_transport_rate", "gncpy.wgs84.convert_msl_to_wgs", "gncpy.wgs84.convert_wgs_to_msl", "gncpy.wgs84.init_egm_lookup_table", "API Reference", "CI/CD Pipeline", "Welcome to GNCPy\u2019s documentation!", "License", "Toolchain", "Usage", "A* Examples", "Control Examples", "Filter Examples", "Planning Examples", "RRT* Examples"], "terms": {"1": [0, 2, 3, 4, 5, 6, 7, 10, 12, 13, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 44, 45, 46, 70, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 94, 99, 102, 124, 128, 132, 133, 155, 158, 159, 160, 161, 166, 169, 171, 178, 179, 189, 192, 193, 199, 201, 203, 213, 214, 215, 217], "ienkaran": 0, "arasaratnam": 0, "simon": 0, "haykin": 0, "squar": [0, 12, 13, 82, 171, 213], "root": [0, 12, 13, 82, 211], "quadratur": [0, 12, 13, 79, 80, 81, 82], "kalman": [0, 43, 46, 73, 75, 80, 82, 85, 212], "filter": [0, 10, 39, 40, 43, 44, 45, 46, 47, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 141, 209, 212], "ieee": 0, "t": [0, 2, 3, 32, 33, 34, 36, 37, 46, 75, 76, 77, 78, 80, 82, 83, 85, 86, 112, 159, 161, 178, 179, 208, 211, 214, 215], "ransact": 0, "": [0, 2, 3, 12, 24, 25, 28, 31, 36, 37, 45, 46, 70, 73, 74, 75, 76, 79, 80, 81, 82, 83, 84, 85, 86, 133, 178, 179, 182, 184, 187, 189, 197, 203, 208, 211, 215], "ignal": 0, "p": [0, 2, 3, 11, 76, 77, 78, 83, 86, 133, 189, 209, 214, 217], "rocess": 0, "56": 0, "6": [0, 26, 27, 214, 217], "2589": 0, "2593": 0, "jun": 0, "2008": 0, "doi": 0, "10": [0, 37, 75, 160, 168, 178, 189, 193, 213, 214, 215, 217], "1109": 0, "tsp": 0, "2007": 0, "914964": 0, "2": [0, 2, 3, 12, 13, 24, 25, 30, 33, 37, 75, 76, 77, 78, 80, 83, 85, 86, 102, 113, 117, 133, 171, 172, 178, 179, 189, 191, 213, 214, 215, 217], "robert": 0, "j": [0, 2, 3], "elliott": 0, "discret": [0, 2, 3, 26, 27, 28, 31, 32, 35, 46, 73, 75, 80, 82, 83, 85, 189], "time": [0, 2, 3, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 44, 46, 73, 75, 77, 78, 83, 85, 87, 88, 89, 99, 124, 132, 133, 135, 167, 178, 179, 189, 193, 214, 215], "nonlinear": 0, "algorithm": [0, 2, 73, 76, 83, 86, 137, 142, 149, 151, 171, 173, 175, 178, 189, 195, 209, 213, 214, 216, 217], "us": [0, 2, 3, 10, 12, 13, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 44, 45, 46, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 91, 93, 94, 96, 101, 104, 107, 111, 112, 115, 116, 118, 121, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 140, 146, 158, 159, 160, 161, 171, 178, 179, 181, 182, 183, 184, 185, 187, 189, 193, 194, 208, 209, 210, 211, 212, 213, 214, 215, 217], "gauss": [0, 12, 80], "hermit": [0, 12, 80], "proceed": 0, "95": [0, 214, 217], "5": [0, 46, 73, 171, 214, 215, 217], "953": 0, "977": 0, "mai": [0, 24, 40, 43, 44, 45, 70, 71, 72, 74, 79, 81, 84, 88, 89, 90, 112, 131, 137, 208, 211], "jproc": 0, "894705": 0, "3": [0, 4, 5, 6, 7, 25, 28, 29, 37, 83, 89, 168, 169, 171, 185, 189, 199, 201, 203, 211, 214, 215, 217], "samuel": 0, "blackman": 0, "popoli": 0, "design": [0, 39, 208], "analysi": 0, "modern": 0, "track": [0, 3, 25, 85, 193], "system": [0, 2, 3, 30, 32, 73, 83, 87, 88, 89, 112, 120, 124, 130, 132, 133, 208, 211], "artech": 0, "hous": 0, "1999": 0, "isbn": 0, "1580530060": 0, "4": [0, 2, 27, 31, 158, 171, 189, 213, 214, 215, 217], "wh": 0, "clohessi": [0, 26, 27], "r": [0, 2, 3, 76, 86, 214, 215, 217], "wiltshir": [0, 26, 27], "termin": [0, 208, 211], "guidanc": [0, 209], "satellit": 0, "rendezv": 0, "journal": 0, "aerospac": 0, "scienc": 0, "27": [0, 70, 79, 81, 84], "9": [0, 103, 191, 211, 213, 214, 215, 217], "653": 0, "658": 0, "1960": 0, "john": 0, "l": 0, "crassidi": 0, "junkin": 0, "optim": [0, 2, 9, 47, 71], "estim": [0, 40, 42, 44, 45, 46, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 209], "dynam": [0, 2, 3, 15, 25, 28, 32, 33, 34, 35, 36, 37, 39, 46, 71, 72, 73, 75, 77, 78, 80, 82, 83, 85, 88, 89, 97, 125, 126, 131, 133, 212, 215, 216], "chapman": 0, "hall": 0, "crc": 0, "2011": 0, "uri": 0, "desai": 0, "A": [0, 2, 3, 29, 30, 33, 46, 73, 75, 76, 77, 78, 80, 82, 83, 85, 86, 89, 133, 171, 172, 173, 208, 209, 210, 212, 215, 216], "compar": 0, "studi": 0, "model": [0, 2, 3, 15, 19, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 43, 45, 46, 47, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 94, 124, 125, 126, 131, 132, 133, 134, 141, 153, 159, 161, 212, 214], "rel": [0, 19, 24, 25, 86, 135], "motion": [0, 26, 27, 30, 171, 214], "phd": 0, "thesi": 0, "exa": 0, "m": [0, 4, 5, 7, 8, 12, 24, 25, 37, 83, 165, 203, 215], "univers": [0, 209], "2013": 0, "7": [0, 76, 160, 168, 214, 217], "ying": 0, "fan": 0, "yonggang": 0, "zhang": 0, "guoq": 0, "wang": 0, "xiaoyu": 0, "ning": 0, "li": 0, "maximum": [0, 2, 3, 75, 76, 87, 125, 133, 134, 168, 171, 178, 189], "correntropi": [0, 75, 76], "base": [0, 2, 3, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 43, 44, 45, 46, 47, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 111, 112, 118, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 171, 172, 178, 179, 182, 183, 184, 185, 186, 187, 188, 189, 190, 195, 196, 197, 208], "unscent": [0, 75, 76, 85, 86], "particl": [0, 11, 14, 41, 42, 44, 45, 70, 74, 76, 77, 78, 79, 81, 84, 86], "cooper": 0, "navig": [0, 209], "heavi": [0, 83], "tail": [0, 83], "measur": [0, 40, 43, 44, 45, 46, 47, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 191, 193, 215], "nois": [0, 26, 27, 28, 31, 35, 40, 45, 46, 70, 73, 74, 75, 76, 79, 80, 81, 82, 83, 84, 85, 86, 215], "sensor": 0, "18": [0, 215], "3183": 0, "2018": 0, "8": [0, 12, 171, 213, 214, 217], "gene": 0, "h": [0, 46, 75, 77, 78, 80, 82, 85, 89, 96, 101, 163, 164, 185, 213], "golub": 0, "welsch": 0, "calcul": [0, 2, 3, 13, 25, 26, 27, 31, 33, 34, 35, 36, 37, 46, 73, 80, 82, 83, 85, 88, 89, 133, 148, 158, 159, 160, 161, 162, 165, 166, 168, 169, 170, 171, 191, 199, 200, 201, 202, 203, 214], "rule": 0, "athemat": 0, "c": [0, 2, 3, 31, 185, 209, 210, 214], "omput": 0, "23": [0, 37], "106": 0, "221": 0, "1969": 0, "1090": 0, "s0025": 0, "5718": 0, "69": [0, 215], "99647": 0, "wayn": 0, "e": [0, 88, 89, 105, 115, 116, 178, 179, 208, 211], "hoover": 0, "confid": 0, "circl": [0, 214], "ellips": [0, 191], "technic": 0, "report": [0, 209, 211], "nation": 0, "ocean": 0, "atmospher": [0, 25], "administr": 0, "1984": 0, "bowen": 0, "hou": 0, "zhangm": 0, "he": 0, "dong": 0, "haiyin": 0, "zhou": 0, "jiongqi": 0, "ballist": 0, "missil": 0, "sin": [0, 30, 215], "cn": 0, "deepli": 0, "integr": [0, 29, 30, 31, 33, 34, 36, 37, 39, 46, 75, 80, 82, 85, 125, 163, 164, 208], "mode": [0, 88, 89, 121, 122, 133, 178], "1724": 0, "11": [0, 12], "peter": 0, "\u00e4": 0, "ckel": 0, "note": [0, 2, 3, 12, 13, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 45, 46, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 105, 133, 155, 159, 161, 171, 193, 209, 214], "multivari": 0, "work": [0, 24, 46, 73, 75, 76, 77, 78, 80, 82, 83, 85, 86, 95, 185], "paper": 0, "2005": 0, "url": [0, 209], "http": [0, 209], "202": 0, "31": 0, "197": 0, "199": 0, "mhlee": 0, "old": [0, 88, 182, 184, 187], "apr": 0, "28": [0, 45, 70, 74, 79, 81, 84], "2014": 0, "y": [0, 12, 13, 14, 25, 26, 27, 28, 29, 30, 37, 46, 73, 75, 76, 77, 78, 80, 82, 83, 85, 86, 89, 112, 124, 125, 128, 129, 133, 134, 135, 171, 189, 193, 194, 213, 214, 215, 217], "ji": 0, "anoteonmultivariategausshermitequadratur": 0, "pdf": [0, 14, 76, 77, 78, 86], "12": [0, 34, 193], "christoph": 0, "d": [0, 2, 3, 76, 77, 78, 83, 86, 209, 210], "karlgaard": 0, "frederick": 0, "lutz": 0, "second": [0, 24, 25, 34, 98, 113, 117, 171, 208], "order": [0, 24, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 43, 47, 89, 101, 112, 122, 133, 135, 159, 161, 178, 179, 197], "equat": [0, 2, 3, 26, 27, 31, 32, 35, 36, 46, 73, 83, 97, 189], "control": [0, 2, 3, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 97, 125, 126, 132, 133, 134, 159, 161, 189, 190, 208, 209, 212, 217], "26": [0, 86, 213], "41": 0, "49": 0, "2003": 0, "13": [0, 37], "benjamin": 0, "o": [0, 193, 214], "lang": 0, "g": [0, 2, 3, 32, 36, 73, 83, 178, 179, 209, 211, 214, 215], "smith": 0, "The": [0, 2, 3, 10, 12, 13, 14, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 43, 44, 45, 46, 47, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 95, 105, 111, 112, 115, 116, 118, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 158, 160, 161, 168, 171, 178, 179, 182, 183, 184, 185, 187, 191, 193, 194, 208, 210, 211, 213, 214, 215, 216, 217], "applic": [0, 2, 3], "floquet": 0, "theori": 0, "comput": [0, 211], "small": 0, "orbit": [0, 26, 27, 34, 37, 148, 169], "perturb": 0, "over": [0, 2, 3, 33, 34, 36, 37, 73, 83, 88, 89], "long": 0, "interv": 0, "tschaunerhempel": 0, "stanford": 0, "univ": 0, "ca": 0, "dept": 0, "Of": 0, "aeronaut": 0, "And": 0, "astronaut": 0, "1965": 0, "14": [0, 28, 29, 30, 37], "x": [0, 2, 3, 4, 5, 6, 7, 10, 11, 12, 13, 14, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 44, 45, 46, 70, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 89, 94, 102, 112, 124, 125, 128, 129, 133, 134, 135, 154, 156, 158, 159, 160, 161, 163, 164, 165, 166, 169, 171, 185, 189, 190, 191, 193, 194, 199, 201, 203, 213, 214, 215, 217], "rong": 0, "vesselin": 0, "jilkov": 0, "survei": 0, "maneuv": 0, "target": [0, 37, 95, 130, 131, 132, 133, 135, 178], "In": [0, 13, 75, 85], "signal": [0, 2, 3, 29, 161], "data": [0, 14, 76, 77, 78, 86, 92, 215], "process": [0, 12, 13, 26, 27, 28, 29, 31, 35, 45, 70, 73, 74, 76, 77, 78, 79, 81, 82, 83, 84, 85, 86, 193, 214, 215], "2000": [0, 214], "volum": [0, 211], "4048": 0, "212": 0, "235": 0, "spie": 0, "15": [0, 83, 213, 214], "zhuowei": 0, "liu": 0, "shuxin": 0, "chen": 0, "hao": 0, "wu": 0, "renk": 0, "lin": 0, "student": [0, 83], "mixtur": [0, 45, 70, 74, 79, 81, 84], "probabl": [0, 14, 46, 73, 76, 77, 78, 85, 86, 99, 124, 128], "hypothesi": 0, "densiti": [0, 25], "multi": [0, 12, 15, 24, 40, 83], "outlier": 0, "1095": 0, "16": [0, 37], "moham": 0, "okasha": 0, "brett": 0, "newman": 0, "proxim": 0, "oper": [0, 1, 88, 89, 208], "tschauner": [0, 37], "hempel": [0, 37], "60": [0, 178, 179, 213, 215], "109": 0, "136": 0, "17": [0, 12], "william": 0, "press": 0, "saul": 0, "teukolski": 0, "vetterl": 0, "brian": 0, "flanneri": 0, "numer": [0, 29, 30, 34, 43, 79, 158, 159, 160, 161], "recip": 0, "art": 0, "scientif": 0, "cambridg": 0, "cup": 0, "jan": 0, "1992": 0, "0521431085": 0, "1017": 0, "s0269964800000565": 0, "alex": 0, "quinchia": 0, "gianluca": 0, "falco": 0, "emanuela": 0, "falletti": 0, "fabio": 0, "dovi": 0, "carl": 0, "ferrer": 0, "comparison": 0, "between": [0, 30, 33, 45, 70, 73, 74, 79, 81, 84, 88, 89, 113, 117, 133, 178, 179], "differ": [0, 20, 26, 27, 28, 31, 36, 45, 70, 71, 72, 73, 74, 79, 81, 84, 127, 158, 159, 160, 161, 208, 212, 216], "error": [0, 2, 46, 73, 80, 82, 85, 191], "mem": 0, "appli": [0, 25, 32, 89, 115, 116, 133, 171, 182, 183, 184, 187], "gp": 0, "INS": 0, "9549": 0, "9588": 0, "19": [0, 83], "michael": 0, "roth": 0, "emr": 0, "\u00f6": 0, "zkan": 0, "fredrik": 0, "gustafsson": 0, "intern": [0, 19, 24, 25, 43, 47, 76, 86, 178, 179], "confer": 0, "acoust": 0, "speech": 0, "5770": 0, "5774": 0, "20": [0, 13, 213, 214], "simo": 0, "rkk": 0, "jouni": 0, "hartikainen": 0, "lennart": 0, "svensson": 0, "sandblom": 0, "On": 0, "relat": [0, 14, 76, 77, 78, 86, 101, 102, 153, 174], "gaussian": [0, 13, 45, 46, 70, 73, 74, 75, 76, 79, 80, 81, 82, 84, 85, 94, 156], "sigma": [0, 10, 13, 75, 83, 85, 191, 193], "point": [0, 2, 10, 12, 13, 75, 76, 77, 78, 79, 80, 81, 82, 85, 86, 115, 116, 156, 160], "method": [0, 2, 3, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 43, 44, 45, 46, 47, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 111, 112, 118, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 158, 159, 160, 161, 171, 172, 178, 179, 182, 183, 184, 185, 186, 187, 188, 189, 190, 195, 196, 197], "advanc": 0, "inform": [0, 45, 70, 74, 79, 81, 84, 178, 179, 211], "fusion": 0, "2015": 0, "21": [0, 78], "dan": 0, "state": [0, 2, 3, 14, 19, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 43, 44, 45, 46, 47, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 94, 97, 124, 126, 133, 134, 154, 159, 161, 163, 164, 171, 178, 179, 189, 190, 193, 208, 214, 215, 217], "infin": [0, 87], "approach": 0, "wilei": 0, "son": 0, "2006": 0, "22": 0, "ond": 0, "\u0159": 0, "ej": 0, "straka": 0, "jind": 0, "ich": 0, "dun": 0, "\u00ed": 0, "k": [0, 3, 26, 27, 31, 32, 35, 46, 73, 75, 77, 78, 80, 82, 83, 85, 214, 215], "stochast": 0, "2017": 0, "20th": 0, "zu": 0, "einem": 0, "elliptisch": 0, "bahn": 0, "umlaufenden": 0, "ziel": 0, "astronautica": 0, "acta": 0, "104": 0, "24": [0, 2, 33, 213], "jur": 0, "van": 0, "den": 0, "berg": 0, "extend": [0, 2, 24, 39, 46, 70, 88, 89, 212], "lqr": [0, 2, 189, 212, 216], "local": [0, 24, 37, 46, 194, 208, 211], "feedback": [0, 3], "non": [0, 2, 3, 29, 34, 36, 37, 46, 75, 77, 78, 80, 82, 85, 178, 179, 212, 216], "linear": [0, 2, 3, 28, 29, 30, 34, 35, 36, 37, 46, 75, 77, 78, 80, 82, 85, 212, 216], "quadrat": [0, 2, 3, 212, 217], "cost": [0, 2, 3, 79, 171, 172, 190, 213, 214, 217], "robot": [0, 33, 214, 217], "research": [0, 209], "page": [0, 208, 209, 211, 216], "39": 0, "springer": 0, "2016": 0, "25": [0, 86, 215], "rudolph": 0, "der": 0, "merw": 0, "arnaud": 0, "doucet": 0, "nando": 0, "de": 0, "freita": 0, "eric": 0, "wan": 0, "u": [0, 2, 3, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 46, 73, 83, 159, 161, 190, 214], "nscent": 0, "articl": 0, "f": [0, 2, 3, 26, 27, 32, 36, 44, 45, 46, 70, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 158, 159, 160, 161, 163, 164], "ilter": 0, "cu": 0, "infeng": 0, "tr": 0, "380": 0, "neural": 0, "584": 0, "590": 0, "2001": 0, "jordi": 0, "vila": 0, "vall": 0, "pau": 0, "closa": 0, "fern": 0, "\u00e1": 0, "ndez": 0, "prade": 0, "juan": 0, "fernandez": 0, "rubio": 0, "bayesian": [0, 43], "scale": [0, 12, 13, 45, 70, 74, 79, 81, 83, 84, 94, 101, 124, 132, 183, 193], "context": 0, "2012": 0, "european": 0, "eusipco": 0, "529": 0, "533": 0, "space": [0, 2, 3, 133, 159, 161, 178, 179, 182, 183, 184, 185, 186, 187, 189], "symmetr": 0, "\u03b1": 0, "stabl": 0, "19th": 0, "674": 0, "678": 0, "29": [0, 85, 215, 217], "adapt": 0, "commun": 0, "symposium": 0, "cat": 0, "No": 0, "00ex373": 0, "153": 0, "158": 0, "packag": [1, 24, 45, 70, 71, 72, 74, 79, 81, 84, 88, 89, 103, 140, 207, 208, 209, 211, 212], "gnc": [1, 209], "modul": [1, 38, 106, 107, 141, 143, 144, 145, 149, 174, 176, 180, 209, 212], "class": [2, 3, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 118, 119, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 140, 151, 152, 171, 172, 173, 175, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 195, 196, 197, 213], "max_it": [2, 168, 189, 217], "1000": [2, 3, 168, 214, 215], "0": [2, 3, 10, 13, 28, 30, 33, 37, 45, 70, 73, 74, 75, 79, 81, 83, 84, 85, 88, 89, 99, 101, 118, 124, 128, 132, 135, 158, 178, 179, 192, 213, 214, 215, 217], "tol": [2, 168, 217], "0001": [2, 217], "kwarg": [2, 11, 12, 13, 14, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 43, 44, 45, 46, 47, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 89, 104, 133, 159, 161, 163, 164, 179, 183, 185, 186, 188, 195, 197], "sourc": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 46, 47, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 178, 179, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206], "implement": [2, 3, 12, 13, 14, 15, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 43, 44, 45, 46, 47, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 97, 136, 137, 138, 151, 154, 155, 156, 163, 164, 171, 173, 175, 176, 177, 181, 182, 183, 184, 187, 189, 195], "an": [2, 3, 4, 5, 18, 19, 24, 25, 29, 30, 31, 33, 37, 39, 42, 44, 45, 46, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 89, 94, 95, 97, 98, 99, 100, 101, 104, 105, 111, 129, 133, 171, 172, 178, 179, 182, 183, 184, 185, 186, 187, 189, 190, 191, 210, 211], "regul": [2, 3], "thi": [2, 3, 10, 12, 13, 19, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 40, 43, 44, 45, 46, 47, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 91, 101, 104, 105, 111, 112, 117, 118, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 155, 171, 172, 177, 178, 179, 182, 183, 184, 185, 187, 191, 193, 194, 208, 209, 210, 211, 212, 213, 214, 215, 217], "i": [2, 3, 10, 11, 12, 13, 14, 20, 21, 22, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 40, 43, 44, 45, 46, 47, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 95, 98, 104, 105, 112, 115, 116, 121, 122, 124, 130, 131, 133, 135, 158, 159, 160, 161, 168, 171, 178, 179, 183, 185, 193, 194, 207, 208, 210, 211, 213, 214, 217], "number": [2, 3, 11, 12, 13, 22, 25, 44, 45, 70, 74, 76, 77, 78, 79, 80, 81, 82, 84, 86, 88, 89, 101, 104, 155, 168, 178, 179, 185, 186, 189, 191, 192, 193, 211, 213], "iter": [2, 3, 31, 89, 133, 168, 178, 179, 189, 214, 217], "try": 2, "converg": [2, 168], "type": [2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 43, 44, 45, 46, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 111, 112, 113, 115, 116, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 178, 179, 189, 190, 193, 194, 197, 199, 200, 201, 202, 203, 211], "int": [2, 3, 12, 13, 14, 45, 70, 74, 76, 77, 78, 79, 81, 83, 84, 86, 88, 89, 91, 101, 104, 111, 112, 114, 118, 121, 122, 133, 135, 155, 168, 171, 172, 178, 179, 185, 186, 189, 192, 193, 194], "toler": [2, 3, 168], "float": [2, 3, 6, 7, 8, 11, 13, 16, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 44, 45, 46, 70, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 99, 100, 112, 115, 116, 124, 125, 128, 129, 132, 133, 135, 154, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 178, 179, 189, 190, 191, 199, 200, 201, 202, 203, 214], "ct_come_mat": 2, "come": [2, 133], "matric": [2, 3, 29, 30, 73, 83, 85, 165], "per": [2, 3, 12, 45, 46, 70, 74, 75, 79, 80, 81, 82, 84, 85, 89, 102, 105, 115, 116, 159, 161, 171], "step": [2, 3, 18, 19, 25, 26, 27, 31, 35, 43, 44, 45, 46, 47, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 112, 124, 133, 158, 160, 163, 164, 178, 179, 182, 183, 184, 185, 186, 187, 208], "horizon": [2, 3, 212], "nh": [2, 3], "n": [2, 3, 10, 11, 12, 13, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 44, 45, 46, 70, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 94, 133, 158, 159, 160, 161, 165, 166, 171, 189, 190, 192, 193, 209], "numpi": [2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 18, 19, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 44, 45, 46, 70, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 94, 97, 102, 112, 115, 116, 122, 124, 133, 134, 154, 158, 159, 160, 161, 163, 164, 165, 166, 169, 171, 172, 178, 179, 189, 190, 191, 193, 199, 201, 203, 213, 214, 215, 217], "arrai": [2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 18, 19, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 44, 45, 46, 70, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 94, 97, 102, 112, 115, 116, 122, 124, 133, 134, 154, 158, 159, 160, 161, 163, 164, 165, 166, 169, 171, 172, 178, 179, 189, 190, 191, 193, 199, 201, 203, 213, 214, 215, 217], "ct_come_vec": 2, "vector": [2, 3, 12, 13, 14, 19, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 76, 77, 78, 86, 97, 133, 166, 178, 179, 189, 190, 193, 201, 215], "use_custom_cost": 2, "flag": [2, 3, 12, 13, 25, 29, 30, 43, 46, 70, 73, 75, 76, 77, 78, 80, 82, 83, 85, 86, 88, 89, 94, 104, 113, 114, 124, 133, 171, 178, 179, 183, 194], "indic": [2, 3, 12, 13, 22, 24, 25, 29, 30, 43, 45, 46, 70, 74, 76, 77, 78, 79, 81, 83, 84, 86, 88, 89, 94, 97, 104, 113, 124, 133, 171, 172, 178, 179, 183, 189, 193, 194], "custom": [2, 89, 90, 133, 142, 171, 193], "function": [2, 3, 12, 13, 14, 24, 26, 27, 30, 31, 32, 33, 34, 35, 36, 37, 43, 44, 45, 46, 47, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 105, 106, 109, 110, 133, 138, 139, 141, 144, 146, 148, 150, 152, 153, 155, 158, 159, 160, 161, 162, 163, 164, 171, 174, 178, 179, 182, 184, 186, 187, 189, 192, 213, 214, 217], "should": [2, 3, 13, 24, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 43, 46, 47, 70, 76, 77, 78, 79, 86, 88, 89, 93, 94, 104, 105, 117, 124, 133, 171, 178, 179, 183, 194, 211], "bool": [2, 3, 12, 13, 25, 29, 30, 43, 46, 70, 73, 75, 76, 77, 78, 80, 82, 83, 85, 86, 88, 89, 94, 104, 113, 114, 124, 133, 171, 178, 179, 183, 194], "gif_frame_skip": 2, "frame": [2, 4, 5, 24, 25, 37, 88, 89, 112, 122, 133, 171, 182, 184, 186, 187, 201, 203], "skip": [2, 186, 193, 211], "when": [2, 3, 12, 13, 24, 40, 41, 42, 43, 45, 47, 70, 74, 79, 81, 84, 88, 89, 93, 133, 135, 160, 171, 189, 208, 211, 214], "save": [2, 43, 44, 45, 46, 47, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 133, 171, 193, 215], "gif": [2, 171], "set": [2, 3, 11, 12, 13, 24, 25, 29, 33, 34, 35, 36, 37, 43, 45, 46, 47, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 125, 130, 133, 171, 172, 178, 179, 193, 194, 211, 213, 214, 215], "take": [2, 3, 36, 43, 45, 70, 73, 74, 75, 79, 80, 81, 82, 83, 84, 85, 88, 89, 133, 163, 164, 178, 179, 184, 187, 189], "everi": [2, 3, 45, 70, 74, 76, 79, 81, 84, 86, 89, 124, 133, 208], "__init__": [2, 3, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 43, 44, 45, 46, 47, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 111, 112, 118, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 171, 172, 178, 179, 182, 183, 184, 185, 186, 187, 188, 189, 190, 195, 196, 197], "initi": [2, 3, 12, 13, 19, 24, 25, 29, 30, 31, 33, 43, 44, 45, 46, 47, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 94, 95, 97, 99, 100, 101, 104, 120, 121, 123, 133, 171, 172, 178, 179, 185, 186, 190, 211, 217], "object": [2, 3, 10, 11, 12, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 29, 30, 31, 32, 33, 37, 39, 43, 44, 45, 46, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 111, 112, 118, 121, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 171, 172, 178, 179, 183, 185, 186, 189, 190, 194, 195, 196, 214, 215, 217], "paramet": [2, 3, 4, 5, 6, 7, 8, 11, 12, 13, 14, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 44, 45, 46, 70, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 94, 95, 97, 99, 100, 101, 104, 105, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 178, 179, 182, 183, 184, 185, 186, 187, 190, 191, 192, 193, 194, 199, 200, 201, 202, 203], "option": [2, 3, 10, 12, 13, 14, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 44, 45, 46, 70, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 94, 101, 104, 105, 115, 116, 118, 124, 125, 126, 132, 133, 134, 158, 159, 160, 161, 168, 171, 178, 179, 183, 185, 193, 194, 208, 211], "default": [2, 3, 12, 13, 14, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 43, 44, 45, 46, 70, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 105, 115, 116, 133, 158, 160, 161, 168, 171, 177, 178, 179, 183, 185, 193, 194, 211], "1e3": 2, "1e": [2, 3, 160, 168, 217], "dict": [2, 12, 13, 14, 24, 29, 30, 32, 33, 36, 44, 45, 46, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 94, 98, 99, 104, 124, 126, 133, 159, 161, 171, 178, 179, 182, 183, 184, 185, 186, 187, 193, 194, 217], "addit": [2, 3, 12, 13, 14, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 44, 45, 46, 70, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 94, 97, 104, 131, 132, 133, 158, 159, 160, 161, 171, 178, 179, 208, 214], "argument": [2, 3, 12, 13, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 43, 44, 45, 46, 47, 70, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 97, 104, 133, 158, 159, 161, 163, 164, 169, 192, 211], "attribut": [2, 3, 10, 11, 12, 13, 14, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 45, 46, 47, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 89, 90, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 106, 107, 112, 127, 133, 178, 179, 182, 183, 184, 185, 186, 187, 188, 189], "backward_pass": [2, 3], "itr": [2, 3, 214, 217], "num_timestep": [2, 3], "traj": [2, 3], "state_arg": [2, 3, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 97, 133, 214, 215, 217], "ctrl_arg": [2, 3, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 97, 133], "cost_arg": [2, 3, 214, 217], "time_vec": [2, 3, 193], "inv_state_arg": [2, 3, 214], "inv_ctrl_arg": [2, 3], "backward": [2, 3, 164, 177], "pass": [2, 3, 26, 27, 31, 33, 34, 35, 36, 37, 43, 46, 47, 75, 76, 77, 78, 80, 82, 85, 86, 104, 112, 159, 161, 178, 179, 193, 211], "finit": [2, 3, 212], "case": [2, 3, 13, 24, 27, 40, 44, 46, 73, 75, 76, 77, 78, 80, 82, 83, 85, 86, 88, 89, 178, 179, 208, 214], "total": [2, 3, 12, 22, 133, 171], "timestep": [2, 3, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 43, 44, 45, 46, 47, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 99, 102, 105, 112, 128, 133, 159, 161, 214], "trajectori": [2, 3, 214, 217], "tupl": [2, 3, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 46, 73, 75, 76, 77, 78, 80, 82, 83, 85, 89, 97, 98, 101, 118, 133, 158, 159, 160, 161, 182, 183, 184, 185, 186, 187], "extra": [2, 3, 46, 75, 77, 78, 85, 88, 89, 98, 124, 126, 133, 178, 179], "matrix": [2, 3, 12, 13, 21, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 46, 73, 75, 76, 77, 78, 79, 80, 82, 83, 85, 86, 159, 161, 191], "Not": [2, 3, 44, 178, 179], "invers": [2, 3, 29, 43], "return": [2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 18, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 43, 44, 45, 46, 47, 70, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 94, 104, 105, 113, 114, 115, 116, 119, 120, 121, 122, 133, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 178, 179, 182, 183, 184, 185, 186, 187, 189, 191, 192, 193, 194, 197, 199, 200, 201, 202, 203, 213, 214, 215, 217], "calculate_control": [2, 3, 214], "tt": [2, 3, 214, 217], "cur_stat": [2, 3, 45, 46, 47, 70, 73, 74, 75, 79, 80, 81, 82, 83, 84, 85, 214], "end_stat": [2, 3, 214, 217], "none": [2, 3, 9, 10, 11, 12, 13, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 44, 45, 46, 47, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 94, 95, 96, 97, 99, 100, 101, 105, 115, 116, 133, 134, 161, 171, 178, 179, 182, 183, 184, 185, 186, 187, 189, 193, 194, 196], "provide_detail": [2, 3, 214, 217], "fals": [2, 3, 12, 13, 29, 30, 33, 34, 36, 37, 70, 73, 75, 77, 80, 82, 83, 85, 88, 89, 171, 178, 179, 194], "disp": [2, 217], "true": [2, 37, 43, 46, 76, 77, 78, 83, 86, 88, 89, 94, 104, 133, 170, 171, 178, 179, 183, 193, 213, 214, 215, 217], "show_anim": [2, 171, 213, 214, 217], "save_anim": [2, 171, 213, 214, 217], "plt_opt": [2, 171, 214, 215], "ttl": [2, 12, 13, 171, 194, 214, 215, 217], "fig": [2, 12, 13, 14, 45, 70, 74, 79, 81, 84, 171, 178, 194, 213, 214, 215, 217], "plt_ind": [2, 214, 217], "ax_num": [2, 194], "current": [2, 3, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 43, 44, 46, 47, 73, 75, 76, 77, 78, 80, 82, 83, 85, 86, 88, 89, 133, 167, 171, 178, 179, 193, 194, 208], "start": [2, 3, 24, 87, 171, 189, 208, 209, 211, 213, 214, 217], "desir": [2, 3, 24], "refer": [2, 3, 5, 7, 8, 24, 25, 26, 27, 104, 105, 133, 208, 209], "end": [2, 3, 30, 73, 83, 88, 133, 171, 178, 179, 189, 213, 214, 217], "input": [2, 3, 18, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 45, 70, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 133, 155, 159, 165, 166, 189, 214], "either": [2, 3, 29, 45, 46, 70, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 124, 208], "part": [2, 25, 36, 44, 45, 70, 74, 79, 81, 84, 105], "output": [2, 3, 43, 47, 182, 184, 187, 208, 211, 213, 214, 215, 217], "provid": [2, 3, 24, 39, 43, 44, 45, 70, 73, 74, 75, 79, 80, 81, 82, 83, 84, 85, 88, 89, 94, 105, 124, 133, 171, 177, 178, 179, 210, 211, 212, 216], "text": [2, 12, 13, 14, 76, 77, 78, 86], "displai": 2, "dure": [2, 3, 46, 73, 75, 77, 78, 80, 82, 83, 85, 86, 171], "anim": [2, 171, 214], "shown": [2, 121, 171], "requir": [2, 28, 43, 45, 70, 73, 74, 79, 81, 84, 131, 135], "plot": [2, 12, 13, 14, 45, 70, 74, 76, 77, 78, 79, 81, 84, 86, 171, 214, 215], "see": [2, 12, 13, 28, 29, 30, 34, 37, 45, 70, 73, 74, 75, 76, 79, 81, 83, 84, 85, 86, 118, 126, 132, 178, 208, 211], "gncpy": [2, 3, 12, 13, 14, 24, 32, 39, 46, 73, 75, 76, 77, 78, 80, 82, 83, 85, 86, 88, 89, 97, 104, 124, 126, 128, 129, 131, 133, 135, 171, 178, 189, 207, 211, 213, 214, 215, 217], "init_plotting_opt": [2, 12, 13, 14, 76, 77, 78, 86, 171, 194, 214, 215], "string": [2, 12, 13, 14, 24, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 45, 46, 70, 74, 76, 77, 78, 79, 81, 84, 86, 88, 89, 94, 101, 104, 105, 118, 121, 122, 124, 125, 126, 131, 132, 133, 134, 135, 171, 178, 183, 185, 192, 193, 194], "titl": [2, 12, 13, 14, 76, 77, 78, 86, 171, 193, 194, 209], "matplotlib": [2, 12, 13, 14, 45, 70, 74, 76, 77, 78, 79, 81, 84, 86, 171, 178, 193, 215], "figur": [2, 12, 13, 14, 45, 70, 74, 76, 77, 78, 79, 81, 84, 86, 171, 178, 193, 194, 214, 215], "draw": [2, 89, 94, 101, 121, 122, 171], "If": [2, 3, 10, 12, 13, 24, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 44, 45, 46, 70, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 88, 89, 105, 124, 133, 171, 178, 179, 193, 208, 211], "suppli": [2, 3, 12, 13, 26, 27, 31, 32, 35, 44, 45, 70, 74, 75, 79, 81, 84, 85, 87], "onli": [2, 3, 10, 11, 12, 13, 22, 26, 27, 29, 31, 32, 33, 34, 35, 36, 37, 45, 46, 70, 74, 75, 76, 77, 78, 79, 81, 83, 84, 85, 86, 101, 104, 105, 124, 125, 133, 171, 178, 179, 211, 214, 217], "path": [2, 24, 25, 88, 89, 118, 133, 137, 149, 171, 172, 178, 189, 190, 213], "ar": [2, 3, 10, 12, 13, 14, 29, 30, 37, 40, 45, 46, 70, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 94, 101, 117, 121, 122, 124, 125, 126, 132, 133, 134, 136, 171, 178, 179, 180, 193, 208, 211], "drawn": [2, 76, 86, 101, 119, 124, 171], "updat": [2, 3, 11, 12, 13, 19, 24, 25, 46, 72, 75, 85, 89, 105, 112, 122, 133, 208], "rest": 2, "remain": 2, "unchang": 2, "which": [2, 3, 13, 46, 70, 133, 171, 178, 179, 208, 213, 214, 215, 217], "creat": [2, 12, 13, 21, 33, 45, 46, 70, 74, 79, 81, 84, 88, 89, 101, 104, 105, 118, 133, 193, 208, 211, 213, 214, 215], "new": [2, 24, 36, 43, 44, 45, 47, 70, 74, 79, 81, 84, 88, 89, 104, 105, 133, 171, 177, 178, 179, 182, 184, 187, 193, 208], "add": [2, 11, 26, 33, 34, 36, 37, 85, 90, 104, 105, 155, 208, 214, 217], "list": [2, 3, 11, 12, 13, 20, 21, 22, 23, 24, 30, 32, 33, 34, 36, 37, 45, 46, 70, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 95, 97, 98, 105, 119, 122, 130, 131, 133, 135, 159, 161, 162, 165, 166, 171, 178, 179, 189, 193, 211], "element": [2, 11, 12, 13, 20, 21, 22, 36, 77, 78, 86, 95, 98, 104, 105, 130, 131, 133, 135, 171, 182, 183, 184, 187, 193], "assum": [2, 24, 29, 45, 46, 70, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 89, 104, 117, 133, 178, 179, 185], "nu": [2, 3, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 73, 75, 80, 82, 83, 85, 159, 161, 190], "state_traj": [2, 3, 214], "until": [2, 3, 105], "reach": [2, 3, 133, 135], "ctrl_signal": [2, 3, 214], "numi": [2, 3], "handl": [2, 12, 13, 45, 70, 74, 79, 81, 84, 94, 96, 97, 104, 105, 110, 133, 171], "gener": [2, 3, 24, 30, 37, 40, 43, 44, 45, 46, 47, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 94, 133, 171, 178, 179, 182, 183, 184, 185, 187, 189, 192, 193, 211, 214], "frame_list": [2, 171, 213, 214, 217], "each": [2, 11, 12, 20, 21, 22, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 44, 45, 46, 70, 73, 74, 75, 76, 77, 78, 79, 81, 83, 84, 85, 86, 88, 89, 95, 97, 98, 99, 105, 112, 128, 130, 131, 133, 135, 159, 161, 171, 178, 179, 184, 189, 192, 193, 208], "pil": [2, 171], "imag": [2, 89, 101, 118, 171, 178, 179, 183, 185, 208, 211], "correspond": [2, 12, 32, 45, 70, 74, 79, 81, 84, 133, 171, 183, 185], "cost_funct": [2, 3], "ctrl_input": [2, 3, 214, 217], "is_initi": [2, 3, 214, 217], "is_fin": [2, 3, 214, 217], "final": [2, 3, 171, 185], "forward_pass": 2, "forward": [2, 3, 24, 28, 29, 30, 32], "smooth": 2, "get_state_spac": [2, 3], "x_hat": [2, 3, 76, 77, 78, 86], "u_hat": [2, 3], "b": [2, 3, 73, 83, 214, 215, 217], "rais": [2, 3, 24, 28, 32, 33, 34, 36, 37, 44, 45, 46, 70, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 88, 89, 133, 178, 179], "notimplementederror": [2, 3, 32, 133], "unsupport": [2, 3], "prop_stat": [2, 3], "propag": [2, 3, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 73, 75, 76, 77, 78, 80, 82, 83, 85, 86, 97, 133, 215], "prop_state_backward": [2, 3], "get": [2, 3, 24, 26, 27, 28, 29, 30, 31, 32, 35, 46, 73, 75, 80, 82, 83, 85, 89, 105, 112, 119, 131, 133, 178, 179, 208, 209, 211, 215], "futur": [2, 3], "x_hat_p": [2, 3], "previou": [2, 3, 45, 70, 74, 79, 81, 84], "transit": [2, 3, 26, 27, 29, 30, 33, 34, 36, 37, 44, 76, 77, 78, 86], "prop_state_forward": 2, "next": [2, 26, 27, 28, 29, 30, 31, 35, 46, 73, 75, 77, 78, 83, 85, 89, 133, 211], "abar": 2, "bbar": 2, "cbar": 2, "quadratize_cost": 2, "portion": [2, 210], "standard": [2, 12, 13, 26, 27, 28, 35, 43, 47, 73, 77, 83, 140, 141, 151, 159, 161, 192, 194, 214, 215], "posit": [2, 4, 5, 6, 7, 12, 13, 22, 24, 25, 37, 97, 102, 112, 115, 116, 124, 133, 169, 171, 189, 191, 211, 215], "semi": [2, 37, 191], "definit": [2, 143], "regular": 2, "neg": [2, 87, 214, 217], "eigen": 2, "valu": [2, 3, 10, 14, 25, 29, 31, 35, 36, 45, 70, 74, 75, 76, 77, 78, 79, 81, 84, 85, 86, 87, 88, 89, 100, 121, 122, 124, 127, 133, 154, 156, 162, 171, 178, 179, 184, 189, 190, 193, 215], "zero": [2, 3, 26, 27, 28, 31, 33, 34, 35, 36, 37, 44, 214, 217], "reconstruct": 2, "first": [2, 24, 25, 29, 88, 89, 98, 101, 113, 117, 133, 163, 164, 171, 178, 179, 193, 208, 211, 214, 217], "last": [2, 24, 25, 97, 102, 171, 208], "configur": [2, 88, 89, 136, 178, 179], "correl": [2, 3, 29, 178, 179], "q": [2, 3, 76, 77, 78, 86, 214, 215, 217], "reset": [2, 88, 89, 133, 178, 179, 182, 183, 184, 185, 186, 187], "doe": [2, 3, 10, 24, 28, 30, 32, 45, 70, 74, 76, 79, 81, 84, 85, 86, 124, 171, 178, 179, 182, 184, 187, 214], "need": [2, 3, 10, 26, 27, 28, 29, 30, 31, 32, 35, 45, 70, 71, 72, 74, 78, 79, 81, 84, 85, 118, 124, 133, 163, 164, 178, 208, 211, 214], "call": [2, 12, 13, 43, 44, 45, 46, 47, 70, 73, 74, 75, 76, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 104, 105, 110, 112, 133, 171, 178, 179, 182, 183, 184, 185, 187, 211, 213], "outsid": [2, 24, 42, 78, 88, 89, 104], "It": [2, 3, 28, 29, 32, 33, 34, 37, 43, 44, 45, 46, 47, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 88, 89, 105, 171, 178, 194, 208, 211], "automat": [2, 33, 34, 36, 37, 45, 70, 73, 74, 75, 79, 80, 81, 82, 83, 84, 85, 208, 211], "old_cost": 2, "prior": [2, 72, 171, 208], "row": [2, 12, 171, 172, 185, 189], "set_cost_model": [2, 3, 214, 217], "non_quadratic_fun": [2, 214, 217], "quad_modifi": [2, 214, 217], "cost_fun": 2, "skip_validity_check": 2, "must": [2, 11, 32, 35, 36, 43, 44, 45, 46, 47, 70, 71, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 88, 95, 99, 101, 112, 124, 125, 128, 132, 135, 158, 159, 160, 161, 163, 164, 171, 178, 189, 191, 192, 211], "specifi": [2, 10, 26, 27, 31, 33, 34, 35, 36, 37, 45, 46, 70, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 101, 133, 178, 179, 193, 211], "also": [2, 3, 28, 30, 43, 45, 46, 70, 74, 79, 81, 83, 84, 88, 89, 94, 97, 105, 133, 137, 185, 193, 194, 211, 213], "code": [2, 28, 30, 43, 47, 211], "forc": [2, 28], "follow": [2, 30, 46, 177, 179, 180, 208, 209, 210, 211, 213, 214, 215, 216, 217], "form": [2, 29, 30, 34, 37, 40, 46, 73, 75, 76, 77, 78, 80, 82, 83, 85, 86, 158, 160, 171, 214], "x_f": 2, "int_": 2, "t_0": 2, "t_f": [2, 3], "tau": [2, 3], "where": [2, 3, 32, 44, 45, 46, 70, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 193, 211], "contain": [2, 38, 97, 101, 102, 103, 208, 211], "term": [2, 132, 214], "can": [2, 3, 12, 13, 29, 39, 43, 44, 45, 46, 47, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 105, 119, 133, 171, 178, 179, 185, 193, 208, 211, 213, 214, 215, 217], "entir": 2, "callabl": [2, 3, 32, 44, 45, 46, 70, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 158, 160, 163, 164, 189], "have": [2, 39, 44, 45, 46, 70, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 132, 133, 159, 161, 171, 178, 179, 208], "arg": [2, 24, 28, 29, 30, 32, 34, 35, 37, 43, 46, 72, 73, 75, 76, 77, 78, 80, 82, 83, 84, 85, 86, 88, 89, 197, 214], "scalar": 2, "modifii": 2, "befor": [2, 43, 45, 70, 74, 75, 76, 79, 81, 84, 86, 88, 89, 133, 211], "ad": [2, 78, 105, 171, 179, 211], "all": [2, 24, 32, 35, 41, 43, 44, 45, 47, 70, 74, 79, 81, 84, 88, 89, 97, 105, 106, 119, 121, 122, 133, 135, 144, 145, 171, 178, 179, 180, 190, 193, 208, 210, 211], "numericali": 2, "wrong": [2, 133], "combin": [2, 45, 70, 72, 73, 74, 75, 79, 80, 81, 82, 83, 84, 85], "given": [2, 3, 11, 12, 13, 24, 31, 36, 45, 46, 70, 74, 75, 76, 77, 78, 79, 81, 84, 85, 86, 104, 105, 112, 121, 124, 133, 159, 161, 171, 191, 193, 194, 208], "runtimeerror": [2, 24, 28, 33, 34, 36, 37, 45, 46, 70, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 133, 178, 179], "invlaid": 2, "set_state_model": [2, 3, 43, 44, 45, 46, 47, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 214, 215, 217], "u_nom": [2, 3, 214, 217], "control_constraint": [2, 3], "dynobj": [2, 3, 97, 133, 214, 217], "dt": [2, 3, 24, 25, 26, 27, 28, 31, 33, 34, 35, 36, 37, 45, 46, 73, 74, 83, 84, 112, 214, 215, 217], "nomin": [2, 3, 214], "constrain": [2, 3], "basic": [2, 3, 44, 78, 126, 132, 133, 214, 215, 217], "dynamicsbas": [2, 3, 24, 35, 36, 77, 78, 97, 133], "Will": [2, 3, 94], "solve_dar": [2, 3], "cur_tim": [2, 3, 214], "solv": [2, 3], "algebra": [2, 3, 189], "ricatti": [2, 3], "agrument": [2, 3, 29, 30, 77, 78], "dare": [2, 3], "solut": [2, 3, 189], "properti": [2, 3, 10, 11, 12, 13, 22, 29, 30, 31, 33, 34, 36, 37, 45, 70, 71, 72, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 89, 94, 95, 97, 98, 99, 100, 101, 102, 104, 106, 112, 133, 178, 179, 182, 183, 184, 185, 186, 187], "read": [2, 3, 10, 11, 12, 13, 22, 29, 33, 76, 77, 78, 83, 86, 88, 104], "penalti": [2, 3, 132], "time_horizon": [3, 214, 217], "inf": [3, 13, 75, 85, 214], "hard_constraint": 3, "infinit": [3, 212], "singl": [3, 10, 43, 47, 76, 77, 78, 86, 171, 182, 183, 184, 187], "gain": 3, "found": [3, 88, 89, 133, 171, 211], "preform": 3, "consist": [3, 12, 76, 77, 78, 86], "reced": 3, "formul": 3, "dyanmic": [3, 212], "thei": [3, 36, 39, 44, 45, 46, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 159, 161, 177], "onc": [3, 105, 178, 180, 208, 211], "about": [3, 13, 25, 75, 85, 95, 100, 159, 160, 161], "problem": [3, 79, 142], "without": [3, 210, 211], "length": [3, 11, 45, 70, 74, 79, 81, 84, 124], "ct_go_mat": 3, "go": [3, 211, 214, 217], "ct_go_vec": 3, "feedback_gain": 3, "feedthrough_gain": 3, "feedthrough": 3, "directli": [3, 24, 28, 30, 46, 104, 171], "constraint": [3, 32, 85, 97, 126, 133, 134, 178, 179, 189, 214], "enforc": [3, 28], "end_state_tol": [3, 214], "01": [3, 214, 215, 217], "max_inf_it": 3, "check_ind": [3, 214], "inifint": 3, "find": [3, 88, 89, 133], "avoid": 3, "loop": [3, 89, 133, 178, 179], "check": [3, 10, 11, 24, 88, 89, 113, 114, 117, 122, 133, 171, 189, 208, 211], "determin": [3, 10, 12, 13, 75, 80, 82, 85, 91, 101, 111, 112, 118, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 151, 171, 178, 179], "condit": [3, 24, 76, 77, 78, 86, 88, 89, 133, 178, 179, 210], "full": [3, 24, 88, 89, 118, 124, 133, 178, 211], "_0": 3, "give": [3, 171, 208, 213, 214, 215, 217], "po": [4, 26, 27, 28, 29, 30, 37, 102, 171, 189, 214, 215, 217], "convert": [4, 5, 6, 7, 8, 18, 25, 115, 116, 171, 183], "ecef": [4, 5, 6, 169], "lla": [4, 6, 7, 8], "coordin": [4, 6, 7, 28, 29, 34, 125, 138, 201], "meter": [4, 6, 8, 19, 21, 22, 24, 25, 33, 37, 169, 200, 201, 202, 203], "latitud": [4, 6, 7, 8, 19, 24, 25, 169, 199, 201, 203], "rad": [4, 7, 8, 24, 25, 28, 169, 203], "longitud": [4, 6, 7, 8, 19, 24, 25, 167, 169], "altitud": [4, 6, 7, 8, 19, 24, 25, 201, 203], "ref_xyz": 5, "pos_xyz": 5, "ned": [5, 7, 8, 24, 25, 201, 203], "lat": [6, 8, 19, 24, 25, 199, 200, 201, 202, 203, 204, 205], "lon": [6, 8, 19, 24, 25, 204, 205], "alt": [6, 8, 201, 203, 204, 205], "radian": [6, 8, 19, 25, 167, 168, 169, 170, 199, 201, 203], "ref_lat": [7, 8, 25], "ref_lon": [7, 8, 25], "ref_alt": [7, 8], "pos_lat": 7, "pos_lon": 7, "pos_alt": 7, "positon": 8, "flaot": [8, 25, 133], "est_list": 9, "cov_list": 9, "weight_list": [9, 47, 71], "meas_model_list": [9, 47, 71], "shape": [10, 73, 83, 101, 118, 128, 129, 131, 135, 193, 215], "dtype": [10, 73, 83, 214], "float64": [10, 73, 83], "uncertainti": [10, 11], "sigmapoint": [10, 75, 84, 85], "helper": [10, 11, 12, 13, 172, 190], "defin": [10, 12, 13, 18, 24, 32, 33, 34, 35, 36, 37, 43, 46, 88, 89, 91, 95, 106, 107, 108, 109, 111, 112, 118, 124, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 142, 144, 145, 150, 180, 208, 211, 213, 214, 215, 217], "distribut": [10, 11, 13, 14, 44, 45, 70, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 94, 124, 210], "locat": [10, 21, 24, 45, 70, 74, 79, 81, 84, 88, 89, 94, 124, 128, 129, 135, 171, 193, 213], "alwai": 10, "repres": [10, 11, 12, 13, 14, 20, 33, 36, 44, 46, 73, 75, 76, 77, 78, 80, 82, 83, 85, 86, 89, 96, 131, 133, 135, 171, 193], "necessari": [10, 70, 88, 89], "mean": [10, 11, 12, 13, 19, 25, 26, 27, 44, 45, 70, 74, 75, 79, 81, 84, 85, 115, 116, 132, 168], "same": [10, 27, 28, 31, 35, 43, 45, 46, 47, 70, 74, 76, 77, 79, 81, 84, 85, 86, 112, 133, 135, 178, 179, 183, 189], "otherwis": [10, 24, 45, 70, 74, 75, 79, 81, 84, 85, 88, 210], "manag": [11, 88, 104, 105, 108], "arbitrari": [11, 43, 46, 47, 71, 163, 164], "add_particl": 11, "w": [11, 29, 89, 96, 101, 209, 213], "weight": [11, 12, 13, 44, 45, 70, 74, 76, 77, 78, 79, 81, 84, 86, 165, 166, 171, 214, 216], "clear_particl": 11, "clear": 11, "update_weight": 11, "w_lst": [11, 165, 166], "match": [11, 12, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 83, 135], "covari": [11, 12, 13, 31, 40, 45, 46, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 191, 193], "num_particl": [11, 76, 77, 78, 86], "partilc": 11, "points_per_axi": [12, 79, 80, 81, 82], "num_ax": 12, "probabilist": 12, "version": [12, 44, 70, 208, 211, 214], "polynomi": [12, 23], "h_": [12, 73, 83], "e_n": 12, "exp": [12, 214, 217], "frac": [12, 76, 77, 78, 83, 86], "partial": 12, "its": [12, 24, 33, 41, 42, 133, 179, 217], "associ": [12, 39, 114, 117, 133, 210], "For": [12, 32, 37, 85, 86, 125, 178, 193, 211], "detail": [12, 13, 28, 29, 30, 34, 37, 45, 70, 73, 74, 76, 79, 81, 83, 84, 85, 86, 126, 132], "variat": [12, 28, 30, 83, 171, 173, 175], "extens": [12, 24, 211], "axi": [12, 13, 14, 25, 37, 76, 77, 78, 79, 80, 81, 82, 86, 96, 111, 113, 114, 191, 193, 194, 213, 214], "manual": [12, 45, 46, 70, 74, 79, 81, 84, 87], "update_point": [12, 13], "plot_point": [12, 13, 80, 82], "ind": [12, 13, 14, 44, 76, 77, 78, 80, 82, 86], "x_lbl": [12, 13, 14, 76, 77, 78, 86, 194, 215], "y_lbl": [12, 13, 14, 76, 77, 78, 86, 194, 215], "size_factor": [12, 13], "10000": [12, 13], "keywrod": [12, 13], "f_hndl": [12, 13, 14, 76, 77, 78, 86, 193, 214], "ani": [12, 13, 14, 27, 28, 32, 35, 44, 76, 77, 78, 86, 88, 89, 93, 133, 193, 210, 211], "most": [12, 13, 24, 44, 88, 89, 211], "bar": [12, 13, 76, 77, 78, 86, 211], "chart": [12, 13, 76, 77, 78, 86], "label": [12, 13, 14, 40, 76, 77, 78, 86, 193, 194, 215], "factor": [12, 13, 112, 132, 171], "multipli": [12, 13, 132], "marker": [12, 13, 193, 214], "size": [12, 13, 89, 133, 158, 160, 163, 164, 189, 193, 194, 213, 214, 215, 217], "100": [12, 13, 217], "have_sqrt": [12, 13], "some": [12, 13, 33, 39, 44, 74, 131, 135, 137, 177, 178, 179, 181, 211, 212, 213, 214, 217], "wa": [12, 13, 14, 43, 45, 47, 70, 74, 75, 76, 77, 78, 79, 81, 84, 85, 86, 88, 89, 113, 114, 123, 133, 171], "cov": [12, 13, 45, 70, 71, 72, 73, 74, 76, 77, 78, 79, 81, 82, 83, 84, 86, 191, 215], "account": [12, 13], "num_point": [12, 13], "expect": [12, 13, 46, 75, 77, 78, 85, 88], "alpha": [13, 29, 75, 84, 85, 155], "kappa": [13, 75, 84, 85], "beta": [13, 29, 75, 84, 85], "quadraturepoint": [13, 80, 82], "interpret": 13, "speacial": 13, "tunig": [13, 75, 85], "influenc": [13, 75, 85], "spread": [13, 75, 85], "rang": [13, 25, 75, 85, 99, 101, 118, 124, 128, 132, 182, 183, 184, 185, 186, 187, 213], "ideal": [13, 85], "init_weight": [13, 71, 72, 215], "other": [13, 24, 25, 44, 78, 88, 89, 112, 121, 135, 208, 210], "setup": [13, 43, 44, 47, 88, 89, 133, 171, 208, 209, 213, 214, 215], "after": [13, 105, 163, 164, 178, 179, 182, 183, 184, 185, 187, 211], "lam": 13, "deriv": [13, 25, 44, 78, 79, 81, 84], "weights_cov": 13, "wight": 13, "weights_mean": 13, "plot_particl": [14, 44, 45, 70, 74, 76, 77, 78, 79, 81, 84, 86], "approxim": [14, 34], "from": [14, 23, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 44, 45, 70, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 90, 94, 104, 112, 119, 124, 133, 168, 169, 170, 171, 178, 179, 183, 189, 191, 194, 208, 210, 211, 213, 214, 215, 217], "index": [14, 36, 45, 70, 74, 76, 77, 78, 79, 81, 84, 86, 133, 171, 172, 192, 194, 209, 211], "here": [14, 45, 70, 74, 75, 76, 77, 78, 79, 81, 84, 85, 86, 171, 211, 214], "lgnd_loc": [14, 76, 77, 78, 86, 193], "format": [14, 76, 77, 78, 86, 177, 211], "rotor": [15, 24], "aerodynam": [16, 17], "pars": [16, 17, 20, 21, 22, 23, 88, 89, 91, 93, 112, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135], "yaml": [16, 17, 20, 21, 22, 23, 88, 89, 91, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 178, 179, 208], "parser": [16, 17, 20, 21, 22, 23, 88, 89, 91, 111, 112, 118, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135], "cd": [16, 209], "drag": 16, "coeffic": [16, 23], "aircraft": [17, 25], "aero": 17, "aeroparam": 17, "mass": [17, 21], "massparam": 17, "geo": 17, "geometr": [17, 20], "geoparam": 17, "prop": 17, "propel": [17, 23], "propparam": 17, "motor": [17, 22, 24, 25], "motorparam": 17, "input_cmd": 18, "command": [18, 24, 25, 208, 211], "alt_wgs84": [19, 24, 25], "alt_msl": [19, 24, 25], "perform": [19, 25, 43, 76, 77, 78, 79, 83, 86, 89, 133, 148, 178, 179, 211], "one": [19, 25, 29, 30, 44, 45, 46, 70, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 117, 133, 171, 178, 179], "wg": [19, 24, 25, 153], "84": [19, 24, 25, 153, 185], "sea": [19, 25], "level": [19, 25, 110], "front_area_m2": 20, "front": 20, "cross": 20, "section": 20, "area": 20, "angl": [20, 25, 28, 30, 34, 169, 191, 215, 217], "cg_m": 21, "cg": 21, "mass_kg": 21, "kilogram": 21, "inertia_kgm2": 21, "moment": [21, 83], "inertia": 21, "pos_m": 22, "dir": 22, "direct": [22, 125], "spin": 22, "num_motor": 22, "poly_thrust": 23, "thrust": 23, "poly_torqu": 23, "torqu": 23, "params_fil": 24, "env": [24, 178, 179, 182, 183, 184, 185, 186, 187, 211], "effector": 24, "egm_bin_fil": 24, "library_dir": [24, 88, 89], "vehicl": 24, "environ": [24, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 209, 214], "physic": [24, 87, 89, 109, 112, 133], "config": [24, 87, 88, 89, 93, 112, 133], "file": [24, 87, 88, 89, 118, 133, 136, 178, 208, 210, 211], "binari": 24, "egm": 24, "directori": [24, 88, 89, 103, 133, 211], "look": [24, 88, 89, 208], "search": [24, 88, 89, 171, 189, 209, 216], "good": [24, 46, 73, 80, 82, 83, 88, 89], "parent": [24, 29, 30, 33, 44, 70, 75, 76, 85, 133, 172, 190], "state_map": 24, "map": [24, 46, 75, 77, 78, 85, 99, 171, 178, 179, 192, 213], "unit": [24, 89, 112, 115, 116, 118, 128, 129, 133, 135, 171, 178, 208, 211], "alia": 24, "v_smap": 24, "get_input_mat": [24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37], "get_state_mat": [24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 215], "propagate_st": [24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 215], "desired_motor_cmd": 24, "depend": [24, 75, 85, 124, 125, 126, 178, 211, 213], "fulli": 24, "realiz": 24, "chang": [24, 25, 33, 105, 167, 211], "sinc": [24, 25, 208], "copi": [24, 46, 78, 210, 215], "set_initial_condit": 24, "ned_po": [24, 25], "body_vel": [24, 25], "eul_deg": 24, "body_rot_r": 24, "ref_lat_deg": 24, "ref_lon_deg": 24, "terrain_alt_wgs84": [24, 25], "ned_mag_field": 24, "few": 24, "bodi": [24, 25], "veloc": [24, 25, 97, 102, 115, 116, 125, 132, 133, 134, 203, 214, 217], "attidu": 24, "degre": [24, 30, 83, 191], "yaw": 24, "pitch": 24, "roll": 24, "rotat": [24, 25, 191], "rate": [24, 25, 28, 29, 88, 122, 125, 167, 199, 203], "terrain": [24, 25], "home": [24, 211], "positioin": 24, "magnet": 24, "field": 24, "ut": 24, "validate_params_fil": 24, "valid": [24, 42, 88, 89, 133, 171, 192, 193, 211], "exist": [24, 88, 89, 104, 133, 178, 179, 211], "seper": 24, "name": [24, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 88, 89, 171, 182, 183, 184, 185, 186, 187, 192, 211], "fail": [24, 33, 34, 36, 37, 46, 73, 80, 82, 85, 88, 89, 133, 208], "librari": [24, 88, 89, 110, 133, 177, 209, 211], "filenotfounderror": [24, 88, 89, 133], "cf": [24, 88, 89, 133], "state_nam": [24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 214, 215, 217], "ned_pos_0": 24, "ned_pos_1": 24, "ned_pos_2": 24, "ned_vel_0": 24, "ned_vel_1": 24, "ned_vel_2": 24, "ned_accel_0": 24, "ned_accel_1": 24, "ned_accel_2": 24, "body_vel_0": 24, "body_vel_1": 24, "body_vel_2": 24, "body_accel_0": 24, "body_accel_1": 24, "body_accel_2": 24, "body_rot_rate_0": 24, "body_rot_rate_1": 24, "body_rot_rate_2": 24, "body_rot_accel_0": 24, "body_rot_accel_1": 24, "body_rot_accel_2": 24, "dyn_pr": [24, 25], "airspe": [24, 25], "mach": [24, 25], "aoa": [24, 25], "aoa_rat": [24, 25], "sideslip_ang": [24, 25], "sideslip_r": [24, 25], "gnd_trk": [24, 25], "fp_ang": [24, 25], "gnd_speed": [24, 25], "dcm_earth2body_00": 24, "dcm_earth2body_01": 24, "dcm_earth2body_02": 24, "dcm_earth2body_10": 24, "dcm_earth2body_11": 24, "dcm_earth2body_12": 24, "dcm_earth2body_20": 24, "dcm_earth2body_21": 24, "dcm_earth2body_22": 24, "alt_agl": [24, 25], "state_unit": 24, "pa": 24, "param": [25, 88, 94, 133], "aircraftparam": 25, "lattiud": 25, "takenoff": 25, "ha": [25, 28, 29, 30, 32, 33, 41, 42, 45, 46, 73, 75, 76, 77, 78, 80, 82, 83, 85, 86, 88, 104, 105, 133, 178, 179, 211, 214], "taken": [25, 33, 89], "off": 25, "yet": [25, 178, 179], "calc_derived_st": 25, "speed_of_sound": 25, "ned_vel": 25, "delta": [25, 27, 28, 35, 83], "speed": [25, 30], "sound": 25, "ground": 25, "flight": 25, "pressur": 25, "attack": 25, "sideslip": 25, "eul_to_dcm": 25, "r1": 25, "r2": 25, "r3": 25, "euler": 25, "dcm": 25, "z": [25, 26, 37, 45, 70, 74, 79, 81, 84, 157, 189, 194], "third": [25, 171], "3x3": 25, "set_dcm_earth2bodi": 25, "mat": [25, 26, 27, 31, 32, 35, 215], "assign": 25, "graviti": [25, 201], "motor_cmd": 25, "normal": [25, 28, 30, 76, 77, 78, 86, 171, 193, 208, 211, 216], "clohessywiltshireorbit2d": 26, "compon": [26, 102, 104, 114, 117, 118, 124, 125, 133], "make": [26, 88, 133, 171, 208, 211, 217], "3d": 26, "mean_mot": [26, 27], "spacecraft": [26, 27], "get_dis_process_noise_mat": [26, 27, 28, 31, 35], "interfac": [26, 39, 77, 88, 106, 151, 193], "jacobian": [26, 27, 31, 33, 34, 35, 36, 37, 159, 160, 161], "than": [26, 27, 31, 33, 34, 35, 36, 37, 83, 89], "x_": [26, 27, 31, 32, 35, 46, 73, 75, 76, 77, 78, 80, 82, 83, 85, 86], "f_k": [26, 27, 31, 32, 35], "x_k": [26, 27, 31, 32, 35, 73, 83], "g_k": [26, 27, 31, 32, 35], "u_k": [26, 27, 31, 32, 35, 73, 83], "effort": [26, 27, 31, 32, 33, 34, 35, 36, 37], "next_stat": [26, 27, 31, 32, 33, 34, 35, 36, 37, 46, 73, 75, 80, 82, 83, 85], "vel": [26, 27, 28, 29, 37, 102, 217], "lineardynamicsbas": [27, 28, 31, 32, 46, 73, 75, 80, 82, 83, 85], "2d": [27, 30, 87, 89, 109, 110, 111, 112, 118, 133, 176, 179], "f_arg": [27, 28, 33, 34, 35, 36, 37, 46, 75, 80, 82, 85, 158, 159, 160, 161], "overridden": [27, 28, 32, 35, 36, 43, 47, 71, 77, 78, 88], "child": [27, 28, 32, 35, 36, 70, 77, 88], "maintain": [27, 28, 35, 45, 70, 74, 79, 81, 83, 84], "signatur": [27, 28, 32, 35, 43, 44, 45, 46, 47, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 159, 161], "allow": [27, 28, 35, 43, 45, 46, 47, 70, 74, 75, 76, 77, 79, 80, 81, 84, 85, 112, 131, 133, 178, 182, 183, 184, 187, 211], "wrapper": [27, 28, 35, 43, 44, 45, 47, 70, 74, 75, 76, 77, 79, 80, 81, 82, 84, 86, 177, 182, 183, 184, 185, 186, 187], "turn_rat": [28, 215], "08726646259971647": 28, "turn": [28, 29, 30, 88, 89, 125, 213, 217], "known": 28, "slight": [28, 30], "becaus": [28, 30, 33, 211], "instead": [28, 29, 30, 44, 79, 84, 104, 178], "includ": [28, 70, 85, 136, 210], "help": [28, 112, 211], "debug": [28, 88, 89, 133, 178, 179], "strictli": 28, "turn_rate_cor_tim": [29, 215], "nonlineardynamicsbas": [29, 30, 32, 33, 34, 37, 46, 75, 80, 82, 85], "unknown": 29, "wiener": 29, "markov": [29, 77], "neq": 29, "dot": [29, 30, 32, 36, 46, 73, 83, 89, 133, 159, 161], "omega": [29, 215], "w_": [29, 77, 78], "awgn": 29, "arguement": [29, 30, 45, 70, 74, 79, 81, 84], "use_continu": [29, 30, 33, 34, 36, 37], "been": [29, 30, 39, 45, 46, 70, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 88, 105, 133, 178, 179], "hardcod": [29, 30], "placehold": [29, 30, 32], "continu": [29, 30, 33, 34, 36, 37, 46, 73, 75, 80, 82, 83, 85, 208, 213, 214, 217], "These": [29, 30, 36, 39, 85, 104, 106, 208, 211], "cont_fnc_lst": [29, 30, 33, 34, 36, 37], "od": [29, 30, 33, 34, 36, 37, 46, 75, 80, 82, 85], "curvilinear": 30, "As": 30, "result": [30, 45, 70, 71, 72, 74, 79, 81, 84, 155, 162, 209], "kept": [30, 183], "360": 30, "begin": [30, 73, 83], "align": [30, 83, 96, 111, 113, 114, 124], "v": [30, 76, 77, 78, 86, 211, 215], "co": [30, 215], "psi": 30, "u_0": 30, "u_1": 30, "kei": [30, 43, 45, 47, 70, 74, 79, 81, 84, 89, 133, 171, 178, 179, 182, 183, 184, 185, 187], "word": 30, "doubl": [31, 125], "proc_cov": 31, "unus": 31, "built": [31, 141], "immut": 31, "sequenc": [31, 208], "constructor": [31, 44, 75, 85, 104], "empti": 31, "item": [31, 95, 214, 217], "control_model": [32, 214, 217], "state_constraint": [32, 214], "abc": [32, 88], "common": [32, 39, 103, 106, 143, 193], "modif": [32, 214, 217], "x_i": 32, "u_i": 32, "differenti": [32, 33, 36, 46, 158], "_i": 32, "abstract": [32, 35, 36, 43, 77, 88, 89], "wheel_separ": [33, 214], "258": [33, 214], "radiu": [33, 34, 169, 189, 200, 202, 214, 215, 217], "1675": 33, "drive": 33, "irobot": [33, 214], "predefin": [33, 141, 208], "themselv": [33, 208], "do": [33, 88, 124, 210, 211], "wheel": 33, "distanc": [33, 89, 112, 115, 116, 171, 214, 217], "two": [33, 117, 208], "bound": [33, 96, 111, 113, 114, 117, 128, 129, 131, 133, 135, 171, 193, 213, 214, 217], "box": [33, 96, 111, 113, 114, 117, 128, 129, 131, 135, 178, 179, 214, 215], "held": [33, 34, 36, 37], "constant": [33, 34, 36, 37, 46, 73, 75, 77, 78, 80, 82, 83, 85, 153, 171], "period": [33, 34, 36, 37], "contiuou": 33, "pos_x": 33, "pos_v": 33, "turn_angl": 33, "separ": 33, "karlgaar": 34, "ellipt": [34, 37], "dimensionless": 34, "sphereic": 34, "dim": 34, "az": 34, "elv": 34, "roc": 34, "own": [35, 36], "variabl": [35, 36, 43, 44, 45, 46, 47, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 133, 215], "remaind": [35, 36], "autogener": [35, 36], "integrator_typ": [36, 45, 46], "dopri5": [36, 46], "integrator_param": [36, 45, 46], "nan": [36, 215], "scipi": [36, 46, 75, 80, 82, 85], "mu": 37, "398600441800000": 37, "semi_major": 37, "eccentr": [37, 168, 170], "around": 37, "anoth": [37, 208], "vertic": 37, "horizont": 37, "lvlh": 37, "anomali": [37, 168, 170], "more": [37, 38, 44, 45, 70, 74, 79, 81, 84, 89, 135, 178, 179], "gravit": 37, "986004418": 37, "major": [37, 191, 211], "complic": [38, 44], "easi": 39, "well": [39, 86, 211], "except": [40, 41, 42, 80, 82, 85, 142, 182, 183, 184, 187, 211], "thrown": [40, 41, 42], "ill": 40, "happen": [40, 44, 208], "bad": 40, "inner": [40, 72, 76, 86], "bernoulli": 40, "glmb": 40, "pf": [41, 42], "deplet": 41, "domain": 42, "use_cholesky_invers": 43, "recommend": [43, 45, 46, 47, 70, 74, 77, 79, 81, 84, 178, 211], "inherit": [43, 47, 70, 71, 78, 80, 87, 88, 90], "choleski": 43, "decomposit": 43, "improv": [43, 44, 211], "stabil": 43, "increas": 43, "runtim": [43, 44, 79], "correct": [43, 44, 45, 46, 47, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 167, 215], "mea": [43, 44, 45, 46, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 215], "keep": [43, 47, 76, 77, 86, 171], "structur": [43, 47, 133], "load_filter_st": [43, 44, 45, 46, 47, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86], "filt_stat": [43, 44, 45, 46, 47, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86], "implemen": [43, 47], "instanc": [43, 44, 45, 47, 70, 73, 74, 75, 79, 81, 83, 84, 85, 88, 89, 104, 120, 178, 179, 189], "would": [43, 47, 211], "origin": [43, 47, 89, 133, 167], "predict": [43, 44, 45, 46, 47, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 189, 215], "save_filter_st": [43, 44, 45, 46, 47, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86], "load": [43, 47], "set_measurement_model": [43, 44, 45, 46, 47, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 215], "tset": [43, 47, 71], "importance_dist_fnc": 44, "importance_weight_fnc": [44, 45, 70, 74, 79, 81, 84], "particledistribut": [44, 76, 77, 78, 86], "rng": [44, 45, 70, 74, 78, 79, 81, 84, 88, 89, 94, 178, 179, 189, 193, 215, 217], "bayesfilt": [44, 47, 70, 73, 78], "strip": 44, "down": [44, 178, 179], "particlefilt": [44, 76, 77, 86], "altern": [44, 73, 83], "remov": [44, 77, 78, 86, 105, 211], "qualiti": 44, "life": 44, "featur": 44, "But": 44, "simpl": [44, 133, 176, 179], "advis": 44, "simpleparticledistribut": 44, "random": [44, 45, 70, 74, 76, 77, 78, 79, 81, 84, 86, 88, 89, 94, 124, 133, 178, 179, 189, 193, 215, 217], "within": [44, 208, 211, 214, 217], "nm": [44, 46, 73, 75, 76, 77, 78, 80, 82, 83, 85, 86], "gerr": 44, "particledepletionerror": 44, "sum": [44, 162, 165, 166, 214, 217], "dictionari": [44, 45, 46, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 89, 133, 171, 178, 179, 183, 185, 194], "import": [44, 45, 70, 74, 76, 77, 78, 79, 81, 84, 86, 135, 180, 213, 214, 215, 217], "sampl": [44, 45, 70, 74, 76, 77, 78, 79, 81, 84, 86, 94, 124, 189, 217], "so": [44, 45, 46, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 210, 211, 214], "restor": [44, 45, 46, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86], "later": [44, 45, 46, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 171], "bootstrap": [44, 45, 70, 74, 79, 81, 84], "kfgaussianscalemixturefilt": 45, "ekf": [45, 46, 80, 85], "document": [45, 74, 81, 207, 208, 210, 211], "purpos": [45, 74, 81, 210], "gsmfilterbas": [45, 74, 79, 84], "core_filt_kwarg": [45, 70, 74, 79, 81, 84], "gsm": [45, 70, 74, 79, 81, 84], "core": [45, 70, 74, 79, 81, 84], "filt_ind": [45, 70, 74, 79, 81, 84], "dist_ind": [45, 70, 74, 79, 81, 84], "bootstrapfilt": [45, 70, 74, 79, 81, 84], "keyword": [45, 70, 73, 74, 75, 79, 81, 83, 84, 85, 95, 159, 161, 192], "pickl": [45, 70, 71, 72, 74, 79, 81, 84], "dill": [45, 70, 71, 72, 74, 79, 81, 84], "due": [45, 70, 71, 72, 74, 79, 81, 84, 178, 179], "potenti": [45, 46, 70, 71, 72, 74, 75, 77, 78, 79, 80, 81, 82, 84, 85, 171], "set_meas_noise_model": [45, 70, 74, 79, 81, 84], "bootstrap_lst": [45, 70, 74, 79, 81, 84], "importance_weight_factory_lst": [45, 70, 74, 79, 81, 84], "gsm_lst": [45, 70, 74, 79, 81, 84], "num_part": [45, 70, 74, 79, 81, 84], "factori": [45, 70, 74, 79, 81, 84, 88], "serum": [45, 70, 74, 79, 81, 84, 94], "gaussianscalemixtur": [45, 70, 74, 79, 81, 84], "objecst": [45, 70, 74, 79, 81, 84], "latter": [45, 70, 74, 79, 81, 84], "construct": [45, 70, 74, 79, 81, 84], "wai": [45, 70, 74, 79, 81, 84], "independ": [45, 70, 74, 79, 81, 84], "alreadi": [45, 70, 74, 79, 81, 84, 178, 179], "actual": [45, 70, 74, 79, 81, 84], "bootrap": [45, 70, 74, 79, 81, 84], "routin": [45, 70, 74, 79, 81, 84, 150], "seed": [45, 70, 74, 79, 81, 84, 88, 89, 178, 179, 182, 183, 184, 185, 186, 187, 217], "incorrect": [45, 70, 74, 79, 81, 84, 133], "extendedkalmanfilt": [45, 75, 80, 82, 85, 215], "set_process_noise_model": [45, 70, 74, 79, 81, 84], "initial_est": [45, 70, 74, 79, 81, 84], "filter_length": [45, 70, 74, 79, 81, 84], "startup_delai": [45, 70, 74, 79, 81, 84], "past": [45, 70, 74, 79, 81, 84, 133], "impli": [45, 70, 74, 79, 81, 84, 210], "previous": [45, 70, 74, 79, 81, 84, 88], "delai": [45, 70, 74, 79, 81, 84], "rune": [45, 70, 74, 79, 81, 84], "fill": [45, 70, 74, 79, 81, 84], "fifo": [45, 70, 74, 79, 81, 84], "buffer": [45, 70, 74, 79, 81, 84, 182, 184, 187], "cont_cov": [45, 46, 215], "kalmanfilt": [45, 46, 74, 75, 80, 82, 83, 85, 215], "meas_nois": [45, 70, 73, 74, 76, 79, 81, 82, 84, 86, 215], "onlin": [45, 70, 74, 79, 81, 84], "proc_nois": [45, 70, 73, 74, 76, 79, 81, 82, 84, 86, 215], "dyn_obj": [46, 47, 71, 73, 75, 77, 78, 80, 82, 83, 85, 215], "ode_lst": [46, 75, 80, 82, 85], "loos": [46, 73], "meas_fun_arg": [46, 47, 71, 73, 77, 78, 80, 82, 83, 85], "extrememeasurementnoiseerror": [46, 73, 80, 82, 85], "fit": [46, 73, 80, 82, 83, 85, 210], "meas_fit_prob": [46, 73, 80, 82, 83, 85], "dyn_fun_param": [46, 75, 77, 78, 80, 82, 85], "int_t": 46, "phi": 46, "meas_mat": [46, 73, 75, 77, 78, 80, 82, 83, 85, 215], "meas_fun_lst": [46, 75, 77, 78, 85], "vari": [46, 73, 75, 77, 78, 83, 85, 124, 126], "tild": [46, 73, 75, 77, 78, 80, 82, 83, 85], "_": [46, 73, 75, 76, 77, 78, 80, 82, 83, 85, 86], "transform": [46, 73, 75, 77, 78, 80, 82, 83, 85, 114, 115, 116, 117, 138, 182, 184, 187], "rasi": [46, 73, 75, 77, 78, 80, 82, 83, 85], "set_measurement_noise_estim": [46, 73, 75, 80, 82, 83, 85], "properli": [46, 73, 75, 80, 82, 83, 85], "appropri": [46, 73, 75, 80, 82, 83, 85, 124, 178], "est_mea": [46, 73, 75, 80, 82, 83, 85], "kf": [46, 74, 85], "accord": [46, 73, 75, 80, 82, 83, 85, 88, 89, 133, 191], "callabal": [46, 75, 80, 82, 85], "just": [46, 75, 80, 82, 85, 124, 211], "like": [46, 75, 80, 82, 85, 211], "neither": [46, 88], "base_filt": 47, "meas_noise_list": [47, 71], "meas_list": [47, 71], "enable_proc_noise_estim": 70, "specif": [70, 132, 142, 182, 183, 184, 185, 186, 187, 211], "expos": [70, 74, 180], "up": [70, 88, 89, 133, 171, 172, 191, 208, 211], "interactingmultiplemodel": [71, 215], "gcifilt": 71, "imm": [71, 72], "set_model": [71, 72, 215], "filter_lst": [71, 72], "model_tran": [71, 72, 215], "init_mean": [71, 72, 215], "init_cov": [71, 72, 215], "sever": [72, 173], "select": [72, 77, 78, 86], "best": [72, 171], "simul": [73, 215], "cur_input": [73, 75, 80, 82, 83, 85], "state_mat_arg": [73, 75, 80, 82, 83, 85, 215], "input_mat_arg": [73, 75, 80, 82, 83, 85], "meas_fun": [73, 77, 78, 80, 82, 83], "measobj": [73, 83], "state_mat": [73, 75, 80, 82, 83, 85], "input_mat": [73, 75, 80, 82, 83, 85], "cont_tim": [73, 75, 80, 82, 83, 85], "state_mat_fun": [73, 75, 80, 82, 83, 85], "input_mat_fun": [73, 75, 80, 82, 83, 85], "expm": [73, 83], "left": [73, 83], "bmatrix": [73, 83], "right": [73, 83, 178, 179, 210], "matrixx": [73, 75, 80, 82, 83, 85], "inid": [73, 75, 80, 82, 83, 85], "improp": [73, 83], "mostli": [74, 183], "kernel_bandwidth": [75, 76], "unscentedkalmanfilt": [75, 76, 84, 86], "bandwidth": [75, 76], "kernel": [75, 76, 154, 156], "past_stat": [75, 76], "max": [75, 88, 171, 184, 213, 214], "ukf": [75, 76, 84, 85, 86], "init_sigma_point": [75, 84, 85], "state0": [75, 85, 133], "invalid": [75, 80, 82, 85, 178, 179], "unscentedparticlefilt": 76, "mcupf": 76, "extract_dist": [76, 77, 78, 86], "make_copi": [76, 77, 78, 86], "extract": [76, 77, 78, 86], "deepcopi": [76, 77, 78, 86], "init_from_dist": [76, 77, 78, 86], "dist": [76, 77, 78, 86, 214, 217], "init_particl": [76, 77, 78, 86], "particle_lst": [76, 77, 78, 86], "move_particl": [76, 77, 86], "old_weight": [76, 77, 86], "old_lik": [76, 86], "can_weight": [76, 86], "can_lik": [76, 86], "movement": [76, 77, 86], "mcmc": [76, 86], "move": [76, 77, 86, 88, 89, 112, 117, 133, 171], "modifi": [76, 78, 86, 105, 182, 183, 184, 185, 187, 194, 210, 212, 213, 217], "metropoli": [76, 86, 195], "hast": [76, 86, 195], "histogram": [76, 77, 78, 86], "heatmap": [76, 77, 78, 86], "count": [76, 77, 78, 86, 89], "plot_weighted_particl": [76, 77, 78, 86], "ukf_kwarg": [76, 86], "upf": [76, 86], "set_measur": [76, 86], "mcukf": 76, "meas_likelihood_fnc": [76, 77, 78, 86], "likelihood": [76, 77, 78, 86], "y_hat": [76, 77, 78, 86], "y_t": [76, 77, 78, 86], "vert": [76, 77, 78, 83, 86], "x_t": [76, 77, 78, 86], "w_t": [76, 77, 78, 86], "propto": [76, 86], "mathcal": [76, 86], "sync": [76, 86], "proposal_fnc": [76, 77, 78, 86], "propos": [76, 77, 78, 86], "hat": [76, 86], "_t": [76, 86, 214, 217], "proposal_sampling_fnc": [76, 77, 78, 86], "distribt": [76, 77, 78, 86], "transition_prob_fnc": [76, 77, 78, 86], "p_t": [76, 86], "use_mcmc": 77, "chain": 77, "mont": 77, "carlo": 77, "run": [77, 87, 168, 171, 208, 209, 211, 213, 214, 215, 217], "meas_likely_arg": [77, 78], "proposal_arg": [77, 78], "rel_lik": [77, 78, 86], "unnorm": [77, 78, 86], "inds_remov": [77, 78, 86], "were": [77, 78, 86, 133, 193], "sampling_arg": [77, 78], "transition_arg": [77, 78], "dyn_fun": [77, 78], "part_dist": 78, "resampl": 78, "sir": 78, "require_copy_prop_part": 78, "being": [78, 98, 133, 171, 211], "manipul": 78, "extern": 78, "require_copy_can_dist": 78, "candid": 78, "qkf": 79, "sqkf": [79, 81, 82], "howev": [79, 178, 179, 211], "better": [79, 135], "quadraturekalmanfilt": [79, 82], "easier": 80, "quadpoint": 80, "linalgerror": [80, 82, 85], "plot_quadratur": [80, 82], "Or": [80, 82], "qkfgaussianscalemixturefilt": 81, "squarerootqkf": 81, "dof": 83, "proc_noise_dof": 83, "meas_noise_dof": 83, "use_moment_match": 83, "limit": [83, 97, 210], "freedom": 83, "growth": 83, "gamma": [83, 155, 215], "pi": [83, 214, 215, 217], "sqrt": [83, 214, 215, 217], "compactli": 83, "st": 83, "np": [83, 158, 189, 190, 213, 214, 215, 217], "less": 83, "equal": [83, 178, 179, 214, 215], "calcualt": 83, "skqf": 84, "util": [84, 85, 146, 148, 150, 153, 162], "underli": [85, 179], "pure": 85, "simplif": 85, "made": [85, 89, 133, 208], "fix": [85, 195], "mcmcparticlefilterbas": 86, "move_kwarg": 86, "baseparam": [87, 88], "game": [87, 88, 89, 91, 103, 104, 106, 107, 108, 109, 112, 122, 124, 127, 133, 136, 144, 177, 178, 179], "physics2d": [87, 128, 129, 131, 135], "physics2dparam": 87, "start_tim": [87, 217], "max_tim": [87, 178], "To": [87, 209, 211], "unlimit": [87, 178], "config_fil": [88, 89, 133, 178, 179], "render_mod": [88, 89, 121, 133, 178, 179, 182, 183, 184, 185, 186, 187], "render_fp": [88, 89, 178, 179], "use_library_config": [88, 89], "logic": [88, 89, 97, 179], "entiti": [88, 89, 105, 107, 119, 122, 133, 178, 179], "subclass": 88, "entitymanag": [88, 104, 119], "render": [88, 89, 101, 112, 120, 121, 133, 178], "current_fram": 88, "score": [88, 89, 124, 130, 132, 133, 135], "accumul": 88, "game_ov": 88, "seed_val": 88, "fp": [88, 89, 122], "caus": [88, 89, 208], "parse_config_fil": [88, 89, 133], "register_param": [88, 89, 133], "regist": [88, 89, 133], "ruamel": [88, 89, 93, 133], "global": [88, 89, 93], "had": 88, "recreat": 88, "els": [88, 215], "s_collis": [88, 89, 133], "collis": [88, 89, 96, 113, 114, 117, 128, 129, 131, 133, 135, 189], "info": [88, 89, 97, 98, 99, 133, 178, 179], "s_game_ov": [88, 89, 133], "s_input": [88, 89, 133], "user": [88, 89, 133], "action": [88, 89, 133, 171, 178, 179, 182, 183, 184, 185, 186, 187, 209, 210], "s_movement": [88, 89, 133], "etc": [88, 89], "s_score": [88, 89, 132, 133], "abstact": [88, 89], "develop": [88, 208, 209], "respons": 88, "what": [88, 91, 111, 112, 118, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135], "infom": [88, 89, 133], "validate_config_fil": [88, 89, 133], "use_librari": [88, 89, 133], "cannot": [88, 89, 133], "basegam": 89, "done": [89, 178, 179, 211], "pygam": [89, 96, 101, 113, 114, 117, 118, 120, 121, 122, 123], "clock": [89, 120, 122], "window": [89, 90, 91, 114, 121, 122, 123, 133, 194, 211], "img": [89, 178, 179, 182, 183, 184, 185, 187], "pixel": [89, 91, 101, 102, 111, 114, 115, 116, 121, 122, 133, 184], "screen": [89, 122, 178, 179], "current_update_count": 89, "multipl": [89, 112, 133, 178, 179, 208, 211, 212], "dist_per_pix": [89, 115, 116], "real": [89, 112, 115, 116, 118, 128, 129, 133, 135, 171, 178], "width": [89, 91, 101, 111, 112, 114, 118, 121, 133, 171, 191, 213], "height": [89, 91, 101, 111, 112, 114, 118, 121, 133, 171, 191, 213], "append_name_to_kei": [89, 133], "in_dict": [89, 133], "prefix": [89, 133], "append": [89, 133], "place": [89, 133, 211], "prepend": [89, 133], "out": [89, 133, 178, 179, 210, 214, 217], "close": [89, 122, 123, 133, 172, 178, 179, 182, 183, 184, 185, 186, 187], "shutdown": [89, 133], "get_image_s": [89, 133], "s_render": [89, 133], "user_input": [89, 133], "integ": [89, 133, 178, 179], "id": [89, 99, 104, 105, 133, 178, 179, 208], "current_tim": [89, 133], "elapsed_tim": [89, 133], "amount": [89, 133], "elaps": [89, 133], "main": [90, 93, 112, 121, 122, 123, 130, 178, 179, 208, 215], "windowparam": 90, "dumper": 92, "interprett": 93, "came": 93, "b_type": 94, "loc": 94, "birth": [94, 124, 125, 131, 133], "through": [94, 112, 211], "randomli": 94, "capabl": [95, 131, 133, 135, 211], "hold": [95, 98, 99, 100, 133], "player": [95, 99, 130, 131, 133, 135, 178, 179], "chcking": 95, "aabb": 96, "rectangl": 96, "rect": [96, 101, 113, 114, 117], "pos_ind": [97, 133, 189, 217], "vel_ind": [97, 133], "state_low": [97, 133], "state_high": [97, 133], "rela": 97, "via": 97, "last_stat": 97, "lower": [97, 101, 133], "upper": [97, 133], "event": [98, 122, 127, 133, 208, 210], "identifi": [98, 105], "prob_of_death": [99, 128], "hazard": [99, 128, 130, 132, 133, 171, 179, 213], "death": [99, 132, 133], "entrance_tim": 99, "entranc": 99, "prioriti": [100, 135], "s_type": 101, "color": [101, 118, 192, 214, 215], "zorder": [101, 214, 215], "fpath": 101, "rgb": [101, 118, 183, 192], "triplet": [101, 118], "255": [101, 118], "sprite": 101, "sacl": 101, "spatial": 102, "center": [102, 128, 129, 135, 171, 214, 217], "last_po": 102, "__w": 103, "tox": [103, 209], "docs_html": [103, 211], "lib": 103, "python3": 103, "site": 103, "asset": 103, "e_id": 104, "tag": [104, 105, 208], "delet": [104, 105], "uniqu": [104, 133], "add_compon": 104, "comp": 104, "game_engin": [104, 124, 128, 129, 131, 133, 135], "destroi": [104, 133], "destruct": 104, "get_compon": 104, "has_compon": 104, "activ": 104, "aliv": 104, "creation": 105, "add_ent": 105, "queu": 105, "get_ent": 105, "get_entity_id": 105, "dead": [105, 133], "ones": [105, 193, 214, 215], "engin": [106, 109, 144], "low": 110, "graphic": 110, "step_factor": 112, "divid": 112, "increment": [112, 211], "inbetween": 112, "ensur": [112, 178, 179, 211], "don": 112, "too": 112, "far": 112, "min_po": [112, 115, 116, 171, 213, 217], "minimium": 112, "dist_width": 112, "world": 112, "dist_height": 112, "update_dt": 112, "bb1": [113, 117], "bb2": [113, 117], "bb": 114, "tran": 114, "leav": 114, "halt": 114, "ctransform": [114, 117], "out_sid": 114, "side": 114, "out_top": 114, "top": 114, "bottom": 114, "pt": [115, 116], "minimum": [115, 116, 132, 133, 134, 168, 171, 189], "translat": [115, 116], "trans1": 117, "trans2": 117, "resolv": 117, "collid": [117, 135], "cshape": 118, "drawabl": [119, 122], "human": [121, 122, 178, 179], "ignor": 121, "button": [122, 211], "hxwx3": 122, "nice": [123, 178, 179], "cbirth": [124, 133], "extra_param": [124, 126], "dimens": [124, 171, 183], "distrbut": 124, "affect": 124, "prob": 124, "doubleintegr": [125, 126, 214, 215, 217], "coordinatedturn": [125, 126], "velocity_turn": 125, "max_vel": [125, 134], "max_vel_x": 125, "max_vel_i": 125, "max_turn_r": 125, "controlmodel": 126, "controlmodelparam": 126, "stateconstraint": 126, "stateconstraintparam": 126, "enum": 127, "loc_x": [128, 129, 135], "loc_i": [128, 129, 135], "rendering2d": [128, 129, 131, 135], "shape2dparam": [128, 129, 131, 135], "collision2dparam": [128, 129, 131, 135], "dy": 128, "obstacl": [129, 130, 132, 133, 171, 189, 213, 214, 217], "base2dparam": 130, "playerparam": [130, 133], "targetparam": 130, "obstacleparam": 130, "hazardsparam": 130, "scoreparam": 130, "parametr": 131, "birthmodelparam": 131, "dynamicsparam": [131, 133], "hardwar": 131, "success": 131, "hit": [131, 132, 133], "simpleuav2d": [132, 179, 180], "hazard_multipli": 132, "death_scal": 132, "fo": 132, "death_decai": 132, "decai": 132, "death_penalti": 132, "time_penalti": 132, "missed_multipli": 132, "miss": 132, "wall_penalti": 132, "vel_penalti": 132, "extrem": 132, "min_vel_p": 132, "percentag": 132, "magnitud": 132, "basegame2d": 133, "uav": [133, 179], "static": 133, "cur_target_seq": 133, "target_seq": 133, "sort": 133, "ascend": [133, 167, 169], "all_cap": 133, "possibl": 133, "has_random_player_birth_tim": 133, "max_player_birth_tim": 133, "born": 133, "configuratin": 133, "basic_reward": 133, "reward": [133, 178, 179, 182, 183, 184, 185, 186, 187], "create_dynam": 133, "combo": 133, "create_hazard": 133, "create_obstacl": 133, "create_play": 133, "create_target": 133, "get_player_id": 133, "get_player_pos_vel_ind": 133, "get_player_state_bound": 133, "get_players_st": 133, "propagate_dynam": 133, "edyn": 133, "cdynam": 133, "met": [133, 178, 179], "spawn_play": 133, "spawn": 133, "spwan": 133, "min_vel": 134, "reltiv": 135, "avail": [135, 178, 179, 193, 211], "simpleuavhazards2d": [136, 180], "plan": [137, 171, 172, 209, 212, 213, 214, 217], "prebuilt": [145, 211], "mechan": 148, "fashion": 151, "epanechnikov": 154, "evalu": [154, 155, 156, 158, 159, 160, 161], "val": 154, "kernal": 154, "support": [155, 178], "complex": 155, "sig": 156, "fnc": [158, 159, 160, 161], "step_siz": [158, 160, 189], "0001220703125": 158, "hessian": 158, "central": [158, 159, 160, 161], "descript": 158, "finfo": 158, "ep": 158, "statespac": [159, 161], "jocobain": [159, 161], "jocobian": 159, "arguemnt": [159, 161], "get_jacobian": [159, 161], "jac": [159, 160, 161], "07": [160, 168], "argumet": 160, "jacobain": 160, "jaccobian": 161, "lst": 162, "log": [162, 208], "exponenti": 162, "trick": 162, "tot": 162, "classic": [163, 164], "rung": [163, 164], "kutta": [163, 164], "rk4": 164, "revers": 164, "p_lst": 165, "w_sum": [165, 166], "x_lst": 166, "lon_ascend": [167, 169], "lon_rat": 167, "tk": 167, "toe": 167, "node": [167, 169, 171, 189, 213], "week": 167, "ephemeri": 167, "mean_anom": 168, "ecc": [168, 170], "arg_lat": 169, "inc": 169, "inclin": 169, "ecc_anom": 170, "use_beam_search": [171, 213], "beam_search_max_nod": [171, 213], "30": [171, 213], "variou": 171, "gird": 171, "exampl": [171, 178, 179, 209, 212], "beam": [171, 216], "resolut": [171, 197], "set_map": [171, 213], "min": [171, 213, 214], "heurist": [171, 213], "funtion": 171, "overwritten": 171, "nuber": 171, "grid": [171, 172, 213, 215], "column": [171, 172, 185], "calc_heurist": 171, "endnod": 171, "curnod": 171, "goal": [171, 208], "calc_weight": [171, 213], "overridd": 171, "draw_end": 171, "draw_map": 171, "draw_start": 171, "startnod": 171, "final_path": 171, "closed_set": 171, "flatten": [171, 215], "get_map_cost": 171, "col": 171, "ind_to_po": 171, "colum": 171, "convers": 171, "is_valid": 171, "wall": 171, "start_po": [171, 213], "end_po": [171, 213], "functoin": 171, "escap": 171, "quit": 171, "effect": 171, "nx2": 171, "pos_to_ind": 171, "ravel_ind": 171, "multi_index": 171, "max_po": [171, 213, 217], "grid_r": [171, 213], "fourth": 171, "parent_idx": 172, "reinforc": 174, "learn": [174, 177], "rrt": [175, 189, 212, 216], "rl": [177, 178, 180], "openai": 177, "gym": [177, 178, 179, 181, 182, 183, 184, 185, 186, 187], "api": [177, 178, 179, 182, 184, 187, 209, 211], "compat": 177, "single_rgb_arrai": [178, 179], "obs_typ": 178, "player_st": 178, "aux_use_n_target": 178, "aux_use_tim": 178, "metadata": [178, 179, 182, 183, 184, 185, 186, 187], "plai": 178, "legaci": 178, "observ": [178, 179, 182, 183, 184, 185, 186, 187], "auxilari": [178, 179], "visibl": 178, "surpass": 178, "episod": [178, 179], "truncat": [178, 179], "observation_spac": [178, 182, 183, 184, 185, 186, 187], "calc_obs_spac": [178, 179], "aux": [178, 179], "both": [178, 179], "shut": [178, 179], "gen_act_map": [178, 179], "act_map": [178, 179], "return_info": [178, 179], "moreov": [178, 179], "typic": [178, 179], "never": [178, 179], "again": [178, 179], "prng": [178, 179], "chosen": [178, 179], "entropi": [178, 179], "timestamp": [178, 179], "dev": [178, 179, 211], "urandom": [178, 179], "you": [178, 179, 208, 211], "even": [178, 179], "usual": [178, 179], "want": [178, 179], "along": [178, 179], "analog": [178, 179], "additon": [178, 179], "deprec": [178, 179], "pseudorandom": [178, 179], "we": [178, 179], "captur": [178, 179], "aren": [178, 179], "accident": [178, 179], "reproduc": [178, 179], "often": [178, 179], "won": [178, 179, 208], "action_spac": [178, 179, 182, 183, 184, 185, 186, 187], "acttyp": [178, 179, 182, 183, 184, 185, 186, 187], "float32": [178, 179], "np_random": [178, 179, 182, 183, 184, 185, 186, 187], "randomnumbergener": [178, 179, 182, 183, 184, 185, 186, 187], "_np_random": [178, 179], "initialis": [178, 179], "unwrap": [178, 179, 182, 183, 184, 185, 186, 187], "wrap": [178, 179, 182, 183, 184, 185, 186, 187], "num_stack": [182, 184, 187], "observationwrapp": [182, 183, 184, 185, 187], "similar": [182, 184, 187], "open": [182, 183, 184, 187, 211], "ai": [182, 183, 184, 187], "insid": [182, 183, 184, 187], "lazyfram": [182, 184, 187], "modular": [182, 184, 187], "new_step_api": [182, 184, 187], "whether": [182, 184, 187, 210], "classmethod": [182, 183, 184, 185, 186, 187], "class_nam": [182, 183, 184, 185, 186, 187], "ob": [182, 183, 184, 185, 187, 214, 217], "proper": [182, 183, 184, 185, 187, 194], "self": [182, 183, 184, 185, 187], "str": [182, 183, 184, 185, 186, 187], "reward_rang": [182, 183, 184, 185, 186, 187], "supportsfloat": [182, 183, 184, 185, 186, 187], "spec": [182, 183, 184, 185, 186, 187], "keep_dim": 183, "grai": 183, "initialz": 183, "channel": 183, "teh": 183, "n_row": 185, "n_col": 185, "resiz": 185, "frame_skip": 186, "obstyp": 186, "stack": 187, "averag": 187, "lqrrrtstar": [188, 217], "planner": [189, 217], "goal_sample_r": 189, "300": [189, 215, 217], "connect_circle_dist": 189, "expand_di": 189, "sampling_fun": [189, 217], "node_list": 189, "tree": [189, 190], "min_rand": 189, "max_rand": 189, "radnom": 189, "ell_con": 189, "ellipsoid": 189, "nob": 189, "obstacle_list": 189, "describ": 189, "riccatti": 189, "sv": 190, "n_sig": 191, "caluc": 191, "dark2": 192, "thata": 192, "distinct": 192, "mpl": 192, "colormap": 192, "pyplot": [192, 215], "cm": 192, "sig_bnd": 193, "true_stat": 193, "pcg64": 193, "0x7f8feb7fec80": 193, "meas_ind": 193, "ttl_fontsiz": 193, "ttl_fontstyl": 193, "ttl_fontfamili": 193, "san": 193, "serif": 193, "ax_fonts": 193, "ax_fontstyl": 193, "ax_fontfamili": 193, "legend": 193, "rnd": [193, 215], "default_rng": [193, 215, 217], "gate": 193, "font": 193, "style": [193, 194], "famili": [193, 194], "opt": [193, 194], "z_lbl": 194, "use_loc": 194, "matplot": 194, "edit": [194, 211], "ax": [194, 214, 215], "becom": 194, "suptitl": [194, 215], "confirm": 195, "fget": 196, "fset": 196, "mro": 197, "func": 198, "earth": 199, "east": 200, "west": 200, "north": 202, "south": 202, "v_n": 203, "transport": 203, "bin_fil": 206, "below": 207, "constantli": 208, "test": [208, 209, 211], "upon": 208, "push": 208, "repo": [208, 211], "project": [208, 211], "achiev": 208, "technologi": 208, "travi": 208, "jenkin": 208, "workflow": [208, 209], "autom": [208, 211], "releas": 208, "python": [208, 209, 211], "build": [208, 211], "publish": [208, 210], "them": [208, 211], "registri": 208, "gh": 208, "branch": 208, "websit": 208, "commit": [208, 211], "messag": 208, "summar": 208, "yml": 208, "syntax": 208, "job": 208, "parallel": 208, "trigger": 208, "execut": 208, "remot": 208, "your": [208, 211], "git": [208, 211], "now": [208, 211], "addition": [208, 211], "server": 208, "NOT": [208, 210], "machin": [208, 211], "fresh": 208, "clean": 208, "diretori": 208, "runner": 208, "typicali": 208, "checkout": 208, "sequenti": 208, "wherea": 208, "usag": 209, "toolchain": 209, "ci": 209, "pipelin": 209, "github": 209, "quick": 209, "guid": 209, "coverag": [209, 211], "lager": 209, "homepag": 209, "licens": 209, "laboratori": 209, "autonomi": 209, "alabama": 209, "ua": 209, "simpli": [209, 211], "pip": 209, "instal": [209, 211], "pleas": 209, "framework": 209, "misc": 209, "author": [209, 210], "jordan": [209, 210], "larson": [209, 210], "ryan": 209, "thoma": 209, "vincent": 209, "hill": 209, "vaughn": 209, "weiren": 209, "howpublish": 209, "web": [209, 211], "ython": 209, "uidanc": 209, "avig": 209, "ontrol": 209, "year": 209, "2019": 209, "com": 209, "drjdlarson": 209, "mit": 210, "copyright": 210, "2020": 210, "permiss": 210, "herebi": 210, "grant": 210, "free": 210, "charg": 210, "person": 210, "obtain": 210, "softwar": 210, "deal": 210, "restrict": 210, "merg": 210, "sublicens": 210, "sell": 210, "permit": 210, "whom": 210, "furnish": 210, "subject": 210, "abov": 210, "notic": 210, "shall": 210, "substanti": 210, "THE": 210, "AS": 210, "warranti": 210, "OF": 210, "kind": 210, "express": 210, "OR": 210, "BUT": 210, "TO": 210, "merchant": 210, "FOR": 210, "particular": 210, "AND": 210, "noninfring": 210, "IN": 210, "NO": 210, "holder": 210, "BE": 210, "liabl": 210, "claim": 210, "damag": 210, "liabil": 210, "contract": 210, "tort": 210, "aris": 210, "connect": [210, 211], "WITH": 210, "how": [211, 212], "pytest": 211, "summari": 211, "sphinx": 211, "black": 211, "formatt": 211, "auto": 211, "semant": 211, "break": 211, "docker": 211, "tool": 211, "compil": 211, "overview": 211, "eas": 211, "sure": [211, 217], "mac": 211, "linux": 211, "clone": 211, "repositori": 211, "subsystem": 211, "sub": 211, "folder": 211, "access": 211, "browser": 211, "wsl": 211, "address": 211, "click": 211, "distro": 211, "Then": 211, "prompt": 211, "ye": 211, "palett": 211, "ie": 211, "view": 211, "attempt": 211, "those": 211, "mark": 211, "slow": 211, "comment": 211, "pull": 211, "correctli": 211, "clean_doc": 211, "documen": 211, "html": 211, "doc": 211, "virtual": 211, "ini": 211, "envrion": 211, "av": 211, "replac": 211, "runslow": 211, "py39": 211, "validation_test": 211, "live": 211, "horzon": 212, "elqr": [212, 216], "interact": 212, "def": [213, 214, 215, 217], "normal_a_star": 213, "a_star": 213, "astar": 213, "50": [213, 214, 217], "concaten": 213, "61": 213, "40": 213, "44": 213, "36": 213, "75": 213, "region": 213, "beam_search": 213, "rememb": 213, "weighted_a_star": 213, "overrid": 213, "linear_inf_horizon": 214, "gdyn": [214, 217], "reshap": [214, 215, 217], "lambda": [214, 217], "_arg": [214, 217], "ey": [214, 215, 217], "len": [214, 217], "linear_finite_horizon": 214, "200": [214, 215], "nonlin_finite_hor": 214, "d2r": [214, 215, 217], "180": [214, 215, 217], "45": 214, "curvilinearmot": [214, 217], "diag": [214, 215, 217], "gplot": [214, 215], "gctrl": [214, 217], "irobotcr": 214, "150": 214, "start_stat": [214, 217], "335": 214, "circular": [214, 217], "35": [214, 217], "enviorn": [214, 217], "bottom_left": 214, "top_right": 214, "obs_factor": [214, 217], "scale_factor": [214, 217], "non_quadratic_cost": [214, 217], "_obstacl": [214, 217], "_obs_factor": [214, 217], "_scale_factor": [214, 217], "_bottom_left": [214, 217], "_top_right": [214, 217], "diff": [214, 217], "ravel": [214, 215, 217], "sign": [214, 217], "signed_dist": [214, 217], "ii": [214, 215, 217], "enumer": [214, 215, 217], "obect": 214, "plt": [214, 215], "add_subplot": [214, 215], "set_aspect": [214, 215], "adjust": [214, 215], "set_xlim": 214, "set_ylim": 214, "scatter": 214, "add_patch": 214, "set_title_label": [214, 215], "state_trajectori": 214, "control_sign": 214, "modify_quadrat": 214, "rot_cost": [214, 217], "vstack": [214, 217], "m_nois": 215, "02": 215, "p_nois": 215, "t0": 215, "t1": 215, "arang": 215, "filt": 215, "m_mat": 215, "truth": 215, "std": 215, "t_state": 215, "kk": 215, "n_state": 215, "standard_norm": 215, "est": 215, "set_ylabel": 215, "tight_layout": 215, "coordinatedturnunknown": 215, "coordinatedturnknown": 215, "r2d": 215, "p_posx_std": 215, "p_posy_std": 215, "p_velx_std": 215, "p_vely_std": 215, "p_turn_std": 215, "m_posx_std": 215, "m_posy_std": 215, "truedyn": 215, "coordturn": 215, "linestyl": 215, "002": 215, "004": 215, "dyn_obj1": 215, "dyn_obj2": 215, "in_filt1": 215, "in_filt2": 215, "vx0": 215, "vy0": 215, "filt_list": 215, "pre_std": 215, "err": 215, "set_xlabel": 215, "fig2": 215, "ab": 215, "deviat": 215, "lin_lqrrrtstar": 217, "rrt_star": 217, "minxi": 217, "maxxi": 217, "search_area": 217, "sampler": 217, "uniform": 217, "set_environ": 217, "set_control_model": 217, "u_traj": 217, "use_converg": 217, "nonlin_lqrrrtstar": 217, "ang": 217, "90": 217, "001": 217, "bnd": 217, "while": 217, "elqrrrtstar": 217, "extendedlqrrrtstar": 217, "controller_arg": 217, "05": 217, "show_plann": 217}, "objects": {"": [[1, 0, 0, "-", "gncpy"]], "gncpy": [[137, 0, 0, "-", "control"], [138, 0, 0, "-", "coordinate_transforms"], [139, 0, 0, "-", "data_fusion"], [140, 0, 0, "-", "distributions"], [141, 0, 0, "-", "dynamics"], [142, 0, 0, "-", "errors"], [143, 0, 0, "-", "filters"], [144, 0, 0, "-", "game_engine"], [145, 0, 0, "-", "games"], [146, 0, 0, "-", "math"], [147, 0, 0, "-", "measurements"], [148, 0, 0, "-", "orbital_mechanics"], [149, 0, 0, "-", "planning"], [150, 0, 0, "-", "plotting"], [151, 0, 0, "-", "sampling"], [152, 0, 0, "-", "utilities"], [153, 0, 0, "-", "wgs84"]], "gncpy.control": [[2, 1, 1, "", "ELQR"], [3, 1, 1, "", "LQR"]], "gncpy.control.ELQR": [[2, 2, 1, "", "Q"], [2, 2, 1, "", "R"], [2, 3, 1, "", "__init__"], [2, 3, 1, "", "backward_pass"], [2, 3, 1, "", "calculate_control"], [2, 3, 1, "", "cost_function"], [2, 4, 1, "", "ct_come_mats"], [2, 4, 1, "", "ct_come_vecs"], [2, 2, 1, "", "dt"], [2, 3, 1, "", "forward_pass"], [2, 3, 1, "", "get_state_space"], [2, 4, 1, "", "gif_frame_skip"], [2, 4, 1, "", "max_iters"], [2, 3, 1, "", "prop_state"], [2, 3, 1, "", "prop_state_backward"], [2, 3, 1, "", "prop_state_forward"], [2, 3, 1, "", "quadratize_cost"], [2, 3, 1, "", "reset"], [2, 3, 1, "", "set_cost_model"], [2, 3, 1, "", "set_state_model"], [2, 3, 1, "", "solve_dare"], [2, 4, 1, "", "tol"], [2, 4, 1, "", "use_custom_cost"]], "gncpy.control.LQR": [[3, 2, 1, "", "Q"], [3, 2, 1, "", "R"], [3, 3, 1, "", "__init__"], [3, 3, 1, "", "backward_pass"], [3, 3, 1, "", "calculate_control"], [3, 3, 1, "", "cost_function"], [3, 4, 1, "", "ct_go_mats"], [3, 4, 1, "", "ct_go_vecs"], [3, 2, 1, "", "dt"], [3, 4, 1, "", "dynObj"], [3, 4, 1, "", "end_state"], [3, 4, 1, "", "feedback_gain"], [3, 4, 1, "", "feedthrough_gain"], [3, 3, 1, "", "get_state_space"], [3, 4, 1, "", "hard_constraints"], [3, 3, 1, "", "prop_state"], [3, 3, 1, "", "prop_state_backward"], [3, 3, 1, "", "set_cost_model"], [3, 3, 1, "", "set_state_model"], [3, 3, 1, "", "solve_dare"], [3, 4, 1, "", "time_horizon"], [3, 4, 1, "", "u_nom"]], "gncpy.coordinate_transforms": [[4, 5, 1, "", "ecef_to_LLA"], [5, 5, 1, "", "ecef_to_NED"], [6, 5, 1, "", "lla_to_ECEF"], [7, 5, 1, "", "lla_to_NED"], [8, 5, 1, "", "ned_to_LLA"]], "gncpy.data_fusion": [[9, 5, 1, "", "GeneralizedCovarianceIntersection"]], "gncpy.distributions": [[10, 1, 1, "", "Particle"], [11, 1, 1, "", "ParticleDistribution"], [12, 1, 1, "", "QuadraturePoints"], [13, 1, 1, "", "SigmaPoints"], [14, 1, 1, "", "SimpleParticleDistribution"]], "gncpy.distributions.Particle": [[10, 3, 1, "", "__init__"], [10, 2, 1, "", "mean"], [10, 4, 1, "", "point"], [10, 4, 1, "", "sigmaPoints"], [10, 4, 1, "", "uncertainty"]], "gncpy.distributions.ParticleDistribution": [[11, 3, 1, "", "__init__"], [11, 3, 1, "", "add_particle"], [11, 3, 1, "", "clear_particles"], [11, 2, 1, "", "covariance"], [11, 2, 1, "", "mean"], [11, 2, 1, "", "num_particles"], [11, 2, 1, "", "particles"], [11, 2, 1, "", "uncertainties"], [11, 3, 1, "", "update_weights"], [11, 2, 1, "", "weights"]], "gncpy.distributions.QuadraturePoints": [[12, 3, 1, "", "__init__"], [12, 2, 1, "", "cov"], [12, 2, 1, "", "mean"], [12, 4, 1, "", "num_axes"], [12, 2, 1, "", "num_points"], [12, 3, 1, "", "plot_points"], [12, 4, 1, "", "points"], [12, 4, 1, "", "points_per_axis"], [12, 3, 1, "", "update_points"], [12, 4, 1, "", "weights"]], "gncpy.distributions.SigmaPoints": [[13, 3, 1, "", "__init__"], [13, 4, 1, "", "alpha"], [13, 4, 1, "", "beta"], [13, 2, 1, "", "cov"], [13, 3, 1, "", "init_weights"], [13, 4, 1, "", "kappa"], [13, 2, 1, "", "lam"], [13, 2, 1, "", "mean"], [13, 2, 1, "", "num_points"], [13, 3, 1, "", "plot_points"], [13, 3, 1, "", "update_points"], [13, 2, 1, "", "weights_cov"], [13, 2, 1, "", "weights_mean"]], "gncpy.distributions.SimpleParticleDistribution": [[14, 3, 1, "", "__init__"], [14, 3, 1, "", "plot_particles"]], "gncpy.dynamics": [[38, 0, 0, "-", "aircraft"], [39, 0, 0, "-", "basic"]], "gncpy.dynamics.aircraft": [[15, 0, 0, "-", "simple_multirotor"]], "gncpy.dynamics.aircraft.simple_multirotor": [[16, 1, 1, "", "AeroParams"], [17, 1, 1, "", "AircraftParams"], [18, 1, 1, "", "Effector"], [19, 1, 1, "", "Environment"], [20, 1, 1, "", "GeoParams"], [21, 1, 1, "", "MassParams"], [22, 1, 1, "", "MotorParams"], [23, 1, 1, "", "PropParams"], [24, 1, 1, "", "SimpleMultirotor"], [25, 1, 1, "", "Vehicle"]], "gncpy.dynamics.aircraft.simple_multirotor.AeroParams": [[16, 3, 1, "", "__init__"], [16, 4, 1, "", "cd"]], "gncpy.dynamics.aircraft.simple_multirotor.AircraftParams": [[17, 3, 1, "", "__init__"], [17, 4, 1, "", "aero"], [17, 4, 1, "", "geo"], [17, 4, 1, "", "mass"], [17, 4, 1, "", "motor"], [17, 4, 1, "", "prop"]], "gncpy.dynamics.aircraft.simple_multirotor.Effector": [[18, 3, 1, "", "__init__"], [18, 3, 1, "", "step"]], "gncpy.dynamics.aircraft.simple_multirotor.Environment": [[19, 3, 1, "", "__init__"], [19, 4, 1, "", "state"], [19, 3, 1, "", "step"]], "gncpy.dynamics.aircraft.simple_multirotor.GeoParams": [[20, 3, 1, "", "__init__"], [20, 4, 1, "", "front_area_m2"]], "gncpy.dynamics.aircraft.simple_multirotor.MassParams": [[21, 3, 1, "", "__init__"], [21, 4, 1, "", "cg_m"], [21, 4, 1, "", "inertia_kgm2"], [21, 4, 1, "", "mass_kg"]], "gncpy.dynamics.aircraft.simple_multirotor.MotorParams": [[22, 3, 1, "", "__init__"], [22, 4, 1, "", "dir"], [22, 2, 1, "", "num_motors"], [22, 4, 1, "", "pos_m"]], "gncpy.dynamics.aircraft.simple_multirotor.PropParams": [[23, 3, 1, "", "__init__"], [23, 4, 1, "", "poly_thrust"], [23, 4, 1, "", "poly_torque"]], "gncpy.dynamics.aircraft.simple_multirotor.SimpleMultirotor": [[24, 3, 1, "", "__init__"], [24, 4, 1, "", "effector"], [24, 4, 1, "", "env"], [24, 3, 1, "", "get_input_mat"], [24, 3, 1, "", "get_state_mat"], [24, 3, 1, "", "propagate_state"], [24, 3, 1, "", "set_initial_conditions"], [24, 4, 1, "", "state_map"], [24, 4, 1, "", "state_names"], [24, 4, 1, "", "state_units"], [24, 3, 1, "", "validate_params_file"], [24, 4, 1, "", "vehicle"]], "gncpy.dynamics.aircraft.simple_multirotor.Vehicle": [[25, 3, 1, "", "__init__"], [25, 3, 1, "", "calc_derived_states"], [25, 3, 1, "", "eul_to_dcm"], [25, 4, 1, "", "params"], [25, 4, 1, "", "ref_lat"], [25, 4, 1, "", "ref_lon"], [25, 3, 1, "", "set_dcm_earth2body"], [25, 4, 1, "", "state"], [25, 3, 1, "", "step"], [25, 4, 1, "", "takenoff"]], "gncpy.dynamics.basic": [[26, 1, 1, "", "ClohessyWiltshireOrbit"], [27, 1, 1, "", "ClohessyWiltshireOrbit2d"], [28, 1, 1, "", "CoordinatedTurnKnown"], [29, 1, 1, "", "CoordinatedTurnUnknown"], [30, 1, 1, "", "CurvilinearMotion"], [31, 1, 1, "", "DoubleIntegrator"], [32, 1, 1, "", "DynamicsBase"], [33, 1, 1, "", "IRobotCreate"], [34, 1, 1, "", "KarlgaardOrbit"], [35, 1, 1, "", "LinearDynamicsBase"], [36, 1, 1, "", "NonlinearDynamicsBase"], [37, 1, 1, "", "TschaunerHempelOrbit"]], "gncpy.dynamics.basic.ClohessyWiltshireOrbit": [[26, 3, 1, "", "__init__"], [26, 3, 1, "", "get_dis_process_noise_mat"], [26, 3, 1, "", "get_input_mat"], [26, 3, 1, "", "get_state_mat"], [26, 4, 1, "", "mean_motion"], [26, 3, 1, "", "propagate_state"], [26, 4, 1, "", "state_names"]], "gncpy.dynamics.basic.ClohessyWiltshireOrbit2d": [[27, 3, 1, "", "__init__"], [27, 3, 1, "", "get_dis_process_noise_mat"], [27, 3, 1, "", "get_input_mat"], [27, 3, 1, "", "get_state_mat"], [27, 4, 1, "", "mean_motion"], [27, 3, 1, "", "propagate_state"], [27, 4, 1, "", "state_names"]], "gncpy.dynamics.basic.CoordinatedTurnKnown": [[28, 3, 1, "", "__init__"], [28, 3, 1, "", "get_dis_process_noise_mat"], [28, 3, 1, "", "get_input_mat"], [28, 3, 1, "", "get_state_mat"], [28, 3, 1, "", "propagate_state"], [28, 4, 1, "", "state_names"], [28, 4, 1, "", "turn_rate"]], "gncpy.dynamics.basic.CoordinatedTurnUnknown": [[29, 3, 1, "", "__init__"], [29, 2, 1, "", "alpha"], [29, 2, 1, "", "beta"], [29, 2, 1, "", "cont_fnc_lst"], [29, 3, 1, "", "get_input_mat"], [29, 3, 1, "", "get_state_mat"], [29, 3, 1, "", "propagate_state"], [29, 4, 1, "", "state_names"], [29, 4, 1, "", "turn_rate_cor_time"]], "gncpy.dynamics.basic.CurvilinearMotion": [[30, 3, 1, "", "__init__"], [30, 2, 1, "", "cont_fnc_lst"], [30, 3, 1, "", "get_input_mat"], [30, 3, 1, "", "get_state_mat"], [30, 3, 1, "", "propagate_state"], [30, 4, 1, "", "state_names"]], "gncpy.dynamics.basic.DoubleIntegrator": [[31, 3, 1, "", "__init__"], [31, 3, 1, "", "get_dis_process_noise_mat"], [31, 3, 1, "", "get_input_mat"], [31, 3, 1, "", "get_state_mat"], [31, 3, 1, "", "propagate_state"], [31, 2, 1, "", "state_names"]], "gncpy.dynamics.basic.DynamicsBase": [[32, 3, 1, "", "__init__"], [32, 4, 1, "", "control_model"], [32, 3, 1, "", "get_input_mat"], [32, 3, 1, "", "get_state_mat"], [32, 3, 1, "", "propagate_state"], [32, 4, 1, "", "state_constraint"], [32, 4, 1, "", "state_names"]], "gncpy.dynamics.basic.IRobotCreate": [[33, 3, 1, "", "__init__"], [33, 2, 1, "", "cont_fnc_lst"], [33, 3, 1, "", "get_input_mat"], [33, 3, 1, "", "get_state_mat"], [33, 3, 1, "", "propagate_state"], [33, 4, 1, "", "state_names"], [33, 2, 1, "", "wheel_separation"]], "gncpy.dynamics.basic.KarlgaardOrbit": [[34, 3, 1, "", "__init__"], [34, 2, 1, "", "cont_fnc_lst"], [34, 3, 1, "", "get_input_mat"], [34, 3, 1, "", "get_state_mat"], [34, 3, 1, "", "propagate_state"], [34, 4, 1, "", "state_names"]], "gncpy.dynamics.basic.LinearDynamicsBase": [[35, 3, 1, "", "__init__"], [35, 3, 1, "", "get_dis_process_noise_mat"], [35, 3, 1, "", "get_input_mat"], [35, 3, 1, "", "get_state_mat"], [35, 3, 1, "", "propagate_state"], [35, 4, 1, "", "state_names"]], "gncpy.dynamics.basic.NonlinearDynamicsBase": [[36, 3, 1, "", "__init__"], [36, 2, 1, "", "cont_fnc_lst"], [36, 4, 1, "", "dt"], [36, 3, 1, "", "get_input_mat"], [36, 3, 1, "", "get_state_mat"], [36, 4, 1, "", "integrator_params"], [36, 4, 1, "", "integrator_type"], [36, 3, 1, "", "propagate_state"], [36, 4, 1, "", "state_names"]], "gncpy.dynamics.basic.TschaunerHempelOrbit": [[37, 3, 1, "", "__init__"], [37, 2, 1, "", "cont_fnc_lst"], [37, 4, 1, "", "eccentricity"], [37, 3, 1, "", "get_input_mat"], [37, 3, 1, "", "get_state_mat"], [37, 4, 1, "", "mu"], [37, 3, 1, "", "propagate_state"], [37, 4, 1, "", "semi_major"], [37, 4, 1, "", "state_names"]], "gncpy.errors": [[40, 6, 1, "", "ExtremeMeasurementNoiseError"], [41, 6, 1, "", "ParticleDepletionError"], [42, 6, 1, "", "ParticleEstimationDomainError"]], "gncpy.filters": [[48, 0, 0, "-", "bayes_filter"], [49, 0, 0, "-", "bootstrap_filter"], [50, 0, 0, "-", "ekf_gaussian_scale_mixture_filter"], [51, 0, 0, "-", "extended_kalman_filter"], [52, 0, 0, "-", "gci_filter"], [53, 0, 0, "-", "gsm_filter_base"], [54, 0, 0, "-", "imm_gci_filter"], [55, 0, 0, "-", "interacting_multiple_model"], [56, 0, 0, "-", "kalman_filter"], [57, 0, 0, "-", "kf_gaussian_scale_mixture_filter"], [58, 0, 0, "-", "max_corr_ent_ukf"], [59, 0, 0, "-", "max_corr_ent_upf"], [60, 0, 0, "-", "mcmc_particle_filter_base"], [61, 0, 0, "-", "particle_filter"], [62, 0, 0, "-", "qkf_gaussian_scale_mixture_filter"], [63, 0, 0, "-", "quadrature_kalman_filter"], [64, 0, 0, "-", "sqkf_gaussian_scale_mixture_filter"], [65, 0, 0, "-", "square_root_qkf"], [66, 0, 0, "-", "students_t_filter"], [67, 0, 0, "-", "ukf_gaussian_scale_mixture_filter"], [68, 0, 0, "-", "unscented_kalman_filter"], [69, 0, 0, "-", "unscented_particle_filter"]], "gncpy.filters.bayes_filter": [[43, 1, 1, "", "BayesFilter"]], "gncpy.filters.bayes_filter.BayesFilter": [[43, 3, 1, "", "__init__"], [43, 3, 1, "", "correct"], [43, 3, 1, "", "load_filter_state"], [43, 3, 1, "", "predict"], [43, 3, 1, "", "save_filter_state"], [43, 3, 1, "", "set_measurement_model"], [43, 3, 1, "", "set_state_model"], [43, 4, 1, "", "use_cholesky_inverse"]], "gncpy.filters.bootstrap_filter": [[44, 1, 1, "", "BootstrapFilter"]], "gncpy.filters.bootstrap_filter.BootstrapFilter": [[44, 3, 1, "", "__init__"], [44, 3, 1, "", "correct"], [44, 4, 1, "", "filt_state"], [44, 3, 1, "", "load_filter_state"], [44, 3, 1, "", "plot_particles"], [44, 3, 1, "", "predict"], [44, 3, 1, "", "save_filter_state"], [44, 3, 1, "", "set_measurement_model"], [44, 3, 1, "", "set_state_model"]], "gncpy.filters.ekf_gaussian_scale_mixture_filter": [[45, 1, 1, "", "EKFGaussianScaleMixtureFilter"]], "gncpy.filters.ekf_gaussian_scale_mixture_filter.EKFGaussianScaleMixtureFilter": [[45, 3, 1, "", "__init__"], [45, 2, 1, "", "cont_cov"], [45, 3, 1, "", "correct"], [45, 2, 1, "", "cov"], [45, 2, 1, "", "dt"], [45, 4, 1, "", "filt_state"], [45, 2, 1, "", "integrator_params"], [45, 2, 1, "", "integrator_type"], [45, 3, 1, "", "load_filter_state"], [45, 2, 1, "", "meas_noise"], [45, 3, 1, "", "plot_particles"], [45, 3, 1, "", "predict"], [45, 2, 1, "", "proc_noise"], [45, 3, 1, "", "save_filter_state"], [45, 3, 1, "", "set_meas_noise_model"], [45, 3, 1, "", "set_measurement_model"], [45, 3, 1, "", "set_process_noise_model"], [45, 3, 1, "", "set_state_model"]], "gncpy.filters.extended_kalman_filter": [[46, 1, 1, "", "ExtendedKalmanFilter"]], "gncpy.filters.extended_kalman_filter.ExtendedKalmanFilter": [[46, 3, 1, "", "__init__"], [46, 4, 1, "", "cont_cov"], [46, 3, 1, "", "correct"], [46, 4, 1, "", "filt_state"], [46, 4, 1, "", "integrator_params"], [46, 4, 1, "", "integrator_type"], [46, 3, 1, "", "load_filter_state"], [46, 3, 1, "", "predict"], [46, 3, 1, "", "save_filter_state"], [46, 3, 1, "", "set_measurement_model"], [46, 3, 1, "", "set_measurement_noise_estimator"], [46, 3, 1, "", "set_state_model"]], "gncpy.filters.gci_filter": [[47, 1, 1, "", "GCIFilter"]], "gncpy.filters.gci_filter.GCIFilter": [[47, 3, 1, "", "__init__"], [47, 3, 1, "", "correct"], [47, 3, 1, "", "load_filter_state"], [47, 3, 1, "", "predict"], [47, 3, 1, "", "save_filter_state"], [47, 3, 1, "", "set_measurement_model"], [47, 3, 1, "", "set_state_model"]], "gncpy.filters.gsm_filter_base": [[70, 1, 1, "", "GSMFilterBase"]], "gncpy.filters.gsm_filter_base.GSMFilterBase": [[70, 3, 1, "", "__init__"], [70, 3, 1, "", "correct"], [70, 2, 1, "", "cov"], [70, 4, 1, "", "enable_proc_noise_estimation"], [70, 4, 1, "", "filt_state"], [70, 3, 1, "", "load_filter_state"], [70, 2, 1, "", "meas_noise"], [70, 3, 1, "", "plot_particles"], [70, 3, 1, "", "predict"], [70, 2, 1, "", "proc_noise"], [70, 3, 1, "", "save_filter_state"], [70, 3, 1, "", "set_meas_noise_model"], [70, 3, 1, "", "set_measurement_model"], [70, 3, 1, "", "set_process_noise_model"], [70, 3, 1, "", "set_state_model"]], "gncpy.filters.imm_gci_filter": [[71, 1, 1, "", "IMMGCIFilter"]], "gncpy.filters.imm_gci_filter.IMMGCIFilter": [[71, 3, 1, "", "__init__"], [71, 3, 1, "", "correct"], [71, 2, 1, "", "cov"], [71, 4, 1, "", "filt_state"], [71, 3, 1, "", "load_filter_state"], [71, 3, 1, "", "predict"], [71, 3, 1, "", "save_filter_state"], [71, 3, 1, "", "set_measurement_model"], [71, 3, 1, "", "set_models"], [71, 3, 1, "", "set_state_model"]], "gncpy.filters.interacting_multiple_model": [[72, 1, 1, "", "InteractingMultipleModel"]], "gncpy.filters.interacting_multiple_model.InteractingMultipleModel": [[72, 3, 1, "", "__init__"], [72, 3, 1, "", "correct"], [72, 2, 1, "", "cov"], [72, 4, 1, "", "filt_state"], [72, 3, 1, "", "load_filter_state"], [72, 3, 1, "", "predict"], [72, 3, 1, "", "save_filter_state"], [72, 3, 1, "", "set_models"]], "gncpy.filters.kalman_filter": [[73, 1, 1, "", "KalmanFilter"]], "gncpy.filters.kalman_filter.KalmanFilter": [[73, 3, 1, "", "__init__"], [73, 3, 1, "", "correct"], [73, 4, 1, "", "cov"], [73, 4, 1, "", "dt"], [73, 4, 1, "", "filt_state"], [73, 3, 1, "", "load_filter_state"], [73, 4, 1, "", "meas_noise"], [73, 3, 1, "", "predict"], [73, 4, 1, "", "proc_noise"], [73, 3, 1, "", "save_filter_state"], [73, 3, 1, "", "set_measurement_model"], [73, 3, 1, "", "set_measurement_noise_estimator"], [73, 3, 1, "", "set_state_model"]], "gncpy.filters.kf_gaussian_scale_mixture_filter": [[74, 1, 1, "", "KFGaussianScaleMixtureFilter"]], "gncpy.filters.kf_gaussian_scale_mixture_filter.KFGaussianScaleMixtureFilter": [[74, 3, 1, "", "__init__"], [74, 3, 1, "", "correct"], [74, 2, 1, "", "cov"], [74, 2, 1, "", "dt"], [74, 4, 1, "", "filt_state"], [74, 3, 1, "", "load_filter_state"], [74, 2, 1, "", "meas_noise"], [74, 3, 1, "", "plot_particles"], [74, 3, 1, "", "predict"], [74, 2, 1, "", "proc_noise"], [74, 3, 1, "", "save_filter_state"], [74, 3, 1, "", "set_meas_noise_model"], [74, 3, 1, "", "set_measurement_model"], [74, 3, 1, "", "set_process_noise_model"], [74, 3, 1, "", "set_state_model"]], "gncpy.filters.max_corr_ent_ukf": [[75, 1, 1, "", "MaxCorrEntUKF"]], "gncpy.filters.max_corr_ent_ukf.MaxCorrEntUKF": [[75, 3, 1, "", "__init__"], [75, 3, 1, "", "correct"], [75, 4, 1, "", "filt_state"], [75, 3, 1, "", "init_sigma_points"], [75, 4, 1, "", "kernel_bandwidth"], [75, 3, 1, "", "load_filter_state"], [75, 3, 1, "", "predict"], [75, 3, 1, "", "save_filter_state"], [75, 3, 1, "", "set_measurement_model"], [75, 3, 1, "", "set_measurement_noise_estimator"], [75, 3, 1, "", "set_state_model"]], "gncpy.filters.max_corr_ent_upf": [[76, 1, 1, "", "MaxCorrEntUPF"]], "gncpy.filters.max_corr_ent_upf.MaxCorrEntUPF": [[76, 3, 1, "", "__init__"], [76, 3, 1, "", "correct"], [76, 2, 1, "", "cov"], [76, 3, 1, "", "extract_dist"], [76, 4, 1, "", "filt_state"], [76, 3, 1, "", "init_from_dist"], [76, 3, 1, "", "init_particles"], [76, 2, 1, "", "kernel_bandwidth"], [76, 3, 1, "", "load_filter_state"], [76, 2, 1, "", "meas_likelihood_fnc"], [76, 2, 1, "", "meas_noise"], [76, 3, 1, "", "move_particles"], [76, 2, 1, "", "num_particles"], [76, 3, 1, "", "plot_particles"], [76, 3, 1, "", "plot_weighted_particles"], [76, 3, 1, "", "predict"], [76, 2, 1, "", "proc_noise"], [76, 2, 1, "", "proposal_fnc"], [76, 2, 1, "", "proposal_sampling_fnc"], [76, 3, 1, "", "save_filter_state"], [76, 3, 1, "", "set_measurement_model"], [76, 3, 1, "", "set_state_model"], [76, 2, 1, "", "transition_prob_fnc"]], "gncpy.filters.mcmc_particle_filter_base": [[77, 1, 1, "", "MCMCParticleFilterBase"]], "gncpy.filters.mcmc_particle_filter_base.MCMCParticleFilterBase": [[77, 3, 1, "", "__init__"], [77, 3, 1, "", "correct"], [77, 2, 1, "", "cov"], [77, 3, 1, "", "extract_dist"], [77, 4, 1, "", "filt_state"], [77, 3, 1, "", "init_from_dist"], [77, 3, 1, "", "init_particles"], [77, 3, 1, "", "load_filter_state"], [77, 2, 1, "", "meas_likelihood_fnc"], [77, 3, 1, "", "move_particles"], [77, 2, 1, "", "num_particles"], [77, 3, 1, "", "plot_particles"], [77, 3, 1, "", "plot_weighted_particles"], [77, 3, 1, "", "predict"], [77, 2, 1, "", "proposal_fnc"], [77, 2, 1, "", "proposal_sampling_fnc"], [77, 3, 1, "", "save_filter_state"], [77, 3, 1, "", "set_measurement_model"], [77, 3, 1, "", "set_state_model"], [77, 2, 1, "", "transition_prob_fnc"], [77, 4, 1, "", "use_MCMC"]], "gncpy.filters.particle_filter": [[78, 1, 1, "", "ParticleFilter"]], "gncpy.filters.particle_filter.ParticleFilter": [[78, 3, 1, "", "__init__"], [78, 3, 1, "", "correct"], [78, 2, 1, "", "cov"], [78, 3, 1, "", "extract_dist"], [78, 4, 1, "", "filt_state"], [78, 3, 1, "", "init_from_dist"], [78, 3, 1, "", "init_particles"], [78, 3, 1, "", "load_filter_state"], [78, 2, 1, "", "meas_likelihood_fnc"], [78, 2, 1, "", "num_particles"], [78, 3, 1, "", "plot_particles"], [78, 3, 1, "", "plot_weighted_particles"], [78, 3, 1, "", "predict"], [78, 2, 1, "", "proposal_fnc"], [78, 2, 1, "", "proposal_sampling_fnc"], [78, 4, 1, "", "require_copy_can_dist"], [78, 4, 1, "", "require_copy_prop_parts"], [78, 3, 1, "", "save_filter_state"], [78, 3, 1, "", "set_measurement_model"], [78, 3, 1, "", "set_state_model"], [78, 2, 1, "", "transition_prob_fnc"]], "gncpy.filters.qkf_gaussian_scale_mixture_filter": [[79, 1, 1, "", "QKFGaussianScaleMixtureFilter"]], "gncpy.filters.qkf_gaussian_scale_mixture_filter.QKFGaussianScaleMixtureFilter": [[79, 3, 1, "", "__init__"], [79, 3, 1, "", "correct"], [79, 2, 1, "", "cov"], [79, 4, 1, "", "filt_state"], [79, 3, 1, "", "load_filter_state"], [79, 2, 1, "", "meas_noise"], [79, 3, 1, "", "plot_particles"], [79, 2, 1, "", "points_per_axis"], [79, 3, 1, "", "predict"], [79, 2, 1, "", "proc_noise"], [79, 3, 1, "", "save_filter_state"], [79, 3, 1, "", "set_meas_noise_model"], [79, 3, 1, "", "set_measurement_model"], [79, 3, 1, "", "set_process_noise_model"], [79, 3, 1, "", "set_state_model"]], "gncpy.filters.quadrature_kalman_filter": [[80, 1, 1, "", "QuadratureKalmanFilter"]], "gncpy.filters.quadrature_kalman_filter.QuadratureKalmanFilter": [[80, 3, 1, "", "__init__"], [80, 3, 1, "", "correct"], [80, 4, 1, "", "filt_state"], [80, 3, 1, "", "load_filter_state"], [80, 3, 1, "", "plot_quadrature"], [80, 2, 1, "", "points_per_axis"], [80, 3, 1, "", "predict"], [80, 4, 1, "", "quadPoints"], [80, 3, 1, "", "save_filter_state"], [80, 3, 1, "", "set_measurement_model"], [80, 3, 1, "", "set_measurement_noise_estimator"], [80, 3, 1, "", "set_state_model"]], "gncpy.filters.sqkf_gaussian_scale_mixture_filter": [[81, 1, 1, "", "SQKFGaussianScaleMixtureFilter"]], "gncpy.filters.sqkf_gaussian_scale_mixture_filter.SQKFGaussianScaleMixtureFilter": [[81, 3, 1, "", "__init__"], [81, 3, 1, "", "correct"], [81, 2, 1, "", "cov"], [81, 4, 1, "", "filt_state"], [81, 3, 1, "", "load_filter_state"], [81, 2, 1, "", "meas_noise"], [81, 3, 1, "", "plot_particles"], [81, 2, 1, "", "points_per_axis"], [81, 3, 1, "", "predict"], [81, 2, 1, "", "proc_noise"], [81, 3, 1, "", "save_filter_state"], [81, 3, 1, "", "set_meas_noise_model"], [81, 3, 1, "", "set_measurement_model"], [81, 3, 1, "", "set_process_noise_model"], [81, 3, 1, "", "set_state_model"]], "gncpy.filters.square_root_qkf": [[82, 1, 1, "", "SquareRootQKF"]], "gncpy.filters.square_root_qkf.SquareRootQKF": [[82, 3, 1, "", "__init__"], [82, 3, 1, "", "correct"], [82, 2, 1, "", "cov"], [82, 4, 1, "", "filt_state"], [82, 3, 1, "", "load_filter_state"], [82, 2, 1, "", "meas_noise"], [82, 3, 1, "", "plot_quadrature"], [82, 2, 1, "", "points_per_axis"], [82, 3, 1, "", "predict"], [82, 2, 1, "", "proc_noise"], [82, 3, 1, "", "save_filter_state"], [82, 3, 1, "", "set_measurement_model"], [82, 3, 1, "", "set_measurement_noise_estimator"], [82, 3, 1, "", "set_state_model"]], "gncpy.filters.students_t_filter": [[83, 1, 1, "", "StudentsTFilter"]], "gncpy.filters.students_t_filter.StudentsTFilter": [[83, 3, 1, "", "__init__"], [83, 3, 1, "", "correct"], [83, 2, 1, "", "cov"], [83, 4, 1, "", "dof"], [83, 4, 1, "", "filt_state"], [83, 3, 1, "", "load_filter_state"], [83, 4, 1, "", "meas_noise_dof"], [83, 3, 1, "", "predict"], [83, 4, 1, "", "proc_noise_dof"], [83, 3, 1, "", "save_filter_state"], [83, 4, 1, "", "scale"], [83, 3, 1, "", "set_measurement_model"], [83, 3, 1, "", "set_measurement_noise_estimator"], [83, 3, 1, "", "set_state_model"], [83, 4, 1, "", "use_moment_matching"]], "gncpy.filters.ukf_gaussian_scale_mixture_filter": [[84, 1, 1, "", "UKFGaussianScaleMixtureFilter"]], "gncpy.filters.ukf_gaussian_scale_mixture_filter.UKFGaussianScaleMixtureFilter": [[84, 3, 1, "", "__init__"], [84, 2, 1, "", "alpha"], [84, 2, 1, "", "beta"], [84, 3, 1, "", "correct"], [84, 2, 1, "", "cov"], [84, 2, 1, "", "dt"], [84, 4, 1, "", "filt_state"], [84, 3, 1, "", "init_sigma_points"], [84, 2, 1, "", "kappa"], [84, 3, 1, "", "load_filter_state"], [84, 2, 1, "", "meas_noise"], [84, 3, 1, "", "plot_particles"], [84, 3, 1, "", "predict"], [84, 2, 1, "", "proc_noise"], [84, 3, 1, "", "save_filter_state"], [84, 3, 1, "", "set_meas_noise_model"], [84, 3, 1, "", "set_measurement_model"], [84, 3, 1, "", "set_process_noise_model"], [84, 3, 1, "", "set_state_model"]], "gncpy.filters.unscented_kalman_filter": [[85, 1, 1, "", "UnscentedKalmanFilter"]], "gncpy.filters.unscented_kalman_filter.UnscentedKalmanFilter": [[85, 3, 1, "", "__init__"], [85, 4, 1, "", "alpha"], [85, 4, 1, "", "beta"], [85, 3, 1, "", "correct"], [85, 4, 1, "", "filt_state"], [85, 3, 1, "", "init_sigma_points"], [85, 4, 1, "", "kappa"], [85, 3, 1, "", "load_filter_state"], [85, 3, 1, "", "predict"], [85, 3, 1, "", "save_filter_state"], [85, 3, 1, "", "set_measurement_model"], [85, 3, 1, "", "set_measurement_noise_estimator"], [85, 3, 1, "", "set_state_model"]], "gncpy.filters.unscented_particle_filter": [[86, 1, 1, "", "UnscentedParticleFilter"]], "gncpy.filters.unscented_particle_filter.UnscentedParticleFilter": [[86, 3, 1, "", "__init__"], [86, 3, 1, "", "correct"], [86, 2, 1, "", "cov"], [86, 3, 1, "", "extract_dist"], [86, 4, 1, "", "filt_state"], [86, 3, 1, "", "init_from_dist"], [86, 3, 1, "", "init_particles"], [86, 3, 1, "", "load_filter_state"], [86, 2, 1, "", "meas_likelihood_fnc"], [86, 2, 1, "", "meas_noise"], [86, 3, 1, "", "move_particles"], [86, 2, 1, "", "num_particles"], [86, 3, 1, "", "plot_particles"], [86, 3, 1, "", "plot_weighted_particles"], [86, 3, 1, "", "predict"], [86, 2, 1, "", "proc_noise"], [86, 2, 1, "", "proposal_fnc"], [86, 2, 1, "", "proposal_sampling_fnc"], [86, 3, 1, "", "save_filter_state"], [86, 3, 1, "", "set_measurement_model"], [86, 3, 1, "", "set_state_model"], [86, 2, 1, "", "transition_prob_fnc"]], "gncpy.game_engine": [[106, 0, 0, "-", "base_game"], [107, 0, 0, "-", "components"], [108, 0, 0, "-", "entities"], [109, 0, 0, "-", "physics2d"], [110, 0, 0, "-", "rendering2d"]], "gncpy.game_engine.base_game": [[87, 1, 1, "", "Base2dParams"], [88, 1, 1, "", "BaseGame"], [89, 1, 1, "", "BaseGame2d"], [90, 1, 1, "", "BaseParams"], [91, 1, 1, "", "WindowParams"], [92, 5, 1, "", "ndarray_representer"], [93, 7, 1, "", "yaml"]], "gncpy.game_engine.base_game.Base2dParams": [[87, 3, 1, "", "__init__"], [87, 4, 1, "", "max_time"], [87, 4, 1, "", "physics"], [87, 4, 1, "", "start_time"]], "gncpy.game_engine.base_game.BaseGame": [[88, 3, 1, "", "__init__"], [88, 4, 1, "", "config_file"], [88, 4, 1, "", "current_frame"], [88, 4, 1, "", "entityManager"], [88, 4, 1, "", "game_over"], [88, 4, 1, "", "library_dir"], [88, 4, 1, "", "params"], [88, 3, 1, "", "parse_config_file"], [88, 3, 1, "", "register_params"], [88, 4, 1, "", "render_fps"], [88, 4, 1, "", "render_mode"], [88, 3, 1, "", "reset"], [88, 4, 1, "", "rng"], [88, 3, 1, "", "s_collision"], [88, 3, 1, "", "s_game_over"], [88, 3, 1, "", "s_input"], [88, 3, 1, "", "s_movement"], [88, 3, 1, "", "s_score"], [88, 4, 1, "", "score"], [88, 4, 1, "", "seed_val"], [88, 3, 1, "", "setup"], [88, 3, 1, "", "step"], [88, 3, 1, "", "validate_config_file"]], "gncpy.game_engine.base_game.BaseGame2d": [[89, 3, 1, "", "__init__"], [89, 3, 1, "", "append_name_to_keys"], [89, 4, 1, "", "clock"], [89, 3, 1, "", "close"], [89, 2, 1, "", "current_time"], [89, 4, 1, "", "current_update_count"], [89, 4, 1, "", "dist_per_pix"], [89, 2, 1, "", "elapsed_time"], [89, 3, 1, "", "get_image_size"], [89, 4, 1, "", "img"], [89, 3, 1, "", "parse_config_file"], [89, 3, 1, "", "register_params"], [89, 3, 1, "", "reset"], [89, 3, 1, "", "s_collision"], [89, 3, 1, "", "s_game_over"], [89, 3, 1, "", "s_input"], [89, 3, 1, "", "s_movement"], [89, 3, 1, "", "s_render"], [89, 3, 1, "", "s_score"], [89, 3, 1, "", "setup"], [89, 3, 1, "", "step"], [89, 3, 1, "", "validate_config_file"], [89, 4, 1, "", "window"]], "gncpy.game_engine.base_game.BaseParams": [[90, 3, 1, "", "__init__"], [90, 4, 1, "", "window"]], "gncpy.game_engine.base_game.WindowParams": [[91, 3, 1, "", "__init__"], [91, 4, 1, "", "height"], [91, 4, 1, "", "width"]], "gncpy.game_engine.components": [[94, 1, 1, "", "CBirth"], [95, 1, 1, "", "CCapabilities"], [96, 1, 1, "", "CCollision"], [97, 1, 1, "", "CDynamics"], [98, 1, 1, "", "CEvents"], [99, 1, 1, "", "CHazard"], [100, 1, 1, "", "CPriority"], [101, 1, 1, "", "CShape"], [102, 1, 1, "", "CTransform"], [103, 7, 1, "", "library_asset_dir"]], "gncpy.game_engine.components.CBirth": [[94, 3, 1, "", "__init__"], [94, 4, 1, "", "loc"], [94, 4, 1, "", "randomize"], [94, 3, 1, "", "sample"]], "gncpy.game_engine.components.CCapabilities": [[95, 3, 1, "", "__init__"], [95, 4, 1, "", "capabilities"]], "gncpy.game_engine.components.CCollision": [[96, 3, 1, "", "__init__"], [96, 4, 1, "", "aabb"]], "gncpy.game_engine.components.CDynamics": [[97, 3, 1, "", "__init__"], [97, 4, 1, "", "ctrl_args"], [97, 4, 1, "", "dynObj"], [97, 4, 1, "", "last_state"], [97, 4, 1, "", "pos_inds"], [97, 4, 1, "", "state_args"], [97, 4, 1, "", "state_high"], [97, 4, 1, "", "state_low"], [97, 4, 1, "", "vel_inds"]], "gncpy.game_engine.components.CEvents": [[98, 3, 1, "", "__init__"], [98, 4, 1, "", "events"]], "gncpy.game_engine.components.CHazard": [[99, 3, 1, "", "__init__"], [99, 4, 1, "", "entrance_times"], [99, 4, 1, "", "prob_of_death"]], "gncpy.game_engine.components.CPriority": [[100, 3, 1, "", "__init__"], [100, 4, 1, "", "priority"]], "gncpy.game_engine.components.CShape": [[101, 3, 1, "", "__init__"], [101, 4, 1, "", "color"], [101, 4, 1, "", "shape"], [101, 4, 1, "", "type"], [101, 4, 1, "", "zorder"]], "gncpy.game_engine.components.CTransform": [[102, 3, 1, "", "__init__"], [102, 4, 1, "", "last_pos"], [102, 4, 1, "", "pos"]], "gncpy.game_engine.entities": [[104, 1, 1, "", "Entity"], [105, 1, 1, "", "EntityManager"]], "gncpy.game_engine.entities.Entity": [[104, 3, 1, "", "__init__"], [104, 2, 1, "", "active"], [104, 3, 1, "", "add_component"], [104, 3, 1, "", "destroy"], [104, 3, 1, "", "get_component"], [104, 3, 1, "", "has_component"], [104, 2, 1, "", "id"], [104, 2, 1, "", "tag"]], "gncpy.game_engine.entities.EntityManager": [[105, 3, 1, "", "__init__"], [105, 3, 1, "", "add_entity"], [105, 3, 1, "", "get_entities"], [105, 3, 1, "", "get_entity_ids"], [105, 3, 1, "", "update"]], "gncpy.game_engine.physics2d": [[111, 1, 1, "", "Collision2dParams"], [112, 1, 1, "", "Physics2dParams"], [113, 5, 1, "", "check_collision2d"], [114, 5, 1, "", "clamp_window_bounds2d"], [115, 5, 1, "", "dist_to_pixels"], [116, 5, 1, "", "pixels_to_dist"], [117, 5, 1, "", "resolve_collision2d"]], "gncpy.game_engine.physics2d.Collision2dParams": [[111, 3, 1, "", "__init__"], [111, 4, 1, "", "height"], [111, 4, 1, "", "width"]], "gncpy.game_engine.physics2d.Physics2dParams": [[112, 3, 1, "", "__init__"], [112, 4, 1, "", "dist_height"], [112, 4, 1, "", "dist_width"], [112, 4, 1, "", "dt"], [112, 4, 1, "", "min_pos"], [112, 4, 1, "", "step_factor"], [112, 2, 1, "", "update_dt"]], "gncpy.game_engine.rendering2d": [[118, 1, 1, "", "Shape2dParams"], [119, 5, 1, "", "get_drawable_entities"], [120, 5, 1, "", "init_rendering_system"], [121, 5, 1, "", "init_window"], [122, 5, 1, "", "render"], [123, 5, 1, "", "shutdown"]], "gncpy.game_engine.rendering2d.Shape2dParams": [[118, 3, 1, "", "__init__"], [118, 4, 1, "", "color"], [118, 4, 1, "", "file"], [118, 4, 1, "", "height"], [118, 4, 1, "", "type"], [118, 4, 1, "", "width"]], "gncpy.games": [[136, 0, 0, "-", "SimpleUAV2d"]], "gncpy.games.SimpleUAV2d": [[124, 1, 1, "", "BirthModelParams"], [125, 1, 1, "", "ControlModelParams"], [126, 1, 1, "", "DynamicsParams"], [127, 1, 1, "", "EventType"], [128, 1, 1, "", "HazardParams"], [129, 1, 1, "", "ObstacleParams"], [130, 1, 1, "", "Params"], [131, 1, 1, "", "PlayerParams"], [132, 1, 1, "", "ScoreParams"], [133, 1, 1, "", "SimpleUAV2d"], [134, 1, 1, "", "StateConstraintParams"], [135, 1, 1, "", "TargetParams"]], "gncpy.games.SimpleUAV2d.BirthModelParams": [[124, 3, 1, "", "__init__"], [124, 4, 1, "", "extra_params"], [124, 4, 1, "", "location"], [124, 4, 1, "", "prob"], [124, 4, 1, "", "randomize"], [124, 4, 1, "", "scale"], [124, 4, 1, "", "times"], [124, 4, 1, "", "type"]], "gncpy.games.SimpleUAV2d.ControlModelParams": [[125, 3, 1, "", "__init__"], [125, 4, 1, "", "max_turn_rate"], [125, 4, 1, "", "max_vel"], [125, 4, 1, "", "max_vel_x"], [125, 4, 1, "", "max_vel_y"], [125, 4, 1, "", "type"]], "gncpy.games.SimpleUAV2d.DynamicsParams": [[126, 3, 1, "", "__init__"], [126, 4, 1, "", "controlModel"], [126, 4, 1, "", "extra_params"], [126, 4, 1, "", "stateConstraint"], [126, 4, 1, "", "type"]], "gncpy.games.SimpleUAV2d.EventType": [[127, 3, 1, "", "__init__"]], "gncpy.games.SimpleUAV2d.HazardParams": [[128, 3, 1, "", "__init__"], [128, 4, 1, "", "collision"], [128, 4, 1, "", "loc_x"], [128, 4, 1, "", "loc_y"], [128, 4, 1, "", "prob_of_death"], [128, 4, 1, "", "shape"]], "gncpy.games.SimpleUAV2d.ObstacleParams": [[129, 3, 1, "", "__init__"], [129, 4, 1, "", "collision"], [129, 4, 1, "", "loc_x"], [129, 4, 1, "", "loc_y"], [129, 4, 1, "", "shape"]], "gncpy.games.SimpleUAV2d.Params": [[130, 3, 1, "", "__init__"], [130, 4, 1, "", "hazards"], [130, 4, 1, "", "obstacles"], [130, 4, 1, "", "players"], [130, 4, 1, "", "score"], [130, 4, 1, "", "targets"]], "gncpy.games.SimpleUAV2d.PlayerParams": [[131, 3, 1, "", "__init__"], [131, 4, 1, "", "birth"], [131, 4, 1, "", "capabilities"], [131, 4, 1, "", "collision"], [131, 4, 1, "", "dynamics"], [131, 4, 1, "", "shape"]], "gncpy.games.SimpleUAV2d.ScoreParams": [[132, 3, 1, "", "__init__"], [132, 4, 1, "", "death_decay"], [132, 4, 1, "", "death_penalty"], [132, 4, 1, "", "death_scale"], [132, 4, 1, "", "hazard_multiplier"], [132, 4, 1, "", "min_vel_per"], [132, 4, 1, "", "missed_multiplier"], [132, 4, 1, "", "time_penalty"], [132, 4, 1, "", "type"], [132, 4, 1, "", "vel_penalty"], [132, 4, 1, "", "wall_penalty"]], "gncpy.games.SimpleUAV2d.SimpleUAV2d": [[133, 3, 1, "", "__init__"], [133, 4, 1, "", "all_capabilities"], [133, 3, 1, "", "append_name_to_keys"], [133, 3, 1, "", "basic_reward"], [133, 3, 1, "", "close"], [133, 3, 1, "", "create_dynamics"], [133, 3, 1, "", "create_hazards"], [133, 3, 1, "", "create_obstacles"], [133, 3, 1, "", "create_player"], [133, 3, 1, "", "create_targets"], [133, 4, 1, "", "cur_target_seq"], [133, 2, 1, "", "current_time"], [133, 2, 1, "", "elapsed_time"], [133, 3, 1, "", "get_image_size"], [133, 3, 1, "", "get_player_ids"], [133, 3, 1, "", "get_player_pos_vel_inds"], [133, 3, 1, "", "get_player_state_bounds"], [133, 3, 1, "", "get_players_state"], [133, 4, 1, "", "has_random_player_birth_times"], [133, 4, 1, "", "max_player_birth_time"], [133, 3, 1, "", "parse_config_file"], [133, 3, 1, "", "propagate_dynamics"], [133, 3, 1, "", "register_params"], [133, 3, 1, "", "reset"], [133, 3, 1, "", "s_collision"], [133, 3, 1, "", "s_game_over"], [133, 3, 1, "", "s_input"], [133, 3, 1, "", "s_movement"], [133, 3, 1, "", "s_render"], [133, 3, 1, "", "s_score"], [133, 3, 1, "", "setup"], [133, 3, 1, "", "spawn_players"], [133, 3, 1, "", "step"], [133, 4, 1, "", "target_seq"], [133, 3, 1, "", "validate_config_file"]], "gncpy.games.SimpleUAV2d.StateConstraintParams": [[134, 3, 1, "", "__init__"], [134, 4, 1, "", "max_vels"], [134, 4, 1, "", "min_vels"], [134, 4, 1, "", "type"]], "gncpy.games.SimpleUAV2d.TargetParams": [[135, 3, 1, "", "__init__"], [135, 4, 1, "", "capabilities"], [135, 4, 1, "", "collision"], [135, 4, 1, "", "loc_x"], [135, 4, 1, "", "loc_y"], [135, 4, 1, "", "order"], [135, 4, 1, "", "priority"], [135, 4, 1, "", "shape"]], "gncpy.math": [[154, 5, 1, "", "epanechnikov_kernel"], [155, 5, 1, "", "gamma_fnc"], [156, 5, 1, "", "gaussian_kernel"], [157, 5, 1, "", "get_elem_sym_fnc"], [158, 5, 1, "", "get_hessian"], [159, 5, 1, "", "get_input_jacobian"], [160, 5, 1, "", "get_jacobian"], [161, 5, 1, "", "get_state_jacobian"], [162, 5, 1, "", "log_sum_exp"], [163, 5, 1, "", "rk4"], [164, 5, 1, "", "rk4_backward"], [165, 5, 1, "", "weighted_sum_mat"], [166, 5, 1, "", "weighted_sum_vec"]], "gncpy.orbital_mechanics": [[167, 5, 1, "", "correct_lon_ascend"], [168, 5, 1, "", "ecc_anom_from_mean"], [169, 5, 1, "", "ecef_from_orbit"], [170, 5, 1, "", "true_anom_from_ecc"]], "gncpy.planning": [[173, 0, 0, "-", "a_star"], [174, 0, 0, "-", "reinforcement_learning"], [175, 0, 0, "-", "rrt_star"]], "gncpy.planning.a_star": [[171, 1, 1, "", "AStar"], [172, 1, 1, "", "Node"]], "gncpy.planning.a_star.AStar": [[171, 3, 1, "", "__init__"], [171, 4, 1, "", "beam_search_max_nodes"], [171, 3, 1, "", "calc_heuristic"], [171, 3, 1, "", "calc_weight"], [171, 3, 1, "", "draw_end"], [171, 3, 1, "", "draw_map"], [171, 3, 1, "", "draw_start"], [171, 3, 1, "", "final_path"], [171, 3, 1, "", "get_map_cost"], [171, 3, 1, "", "ind_to_pos"], [171, 3, 1, "", "is_valid"], [171, 4, 1, "", "max"], [171, 4, 1, "", "min"], [171, 4, 1, "", "motion"], [171, 3, 1, "", "plan"], [171, 3, 1, "", "pos_to_ind"], [171, 3, 1, "", "ravel_ind"], [171, 4, 1, "", "resolution"], [171, 3, 1, "", "set_map"], [171, 4, 1, "", "use_beam_search"], [171, 4, 1, "", "weight"]], "gncpy.planning.a_star.Node": [[172, 3, 1, "", "__init__"], [172, 4, 1, "", "cost"], [172, 4, 1, "", "indices"], [172, 4, 1, "", "parent_idx"]], "gncpy.planning.reinforcement_learning": [[180, 0, 0, "-", "envs"], [181, 0, 0, "-", "wrappers"]], "gncpy.planning.reinforcement_learning.envs": [[176, 0, 0, "-", "simple2d"]], "gncpy.planning.reinforcement_learning.envs.simple2d": [[177, 0, 0, "-", "simpleUAV2d"]], "gncpy.planning.reinforcement_learning.envs.simple2d.simpleUAV2d": [[178, 1, 1, "", "SimpleUAV2d"], [179, 1, 1, "", "SimpleUAVHazards2d"]], "gncpy.planning.reinforcement_learning.envs.simple2d.simpleUAV2d.SimpleUAV2d": [[178, 3, 1, "", "__init__"], [178, 4, 1, "", "action_space"], [178, 4, 1, "", "aux_use_n_targets"], [178, 4, 1, "", "aux_use_time"], [178, 3, 1, "", "calc_obs_space"], [178, 3, 1, "", "close"], [178, 4, 1, "", "fig"], [178, 4, 1, "", "game"], [178, 3, 1, "", "gen_act_map"], [178, 4, 1, "", "max_time"], [178, 4, 1, "", "metadata"], [178, 2, 1, "", "np_random"], [178, 4, 1, "", "obs_type"], [178, 4, 1, "", "observation_space"], [178, 4, 1, "", "render_mode"], [178, 3, 1, "", "reset"], [178, 3, 1, "", "seed"], [178, 3, 1, "", "step"], [178, 2, 1, "", "unwrapped"]], "gncpy.planning.reinforcement_learning.envs.simple2d.simpleUAV2d.SimpleUAVHazards2d": [[179, 3, 1, "", "__init__"], [179, 4, 1, "", "action_space"], [179, 3, 1, "", "calc_obs_space"], [179, 3, 1, "", "close"], [179, 3, 1, "", "gen_act_map"], [179, 4, 1, "", "metadata"], [179, 2, 1, "", "np_random"], [179, 3, 1, "", "reset"], [179, 3, 1, "", "seed"], [179, 3, 1, "", "step"], [179, 2, 1, "", "unwrapped"]], "gncpy.planning.reinforcement_learning.wrappers": [[182, 1, 1, "", "BufferFames"], [183, 1, 1, "", "GrayScaleObservation"], [184, 1, 1, "", "MaxFrames"], [185, 1, 1, "", "ResizeImage"], [186, 1, 1, "", "SkipFrames"], [187, 1, 1, "", "StackFrames"]], "gncpy.planning.reinforcement_learning.wrappers.BufferFames": [[182, 3, 1, "", "__init__"], [182, 2, 1, "", "action_space"], [182, 3, 1, "", "class_name"], [182, 3, 1, "", "close"], [182, 2, 1, "", "metadata"], [182, 2, 1, "", "np_random"], [182, 3, 1, "", "observation"], [182, 2, 1, "", "observation_space"], [182, 2, 1, "", "render_mode"], [182, 3, 1, "", "reset"], [182, 2, 1, "", "reward_range"], [182, 3, 1, "", "seed"], [182, 2, 1, "", "spec"], [182, 3, 1, "", "step"], [182, 2, 1, "", "unwrapped"]], "gncpy.planning.reinforcement_learning.wrappers.GrayScaleObservation": [[183, 3, 1, "", "__init__"], [183, 2, 1, "", "action_space"], [183, 3, 1, "", "class_name"], [183, 3, 1, "", "close"], [183, 2, 1, "", "metadata"], [183, 2, 1, "", "np_random"], [183, 3, 1, "", "observation"], [183, 2, 1, "", "observation_space"], [183, 2, 1, "", "render_mode"], [183, 3, 1, "", "reset"], [183, 2, 1, "", "reward_range"], [183, 3, 1, "", "seed"], [183, 2, 1, "", "spec"], [183, 3, 1, "", "step"], [183, 2, 1, "", "unwrapped"]], "gncpy.planning.reinforcement_learning.wrappers.MaxFrames": [[184, 3, 1, "", "__init__"], [184, 2, 1, "", "action_space"], [184, 3, 1, "", "class_name"], [184, 3, 1, "", "close"], [184, 2, 1, "", "metadata"], [184, 2, 1, "", "np_random"], [184, 3, 1, "", "observation"], [184, 2, 1, "", "observation_space"], [184, 2, 1, "", "render_mode"], [184, 3, 1, "", "reset"], [184, 2, 1, "", "reward_range"], [184, 3, 1, "", "seed"], [184, 2, 1, "", "spec"], [184, 3, 1, "", "step"], [184, 2, 1, "", "unwrapped"]], "gncpy.planning.reinforcement_learning.wrappers.ResizeImage": [[185, 3, 1, "", "__init__"], [185, 2, 1, "", "action_space"], [185, 3, 1, "", "class_name"], [185, 3, 1, "", "close"], [185, 2, 1, "", "metadata"], [185, 2, 1, "", "np_random"], [185, 3, 1, "", "observation"], [185, 2, 1, "", "observation_space"], [185, 2, 1, "", "render_mode"], [185, 3, 1, "", "reset"], [185, 2, 1, "", "reward_range"], [185, 3, 1, "", "seed"], [185, 2, 1, "", "spec"], [185, 3, 1, "", "step"], [185, 2, 1, "", "unwrapped"]], "gncpy.planning.reinforcement_learning.wrappers.SkipFrames": [[186, 3, 1, "", "__init__"], [186, 2, 1, "", "action_space"], [186, 3, 1, "", "class_name"], [186, 3, 1, "", "close"], [186, 2, 1, "", "metadata"], [186, 2, 1, "", "np_random"], [186, 2, 1, "", "observation_space"], [186, 2, 1, "", "render_mode"], [186, 3, 1, "", "reset"], [186, 2, 1, "", "reward_range"], [186, 3, 1, "", "seed"], [186, 2, 1, "", "spec"], [186, 3, 1, "", "step"], [186, 2, 1, "", "unwrapped"]], "gncpy.planning.reinforcement_learning.wrappers.StackFrames": [[187, 3, 1, "", "__init__"], [187, 2, 1, "", "action_space"], [187, 3, 1, "", "class_name"], [187, 3, 1, "", "close"], [187, 2, 1, "", "metadata"], [187, 2, 1, "", "np_random"], [187, 3, 1, "", "observation"], [187, 2, 1, "", "observation_space"], [187, 2, 1, "", "render_mode"], [187, 3, 1, "", "reset"], [187, 2, 1, "", "reward_range"], [187, 3, 1, "", "seed"], [187, 2, 1, "", "spec"], [187, 3, 1, "", "step"], [187, 2, 1, "", "unwrapped"]], "gncpy.planning.rrt_star": [[188, 1, 1, "", "ExtendedLQRRRTStar"], [189, 1, 1, "", "LQRRRTStar"], [190, 1, 1, "", "Node"]], "gncpy.planning.rrt_star.ExtendedLQRRRTStar": [[188, 3, 1, "", "__init__"]], "gncpy.planning.rrt_star.LQRRRTStar": [[189, 4, 1, "", "Nobs"], [189, 4, 1, "", "P"], [189, 4, 1, "", "S"], [189, 3, 1, "", "__init__"], [189, 4, 1, "", "connect_circle_dist"], [189, 4, 1, "", "ell_con"], [189, 4, 1, "", "end"], [189, 4, 1, "", "expand_dis"], [189, 4, 1, "", "goal_sample_rate"], [189, 4, 1, "", "max_iter"], [189, 4, 1, "", "max_rand"], [189, 4, 1, "", "min_rand"], [189, 4, 1, "", "node_list"], [189, 4, 1, "", "obstacle_list"], [189, 4, 1, "", "planner"], [189, 4, 1, "", "pos_inds"], [189, 4, 1, "", "rng"], [189, 4, 1, "", "sampling_fun"], [189, 4, 1, "", "start"], [189, 4, 1, "", "step_size"]], "gncpy.planning.rrt_star.Node": [[190, 3, 1, "", "__init__"], [190, 4, 1, "", "cost"], [190, 4, 1, "", "parent"], [190, 4, 1, "", "path"], [190, 4, 1, "", "sv"], [190, 4, 1, "", "u"]], "gncpy.plotting": [[191, 5, 1, "", "calc_error_ellipse"], [192, 5, 1, "", "get_cmap"], [193, 5, 1, "", "init_plotting_opts"], [194, 5, 1, "", "set_title_label"]], "gncpy.sampling": [[195, 1, 1, "", "MetropolisHastings"]], "gncpy.sampling.MetropolisHastings": [[195, 3, 1, "", "__init__"]], "gncpy.utilities": [[196, 1, 1, "", "ClassPropertyDescriptor"], [197, 1, 1, "", "ClassPropertyMetaClass"], [198, 5, 1, "", "classproperty"]], "gncpy.utilities.ClassPropertyDescriptor": [[196, 3, 1, "", "__init__"]], "gncpy.utilities.ClassPropertyMetaClass": [[197, 3, 1, "", "__init__"], [197, 3, 1, "", "mro"]], "gncpy.wgs84": [[199, 5, 1, "", "calc_earth_rate"], [200, 5, 1, "", "calc_ew_rad"], [201, 5, 1, "", "calc_gravity"], [202, 5, 1, "", "calc_ns_rad"], [203, 5, 1, "", "calc_transport_rate"], [204, 5, 1, "", "convert_msl_to_wgs"], [205, 5, 1, "", "convert_wgs_to_msl"], [206, 5, 1, "", "init_egm_lookup_table"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:property", "3": "py:method", "4": "py:attribute", "5": "py:function", "6": "py:exception", "7": "py:data"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "property", "Python property"], "3": ["py", "method", "Python method"], "4": ["py", "attribute", "Python attribute"], "5": ["py", "function", "Python function"], "6": ["py", "exception", "Python exception"], "7": ["py", "data", "Python data"]}, "titleterms": {"refer": [0, 207], "gncpy": [1, 4, 5, 6, 7, 8, 9, 40, 41, 42, 92, 93, 103, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 191, 192, 193, 194, 198, 199, 200, 201, 202, 203, 204, 205, 206, 209], "elqr": [2, 214, 217], "lqr": [3, 214, 217], "coordinate_transform": [4, 5, 6, 7, 8, 138], "ecef_to_lla": 4, "ecef_to_n": 5, "lla_to_ecef": 6, "lla_to_n": 7, "ned_to_lla": 8, "data_fus": [9, 139], "generalizedcovarianceintersect": 9, "particl": 10, "particledistribut": 11, "quadraturepoint": 12, "sigmapoint": 13, "simpleparticledistribut": 14, "simple_multirotor": 15, "aeroparam": 16, "aircraftparam": 17, "effector": 18, "environ": [19, 211], "geoparam": 20, "massparam": 21, "motorparam": 22, "propparam": 23, "simplemultirotor": 24, "vehicl": 25, "clohessywiltshireorbit": 26, "clohessywiltshireorbit2d": 27, "coordinatedturnknown": 28, "coordinatedturnunknown": 29, "curvilinearmot": 30, "doubleintegr": 31, "todo": [31, 45, 70, 74, 79, 81, 84, 151, 155, 195], "dynamicsbas": 32, "irobotcr": 33, "karlgaardorbit": 34, "lineardynamicsbas": 35, "nonlineardynamicsbas": 36, "tschaunerhempelorbit": 37, "aircraft": 38, "basic": 39, "error": [40, 41, 42, 142], "extrememeasurementnoiseerror": 40, "particledepletionerror": 41, "particleestimationdomainerror": 42, "bayesfilt": 43, "bootstrapfilt": 44, "ekfgaussianscalemixturefilt": 45, "extendedkalmanfilt": 46, "gcifilt": 47, "bayes_filt": 48, "bootstrap_filt": 49, "ekf_gaussian_scale_mixture_filt": 50, "extended_kalman_filt": 51, "gci_filt": 52, "gsm_filter_bas": 53, "imm_gci_filt": 54, "interacting_multiple_model": 55, "kalman_filt": 56, "kf_gaussian_scale_mixture_filt": 57, "max_corr_ent_ukf": 58, "max_corr_ent_upf": 59, "mcmc_particle_filter_bas": 60, "particle_filt": 61, "qkf_gaussian_scale_mixture_filt": 62, "quadrature_kalman_filt": 63, "sqkf_gaussian_scale_mixture_filt": 64, "square_root_qkf": 65, "students_t_filt": 66, "ukf_gaussian_scale_mixture_filt": 67, "unscented_kalman_filt": 68, "unscented_particle_filt": 69, "gsmfilterbas": 70, "immgcifilt": 71, "interactingmultiplemodel": 72, "kalmanfilt": 73, "kfgaussianscalemixturefilt": 74, "maxcorrentukf": 75, "maxcorrentupf": 76, "mcmcparticlefilterbas": 77, "particlefilt": 78, "qkfgaussianscalemixturefilt": 79, "quadraturekalmanfilt": 80, "sqkfgaussianscalemixturefilt": 81, "squarerootqkf": 82, "studentstfilt": 83, "ukfgaussianscalemixturefilt": 84, "unscentedkalmanfilt": 85, "unscentedparticlefilt": 86, "base2dparam": 87, "basegam": 88, "basegame2d": 89, "baseparam": 90, "windowparam": 91, "game_engin": [92, 93, 103, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 144], "base_gam": [92, 93, 106], "ndarray_represent": 92, "yaml": 93, "cbirth": 94, "ccapabl": 95, "ccollis": 96, "cdynam": 97, "cevent": 98, "chazard": 99, "cprioriti": 100, "cshape": 101, "ctransform": 102, "compon": [103, 107], "library_asset_dir": 103, "entiti": [104, 108], "entitymanag": 105, "physics2d": [109, 113, 114, 115, 116, 117], "rendering2d": [110, 119, 120, 121, 122, 123], "collision2dparam": 111, "physics2dparam": 112, "check_collision2d": 113, "clamp_window_bounds2d": 114, "dist_to_pixel": 115, "pixels_to_dist": 116, "resolve_collision2d": 117, "shape2dparam": 118, "get_drawable_ent": 119, "init_rendering_system": 120, "init_window": 121, "render": 122, "shutdown": 123, "birthmodelparam": 124, "controlmodelparam": 125, "dynamicsparam": 126, "eventtyp": 127, "hazardparam": 128, "obstacleparam": 129, "param": 130, "playerparam": 131, "scoreparam": 132, "simpleuav2d": [133, 136, 177, 178], "stateconstraintparam": 134, "targetparam": 135, "control": [137, 214], "distribut": 140, "dynam": [141, 214, 217], "filter": [143, 215], "game": 145, "math": [146, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166], "measur": 147, "orbital_mechan": [148, 167, 168, 169, 170], "plan": [149, 216], "plot": [150, 191, 192, 193, 194], "sampl": 151, "util": [152, 198], "wgs84": [153, 199, 200, 201, 202, 203, 204, 205, 206], "epanechnikov_kernel": 154, "gamma_fnc": 155, "gaussian_kernel": 156, "get_elem_sym_fnc": 157, "get_hessian": 158, "get_input_jacobian": 159, "get_jacobian": 160, "get_state_jacobian": 161, "log_sum_exp": 162, "rk4": 163, "rk4_backward": 164, "weighted_sum_mat": 165, "weighted_sum_vec": 166, "correct_lon_ascend": 167, "ecc_anom_from_mean": 168, "ecef_from_orbit": 169, "true_anom_from_ecc": 170, "astar": 171, "node": [172, 190], "a_star": 173, "reinforcement_learn": 174, "rrt_star": 175, "simple2d": 176, "simpleuavhazards2d": 179, "env": 180, "wrapper": 181, "bufferfam": 182, "grayscaleobserv": 183, "maxfram": 184, "resizeimag": 185, "skipfram": 186, "stackfram": 187, "extendedlqrrrtstar": 188, "lqrrrtstar": 189, "calc_error_ellips": 191, "get_cmap": 192, "init_plotting_opt": 193, "set_title_label": 194, "metropolishast": 195, "classpropertydescriptor": 196, "classpropertymetaclass": 197, "classproperti": 198, "calc_earth_r": 199, "calc_ew_rad": 200, "calc_grav": 201, "calc_ns_rad": 202, "calc_transport_r": 203, "convert_msl_to_wg": 204, "convert_wgs_to_msl": 205, "init_egm_lookup_t": 206, "api": 207, "ci": 208, "cd": 208, "pipelin": 208, "github": 208, "action": 208, "quick": 208, "guid": 208, "welcom": 209, "": 209, "document": 209, "content": [209, 212, 216], "cite": 209, "indic": 209, "tabl": 209, "licens": 210, "toolchain": 211, "develop": 211, "setup": 211, "exampl": [211, 213, 214, 215, 216, 217], "workflow": 211, "note": 211, "tox": 211, "usag": 212, "A": 213, "normal": 213, "beam": 213, "search": 213, "weight": 213, "infinit": 214, "horizon": 214, "linear": [214, 217], "dyanmic": 214, "finit": 214, "horzon": 214, "non": [214, 217], "modifi": 214, "quadrat": 214, "kalman": 215, "extend": 215, "interact": 215, "multipl": 215, "model": 215, "rrt": 217}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1, "sphinxcontrib.bibtex": 9, "sphinx": 57}, "alltitles": {"References": [[0, "references"]], "gncpy": [[1, "module-gncpy"]], "ELQR": [[2, "elqr"], [214, "elqr"]], "LQR": [[3, "lqr"]], "gncpy.coordinate_transforms.ecef_to_LLA": [[4, "gncpy-coordinate-transforms-ecef-to-lla"]], "gncpy.coordinate_transforms.ecef_to_NED": [[5, "gncpy-coordinate-transforms-ecef-to-ned"]], "gncpy.coordinate_transforms.lla_to_ECEF": [[6, "gncpy-coordinate-transforms-lla-to-ecef"]], "gncpy.coordinate_transforms.lla_to_NED": [[7, "gncpy-coordinate-transforms-lla-to-ned"]], "gncpy.coordinate_transforms.ned_to_LLA": [[8, "gncpy-coordinate-transforms-ned-to-lla"]], "gncpy.data_fusion.GeneralizedCovarianceIntersection": [[9, "gncpy-data-fusion-generalizedcovarianceintersection"]], "Particle": [[10, "particle"]], "ParticleDistribution": [[11, "particledistribution"]], "QuadraturePoints": [[12, "quadraturepoints"]], "SigmaPoints": [[13, "sigmapoints"]], "SimpleParticleDistribution": [[14, "simpleparticledistribution"]], "simple_multirotor": [[15, "module-gncpy.dynamics.aircraft.simple_multirotor"]], "AeroParams": [[16, "aeroparams"]], "AircraftParams": [[17, "aircraftparams"]], "Effector": [[18, "effector"]], "Environment": [[19, "environment"]], "GeoParams": [[20, "geoparams"]], "MassParams": [[21, "massparams"]], "MotorParams": [[22, "motorparams"]], "PropParams": [[23, "propparams"]], "SimpleMultirotor": [[24, "simplemultirotor"]], "Vehicle": [[25, "vehicle"]], "ClohessyWiltshireOrbit": [[26, "clohessywiltshireorbit"]], "ClohessyWiltshireOrbit2d": [[27, "clohessywiltshireorbit2d"]], "CoordinatedTurnKnown": [[28, "coordinatedturnknown"]], "CoordinatedTurnUnknown": [[29, "coordinatedturnunknown"]], "CurvilinearMotion": [[30, "curvilinearmotion"]], "DoubleIntegrator": [[31, "doubleintegrator"]], "Todo": [[31, "id1"], [45, "id1"], [70, "id3"], [74, "id1"], [79, "id2"], [81, "id2"], [84, "id2"], [151, "id1"], [155, "id1"], [195, "id1"]], "DynamicsBase": [[32, "dynamicsbase"]], "IRobotCreate": [[33, "irobotcreate"]], "KarlgaardOrbit": [[34, "karlgaardorbit"]], "LinearDynamicsBase": [[35, "lineardynamicsbase"]], "NonlinearDynamicsBase": [[36, "nonlineardynamicsbase"]], "TschaunerHempelOrbit": [[37, "tschaunerhempelorbit"]], "aircraft": [[38, "module-gncpy.dynamics.aircraft"]], "basic": [[39, "module-gncpy.dynamics.basic"]], "gncpy.errors.ExtremeMeasurementNoiseError": [[40, "gncpy-errors-extrememeasurementnoiseerror"]], "gncpy.errors.ParticleDepletionError": [[41, "gncpy-errors-particledepletionerror"]], "gncpy.errors.ParticleEstimationDomainError": [[42, "gncpy-errors-particleestimationdomainerror"]], "BayesFilter": [[43, "bayesfilter"]], "BootstrapFilter": [[44, "bootstrapfilter"]], "EKFGaussianScaleMixtureFilter": [[45, "ekfgaussianscalemixturefilter"]], "ExtendedKalmanFilter": [[46, "extendedkalmanfilter"]], "GCIFilter": [[47, "gcifilter"]], "bayes_filter": [[48, "module-gncpy.filters.bayes_filter"]], "bootstrap_filter": [[49, "module-gncpy.filters.bootstrap_filter"]], "ekf_gaussian_scale_mixture_filter": [[50, "module-gncpy.filters.ekf_gaussian_scale_mixture_filter"]], "extended_kalman_filter": [[51, "module-gncpy.filters.extended_kalman_filter"]], "gci_filter": [[52, "module-gncpy.filters.gci_filter"]], "gsm_filter_base": [[53, "module-gncpy.filters.gsm_filter_base"]], "imm_gci_filter": [[54, "module-gncpy.filters.imm_gci_filter"]], "interacting_multiple_model": [[55, "module-gncpy.filters.interacting_multiple_model"]], "kalman_filter": [[56, "module-gncpy.filters.kalman_filter"]], "kf_gaussian_scale_mixture_filter": [[57, "module-gncpy.filters.kf_gaussian_scale_mixture_filter"]], "max_corr_ent_ukf": [[58, "module-gncpy.filters.max_corr_ent_ukf"]], "max_corr_ent_upf": [[59, "module-gncpy.filters.max_corr_ent_upf"]], "mcmc_particle_filter_base": [[60, "module-gncpy.filters.mcmc_particle_filter_base"]], "particle_filter": [[61, "module-gncpy.filters.particle_filter"]], "qkf_gaussian_scale_mixture_filter": [[62, "module-gncpy.filters.qkf_gaussian_scale_mixture_filter"]], "quadrature_kalman_filter": [[63, "module-gncpy.filters.quadrature_kalman_filter"]], "sqkf_gaussian_scale_mixture_filter": [[64, "module-gncpy.filters.sqkf_gaussian_scale_mixture_filter"]], "square_root_qkf": [[65, "module-gncpy.filters.square_root_qkf"]], "students_t_filter": [[66, "module-gncpy.filters.students_t_filter"]], "ukf_gaussian_scale_mixture_filter": [[67, "module-gncpy.filters.ukf_gaussian_scale_mixture_filter"]], "unscented_kalman_filter": [[68, "module-gncpy.filters.unscented_kalman_filter"]], "unscented_particle_filter": [[69, "module-gncpy.filters.unscented_particle_filter"]], "GSMFilterBase": [[70, "gsmfilterbase"]], "IMMGCIFilter": [[71, "immgcifilter"]], "InteractingMultipleModel": [[72, "interactingmultiplemodel"]], "KalmanFilter": [[73, "kalmanfilter"]], "KFGaussianScaleMixtureFilter": [[74, "kfgaussianscalemixturefilter"]], "MaxCorrEntUKF": [[75, "maxcorrentukf"]], "MaxCorrEntUPF": [[76, "maxcorrentupf"]], "MCMCParticleFilterBase": [[77, "mcmcparticlefilterbase"]], "ParticleFilter": [[78, "particlefilter"]], "QKFGaussianScaleMixtureFilter": [[79, "qkfgaussianscalemixturefilter"]], "QuadratureKalmanFilter": [[80, "quadraturekalmanfilter"]], "SQKFGaussianScaleMixtureFilter": [[81, "sqkfgaussianscalemixturefilter"]], "SquareRootQKF": [[82, "squarerootqkf"]], "StudentsTFilter": [[83, "studentstfilter"]], "UKFGaussianScaleMixtureFilter": [[84, "ukfgaussianscalemixturefilter"]], "UnscentedKalmanFilter": [[85, "unscentedkalmanfilter"]], "UnscentedParticleFilter": [[86, "unscentedparticlefilter"]], "Base2dParams": [[87, "base2dparams"]], "BaseGame": [[88, "basegame"]], "BaseGame2d": [[89, "basegame2d"]], "BaseParams": [[90, "baseparams"]], "WindowParams": [[91, "windowparams"]], "gncpy.game_engine.base_game.ndarray_representer": [[92, "gncpy-game-engine-base-game-ndarray-representer"]], "gncpy.game_engine.base_game.yaml": [[93, "gncpy-game-engine-base-game-yaml"]], "CBirth": [[94, "cbirth"]], "CCapabilities": [[95, "ccapabilities"]], "CCollision": [[96, "ccollision"]], "CDynamics": [[97, "cdynamics"]], "CEvents": [[98, "cevents"]], "CHazard": [[99, "chazard"]], "CPriority": [[100, "cpriority"]], "CShape": [[101, "cshape"]], "CTransform": [[102, "ctransform"]], "gncpy.game_engine.components.library_asset_dir": [[103, "gncpy-game-engine-components-library-asset-dir"]], "Entity": [[104, "entity"]], "EntityManager": [[105, "entitymanager"]], "base_game": [[106, "module-gncpy.game_engine.base_game"]], "components": [[107, "module-gncpy.game_engine.components"]], "entities": [[108, "module-gncpy.game_engine.entities"]], "physics2d": [[109, "module-gncpy.game_engine.physics2d"]], "rendering2d": [[110, "module-gncpy.game_engine.rendering2d"]], "Collision2dParams": [[111, "collision2dparams"]], "Physics2dParams": [[112, "physics2dparams"]], "gncpy.game_engine.physics2d.check_collision2d": [[113, "gncpy-game-engine-physics2d-check-collision2d"]], "gncpy.game_engine.physics2d.clamp_window_bounds2d": [[114, "gncpy-game-engine-physics2d-clamp-window-bounds2d"]], "gncpy.game_engine.physics2d.dist_to_pixels": [[115, "gncpy-game-engine-physics2d-dist-to-pixels"]], "gncpy.game_engine.physics2d.pixels_to_dist": [[116, "gncpy-game-engine-physics2d-pixels-to-dist"]], "gncpy.game_engine.physics2d.resolve_collision2d": [[117, "gncpy-game-engine-physics2d-resolve-collision2d"]], "Shape2dParams": [[118, "shape2dparams"]], "gncpy.game_engine.rendering2d.get_drawable_entities": [[119, "gncpy-game-engine-rendering2d-get-drawable-entities"]], "gncpy.game_engine.rendering2d.init_rendering_system": [[120, "gncpy-game-engine-rendering2d-init-rendering-system"]], "gncpy.game_engine.rendering2d.init_window": [[121, "gncpy-game-engine-rendering2d-init-window"]], "gncpy.game_engine.rendering2d.render": [[122, "gncpy-game-engine-rendering2d-render"]], "gncpy.game_engine.rendering2d.shutdown": [[123, "gncpy-game-engine-rendering2d-shutdown"]], "BirthModelParams": [[124, "birthmodelparams"]], "ControlModelParams": [[125, "controlmodelparams"]], "DynamicsParams": [[126, "dynamicsparams"]], "EventType": [[127, "eventtype"]], "HazardParams": [[128, "hazardparams"]], "ObstacleParams": [[129, "obstacleparams"]], "Params": [[130, "params"]], "PlayerParams": [[131, "playerparams"]], "ScoreParams": [[132, "scoreparams"]], "SimpleUAV2d": [[133, "simpleuav2d"], [136, "module-gncpy.games.SimpleUAV2d"], [178, "simpleuav2d"]], "StateConstraintParams": [[134, "stateconstraintparams"]], "TargetParams": [[135, "targetparams"]], "control": [[137, "module-gncpy.control"]], "coordinate_transforms": [[138, "module-gncpy.coordinate_transforms"]], "data_fusion": [[139, "module-gncpy.data_fusion"]], "distributions": [[140, "module-gncpy.distributions"]], "dynamics": [[141, "module-gncpy.dynamics"]], "errors": [[142, "module-gncpy.errors"]], "filters": [[143, "module-gncpy.filters"]], "game_engine": [[144, "module-gncpy.game_engine"]], "games": [[145, "module-gncpy.games"]], "math": [[146, "module-gncpy.math"]], "measurements": [[147, "module-gncpy.measurements"]], "orbital_mechanics": [[148, "module-gncpy.orbital_mechanics"]], "planning": [[149, "module-gncpy.planning"]], "plotting": [[150, "module-gncpy.plotting"]], "sampling": [[151, "module-gncpy.sampling"]], "utilities": [[152, "module-gncpy.utilities"]], "wgs84": [[153, "module-gncpy.wgs84"]], "gncpy.math.epanechnikov_kernel": [[154, "gncpy-math-epanechnikov-kernel"]], "gncpy.math.gamma_fnc": [[155, "gncpy-math-gamma-fnc"]], "gncpy.math.gaussian_kernel": [[156, "gncpy-math-gaussian-kernel"]], "gncpy.math.get_elem_sym_fnc": [[157, "gncpy-math-get-elem-sym-fnc"]], "gncpy.math.get_hessian": [[158, "gncpy-math-get-hessian"]], "gncpy.math.get_input_jacobian": [[159, "gncpy-math-get-input-jacobian"]], "gncpy.math.get_jacobian": [[160, "gncpy-math-get-jacobian"]], "gncpy.math.get_state_jacobian": [[161, "gncpy-math-get-state-jacobian"]], "gncpy.math.log_sum_exp": [[162, "gncpy-math-log-sum-exp"]], "gncpy.math.rk4": [[163, "gncpy-math-rk4"]], "gncpy.math.rk4_backward": [[164, "gncpy-math-rk4-backward"]], "gncpy.math.weighted_sum_mat": [[165, "gncpy-math-weighted-sum-mat"]], "gncpy.math.weighted_sum_vec": [[166, "gncpy-math-weighted-sum-vec"]], "gncpy.orbital_mechanics.correct_lon_ascend": [[167, "gncpy-orbital-mechanics-correct-lon-ascend"]], "gncpy.orbital_mechanics.ecc_anom_from_mean": [[168, "gncpy-orbital-mechanics-ecc-anom-from-mean"]], "gncpy.orbital_mechanics.ecef_from_orbit": [[169, "gncpy-orbital-mechanics-ecef-from-orbit"]], "gncpy.orbital_mechanics.true_anom_from_ecc": [[170, "gncpy-orbital-mechanics-true-anom-from-ecc"]], "AStar": [[171, "astar"]], "Node": [[172, "node"], [190, "node"]], "a_star": [[173, "module-gncpy.planning.a_star"]], "reinforcement_learning": [[174, "module-gncpy.planning.reinforcement_learning"]], "rrt_star": [[175, "module-gncpy.planning.rrt_star"]], "simple2d": [[176, "module-gncpy.planning.reinforcement_learning.envs.simple2d"]], "simpleUAV2d": [[177, "module-gncpy.planning.reinforcement_learning.envs.simple2d.simpleUAV2d"]], "SimpleUAVHazards2d": [[179, "simpleuavhazards2d"]], "envs": [[180, "module-gncpy.planning.reinforcement_learning.envs"]], "wrappers": [[181, "module-gncpy.planning.reinforcement_learning.wrappers"]], "BufferFames": [[182, "bufferfames"]], "GrayScaleObservation": [[183, "grayscaleobservation"]], "MaxFrames": [[184, "maxframes"]], "ResizeImage": [[185, "resizeimage"]], "SkipFrames": [[186, "skipframes"]], "StackFrames": [[187, "stackframes"]], "ExtendedLQRRRTStar": [[188, "extendedlqrrrtstar"]], "LQRRRTStar": [[189, "lqrrrtstar"]], "gncpy.plotting.calc_error_ellipse": [[191, "gncpy-plotting-calc-error-ellipse"]], "gncpy.plotting.get_cmap": [[192, "gncpy-plotting-get-cmap"]], "gncpy.plotting.init_plotting_opts": [[193, "gncpy-plotting-init-plotting-opts"]], "gncpy.plotting.set_title_label": [[194, "gncpy-plotting-set-title-label"]], "MetropolisHastings": [[195, "metropolishastings"]], "ClassPropertyDescriptor": [[196, "classpropertydescriptor"]], "ClassPropertyMetaClass": [[197, "classpropertymetaclass"]], "gncpy.utilities.classproperty": [[198, "gncpy-utilities-classproperty"]], "gncpy.wgs84.calc_earth_rate": [[199, "gncpy-wgs84-calc-earth-rate"]], "gncpy.wgs84.calc_ew_rad": [[200, "gncpy-wgs84-calc-ew-rad"]], "gncpy.wgs84.calc_gravity": [[201, "gncpy-wgs84-calc-gravity"]], "gncpy.wgs84.calc_ns_rad": [[202, "gncpy-wgs84-calc-ns-rad"]], "gncpy.wgs84.calc_transport_rate": [[203, "gncpy-wgs84-calc-transport-rate"]], "gncpy.wgs84.convert_msl_to_wgs": [[204, "gncpy-wgs84-convert-msl-to-wgs"]], "gncpy.wgs84.convert_wgs_to_msl": [[205, "gncpy-wgs84-convert-wgs-to-msl"]], "gncpy.wgs84.init_egm_lookup_table": [[206, "gncpy-wgs84-init-egm-lookup-table"]], "API Reference": [[207, "api-reference"]], "CI/CD Pipeline": [[208, "ci-cd-pipeline"]], "Github Actions Quick Guide": [[208, "github-actions-quick-guide"]], "Welcome to GNCPy\u2019s documentation!": [[209, "welcome-to-gncpy-s-documentation"]], "Contents:": [[209, null], [212, null], [216, null]], "Cite": [[209, "cite"]], "Indices and tables": [[209, "indices-and-tables"]], "License": [[210, "license"]], "Toolchain": [[211, "toolchain"]], "Development Environment Setup": [[211, "development-environment-setup"]], "Example Workflow": [[211, "example-workflow"]], "Notes on tox": [[211, "notes-on-tox"]], "Usage": [[212, "usage"]], "A* Examples": [[213, "a-examples"]], "Examples": [[213, "examples"], [214, "examples"], [215, "examples"], [217, "examples"]], "Normal A*": [[213, "normal-a"]], "Beam Search": [[213, "beam-search"]], "Weighted A*": [[213, "weighted-a"]], "Control Examples": [[214, "control-examples"]], "LQR Infinite Horizon Linear Dyanmics": [[214, "lqr-infinite-horizon-linear-dyanmics"]], "LQR Finite Horzon Linear Dynamics": [[214, "lqr-finite-horzon-linear-dynamics"]], "LQR Finite Horzon Non-linear Dynamics": [[214, "lqr-finite-horzon-non-linear-dynamics"]], "ELQR Modified Quadratization": [[214, "elqr-modified-quadratization"]], "ELQR Linear Dynamics": [[214, "elqr-linear-dynamics"]], "Filter Examples": [[215, "filter-examples"]], "Kalman Filter": [[215, "kalman-filter"]], "Extended Kalman Filter": [[215, "extended-kalman-filter"]], "Interacting Multiple Model Filter": [[215, "interacting-multiple-model-filter"]], "Planning Examples": [[216, "planning-examples"]], "RRT* Examples": [[217, "rrt-examples"]], "LQR-RRT* with Linear Dynamics": [[217, "lqr-rrt-with-linear-dynamics"]], "LQR-RRT* with Non-Linear Dynamics": [[217, "lqr-rrt-with-non-linear-dynamics"]], "ELQR-RRT* with Non-Linear Dynamics": [[217, "elqr-rrt-with-non-linear-dynamics"]]}, "indexentries": {"gncpy": [[1, "module-gncpy"]], "module": [[1, "module-gncpy"], [15, "module-gncpy.dynamics.aircraft.simple_multirotor"], [38, "module-gncpy.dynamics.aircraft"], [39, "module-gncpy.dynamics.basic"], [48, "module-gncpy.filters.bayes_filter"], [49, "module-gncpy.filters.bootstrap_filter"], [50, "module-gncpy.filters.ekf_gaussian_scale_mixture_filter"], [51, "module-gncpy.filters.extended_kalman_filter"], [52, "module-gncpy.filters.gci_filter"], [53, "module-gncpy.filters.gsm_filter_base"], [54, "module-gncpy.filters.imm_gci_filter"], [55, "module-gncpy.filters.interacting_multiple_model"], [56, "module-gncpy.filters.kalman_filter"], [57, "module-gncpy.filters.kf_gaussian_scale_mixture_filter"], [58, "module-gncpy.filters.max_corr_ent_ukf"], [59, "module-gncpy.filters.max_corr_ent_upf"], [60, "module-gncpy.filters.mcmc_particle_filter_base"], [61, "module-gncpy.filters.particle_filter"], [62, "module-gncpy.filters.qkf_gaussian_scale_mixture_filter"], [63, "module-gncpy.filters.quadrature_kalman_filter"], [64, "module-gncpy.filters.sqkf_gaussian_scale_mixture_filter"], [65, "module-gncpy.filters.square_root_qkf"], [66, "module-gncpy.filters.students_t_filter"], [67, "module-gncpy.filters.ukf_gaussian_scale_mixture_filter"], [68, "module-gncpy.filters.unscented_kalman_filter"], [69, "module-gncpy.filters.unscented_particle_filter"], [106, "module-gncpy.game_engine.base_game"], [107, "module-gncpy.game_engine.components"], [108, "module-gncpy.game_engine.entities"], [109, "module-gncpy.game_engine.physics2d"], [110, "module-gncpy.game_engine.rendering2d"], [136, "module-gncpy.games.SimpleUAV2d"], [137, "module-gncpy.control"], [138, "module-gncpy.coordinate_transforms"], [139, "module-gncpy.data_fusion"], [140, "module-gncpy.distributions"], [141, "module-gncpy.dynamics"], [142, "module-gncpy.errors"], [143, "module-gncpy.filters"], [144, "module-gncpy.game_engine"], [145, "module-gncpy.games"], [146, "module-gncpy.math"], [147, "module-gncpy.measurements"], [148, "module-gncpy.orbital_mechanics"], [149, "module-gncpy.planning"], [150, "module-gncpy.plotting"], [151, "module-gncpy.sampling"], [152, "module-gncpy.utilities"], [153, "module-gncpy.wgs84"], [173, "module-gncpy.planning.a_star"], [174, "module-gncpy.planning.reinforcement_learning"], [175, "module-gncpy.planning.rrt_star"], [176, "module-gncpy.planning.reinforcement_learning.envs.simple2d"], [177, "module-gncpy.planning.reinforcement_learning.envs.simple2d.simpleUAV2d"], [180, "module-gncpy.planning.reinforcement_learning.envs"], [181, "module-gncpy.planning.reinforcement_learning.wrappers"]], "elqr (class in gncpy.control)": [[2, "gncpy.control.ELQR"]], "q (elqr property)": [[2, "gncpy.control.ELQR.Q"]], "r (elqr property)": [[2, "gncpy.control.ELQR.R"]], "__init__() (elqr method)": [[2, "gncpy.control.ELQR.__init__"]], "backward_pass() (elqr method)": [[2, "gncpy.control.ELQR.backward_pass"]], "calculate_control() (elqr method)": [[2, "gncpy.control.ELQR.calculate_control"]], "cost_function() (elqr method)": [[2, "gncpy.control.ELQR.cost_function"]], "ct_come_mats (elqr attribute)": [[2, "gncpy.control.ELQR.ct_come_mats"]], "ct_come_vecs (elqr attribute)": [[2, "gncpy.control.ELQR.ct_come_vecs"]], "dt (elqr property)": [[2, "gncpy.control.ELQR.dt"]], "forward_pass() (elqr method)": [[2, "gncpy.control.ELQR.forward_pass"]], "get_state_space() (elqr method)": [[2, "gncpy.control.ELQR.get_state_space"]], "gif_frame_skip (elqr attribute)": [[2, "gncpy.control.ELQR.gif_frame_skip"]], "max_iters (elqr attribute)": [[2, "gncpy.control.ELQR.max_iters"]], "prop_state() (elqr method)": [[2, "gncpy.control.ELQR.prop_state"]], "prop_state_backward() (elqr method)": [[2, "gncpy.control.ELQR.prop_state_backward"]], "prop_state_forward() (elqr method)": [[2, "gncpy.control.ELQR.prop_state_forward"]], "quadratize_cost() (elqr method)": [[2, "gncpy.control.ELQR.quadratize_cost"]], "reset() (elqr method)": [[2, "gncpy.control.ELQR.reset"]], "set_cost_model() (elqr method)": [[2, "gncpy.control.ELQR.set_cost_model"]], "set_state_model() (elqr method)": [[2, "gncpy.control.ELQR.set_state_model"]], "solve_dare() (elqr method)": [[2, "gncpy.control.ELQR.solve_dare"]], "tol (elqr attribute)": [[2, "gncpy.control.ELQR.tol"]], "use_custom_cost (elqr attribute)": [[2, "gncpy.control.ELQR.use_custom_cost"]], "lqr (class in gncpy.control)": [[3, "gncpy.control.LQR"]], "q (lqr property)": [[3, "gncpy.control.LQR.Q"]], "r (lqr property)": [[3, "gncpy.control.LQR.R"]], "__init__() (lqr method)": [[3, "gncpy.control.LQR.__init__"]], "backward_pass() (lqr method)": [[3, "gncpy.control.LQR.backward_pass"]], "calculate_control() (lqr method)": [[3, "gncpy.control.LQR.calculate_control"]], "cost_function() (lqr method)": [[3, "gncpy.control.LQR.cost_function"]], "ct_go_mats (lqr attribute)": [[3, "gncpy.control.LQR.ct_go_mats"]], "ct_go_vecs (lqr attribute)": [[3, "gncpy.control.LQR.ct_go_vecs"]], "dt (lqr property)": [[3, "gncpy.control.LQR.dt"]], "dynobj (lqr attribute)": [[3, "gncpy.control.LQR.dynObj"]], "end_state (lqr attribute)": [[3, "gncpy.control.LQR.end_state"]], "feedback_gain (lqr attribute)": [[3, "gncpy.control.LQR.feedback_gain"]], "feedthrough_gain (lqr attribute)": [[3, "gncpy.control.LQR.feedthrough_gain"]], "get_state_space() (lqr method)": [[3, "gncpy.control.LQR.get_state_space"]], "hard_constraints (lqr attribute)": [[3, "gncpy.control.LQR.hard_constraints"]], "prop_state() (lqr method)": [[3, "gncpy.control.LQR.prop_state"]], "prop_state_backward() (lqr method)": [[3, "gncpy.control.LQR.prop_state_backward"]], "set_cost_model() (lqr method)": [[3, "gncpy.control.LQR.set_cost_model"]], "set_state_model() (lqr method)": [[3, "gncpy.control.LQR.set_state_model"]], "solve_dare() (lqr method)": [[3, "gncpy.control.LQR.solve_dare"]], "time_horizon (lqr attribute)": [[3, "gncpy.control.LQR.time_horizon"]], "u_nom (lqr attribute)": [[3, "gncpy.control.LQR.u_nom"]], "ecef_to_lla() (in module gncpy.coordinate_transforms)": [[4, "gncpy.coordinate_transforms.ecef_to_LLA"]], "ecef_to_ned() (in module gncpy.coordinate_transforms)": [[5, "gncpy.coordinate_transforms.ecef_to_NED"]], "lla_to_ecef() (in module gncpy.coordinate_transforms)": [[6, "gncpy.coordinate_transforms.lla_to_ECEF"]], "lla_to_ned() (in module gncpy.coordinate_transforms)": [[7, "gncpy.coordinate_transforms.lla_to_NED"]], "ned_to_lla() (in module gncpy.coordinate_transforms)": [[8, "gncpy.coordinate_transforms.ned_to_LLA"]], "generalizedcovarianceintersection() (in module gncpy.data_fusion)": [[9, "gncpy.data_fusion.GeneralizedCovarianceIntersection"]], "particle (class in gncpy.distributions)": [[10, "gncpy.distributions.Particle"]], "__init__() (particle method)": [[10, "gncpy.distributions.Particle.__init__"]], "mean (particle property)": [[10, "gncpy.distributions.Particle.mean"]], "point (particle attribute)": [[10, "gncpy.distributions.Particle.point"]], "sigmapoints (particle attribute)": [[10, "gncpy.distributions.Particle.sigmaPoints"]], "uncertainty (particle attribute)": [[10, "gncpy.distributions.Particle.uncertainty"]], "particledistribution (class in gncpy.distributions)": [[11, "gncpy.distributions.ParticleDistribution"]], "__init__() (particledistribution method)": [[11, "gncpy.distributions.ParticleDistribution.__init__"]], "add_particle() (particledistribution method)": [[11, "gncpy.distributions.ParticleDistribution.add_particle"]], "clear_particles() (particledistribution method)": [[11, "gncpy.distributions.ParticleDistribution.clear_particles"]], "covariance (particledistribution property)": [[11, "gncpy.distributions.ParticleDistribution.covariance"]], "mean (particledistribution property)": [[11, "gncpy.distributions.ParticleDistribution.mean"]], "num_particles (particledistribution property)": [[11, "gncpy.distributions.ParticleDistribution.num_particles"]], "particles (particledistribution property)": [[11, "gncpy.distributions.ParticleDistribution.particles"]], "uncertainties (particledistribution property)": [[11, "gncpy.distributions.ParticleDistribution.uncertainties"]], "update_weights() (particledistribution method)": [[11, "gncpy.distributions.ParticleDistribution.update_weights"]], "weights (particledistribution property)": [[11, "gncpy.distributions.ParticleDistribution.weights"]], "quadraturepoints (class in gncpy.distributions)": [[12, "gncpy.distributions.QuadraturePoints"]], "__init__() (quadraturepoints method)": [[12, "gncpy.distributions.QuadraturePoints.__init__"]], "cov (quadraturepoints property)": [[12, "gncpy.distributions.QuadraturePoints.cov"]], "mean (quadraturepoints property)": [[12, "gncpy.distributions.QuadraturePoints.mean"]], "num_axes (quadraturepoints attribute)": [[12, "gncpy.distributions.QuadraturePoints.num_axes"]], "num_points (quadraturepoints property)": [[12, "gncpy.distributions.QuadraturePoints.num_points"]], "plot_points() (quadraturepoints method)": [[12, "gncpy.distributions.QuadraturePoints.plot_points"]], "points (quadraturepoints attribute)": [[12, "gncpy.distributions.QuadraturePoints.points"]], "points_per_axis (quadraturepoints attribute)": [[12, "gncpy.distributions.QuadraturePoints.points_per_axis"]], "update_points() (quadraturepoints method)": [[12, "gncpy.distributions.QuadraturePoints.update_points"]], "weights (quadraturepoints attribute)": [[12, "gncpy.distributions.QuadraturePoints.weights"]], "sigmapoints (class in gncpy.distributions)": [[13, "gncpy.distributions.SigmaPoints"]], "__init__() (sigmapoints method)": [[13, "gncpy.distributions.SigmaPoints.__init__"]], "alpha (sigmapoints attribute)": [[13, "gncpy.distributions.SigmaPoints.alpha"]], "beta (sigmapoints attribute)": [[13, "gncpy.distributions.SigmaPoints.beta"]], "cov (sigmapoints property)": [[13, "gncpy.distributions.SigmaPoints.cov"]], "init_weights() (sigmapoints method)": [[13, "gncpy.distributions.SigmaPoints.init_weights"]], "kappa (sigmapoints attribute)": [[13, "gncpy.distributions.SigmaPoints.kappa"]], "lam (sigmapoints property)": [[13, "gncpy.distributions.SigmaPoints.lam"]], "mean (sigmapoints property)": [[13, "gncpy.distributions.SigmaPoints.mean"]], "num_points (sigmapoints property)": [[13, "gncpy.distributions.SigmaPoints.num_points"]], "plot_points() (sigmapoints method)": [[13, "gncpy.distributions.SigmaPoints.plot_points"]], "update_points() (sigmapoints method)": [[13, "gncpy.distributions.SigmaPoints.update_points"]], "weights_cov (sigmapoints property)": [[13, "gncpy.distributions.SigmaPoints.weights_cov"]], "weights_mean (sigmapoints property)": [[13, "gncpy.distributions.SigmaPoints.weights_mean"]], "simpleparticledistribution (class in gncpy.distributions)": [[14, "gncpy.distributions.SimpleParticleDistribution"]], "__init__() (simpleparticledistribution method)": [[14, "gncpy.distributions.SimpleParticleDistribution.__init__"]], "plot_particles() (simpleparticledistribution method)": [[14, "gncpy.distributions.SimpleParticleDistribution.plot_particles"]], "gncpy.dynamics.aircraft.simple_multirotor": [[15, "module-gncpy.dynamics.aircraft.simple_multirotor"]], "aeroparams (class in gncpy.dynamics.aircraft.simple_multirotor)": [[16, "gncpy.dynamics.aircraft.simple_multirotor.AeroParams"]], "__init__() (aeroparams method)": [[16, "gncpy.dynamics.aircraft.simple_multirotor.AeroParams.__init__"]], "cd (aeroparams attribute)": [[16, "gncpy.dynamics.aircraft.simple_multirotor.AeroParams.cd"]], "aircraftparams (class in gncpy.dynamics.aircraft.simple_multirotor)": [[17, "gncpy.dynamics.aircraft.simple_multirotor.AircraftParams"]], "__init__() (aircraftparams method)": [[17, "gncpy.dynamics.aircraft.simple_multirotor.AircraftParams.__init__"]], "aero (aircraftparams attribute)": [[17, "gncpy.dynamics.aircraft.simple_multirotor.AircraftParams.aero"]], "geo (aircraftparams attribute)": [[17, "gncpy.dynamics.aircraft.simple_multirotor.AircraftParams.geo"]], "mass (aircraftparams attribute)": [[17, "gncpy.dynamics.aircraft.simple_multirotor.AircraftParams.mass"]], "motor (aircraftparams attribute)": [[17, "gncpy.dynamics.aircraft.simple_multirotor.AircraftParams.motor"]], "prop (aircraftparams attribute)": [[17, "gncpy.dynamics.aircraft.simple_multirotor.AircraftParams.prop"]], "effector (class in gncpy.dynamics.aircraft.simple_multirotor)": [[18, "gncpy.dynamics.aircraft.simple_multirotor.Effector"]], "__init__() (effector method)": [[18, "gncpy.dynamics.aircraft.simple_multirotor.Effector.__init__"]], "step() (effector method)": [[18, "gncpy.dynamics.aircraft.simple_multirotor.Effector.step"]], "environment (class in gncpy.dynamics.aircraft.simple_multirotor)": [[19, "gncpy.dynamics.aircraft.simple_multirotor.Environment"]], "__init__() (environment method)": [[19, "gncpy.dynamics.aircraft.simple_multirotor.Environment.__init__"]], "state (environment attribute)": [[19, "gncpy.dynamics.aircraft.simple_multirotor.Environment.state"]], "step() (environment method)": [[19, "gncpy.dynamics.aircraft.simple_multirotor.Environment.step"]], "geoparams (class in gncpy.dynamics.aircraft.simple_multirotor)": [[20, "gncpy.dynamics.aircraft.simple_multirotor.GeoParams"]], "__init__() (geoparams method)": [[20, "gncpy.dynamics.aircraft.simple_multirotor.GeoParams.__init__"]], "front_area_m2 (geoparams attribute)": [[20, "gncpy.dynamics.aircraft.simple_multirotor.GeoParams.front_area_m2"]], "massparams (class in gncpy.dynamics.aircraft.simple_multirotor)": [[21, "gncpy.dynamics.aircraft.simple_multirotor.MassParams"]], "__init__() (massparams method)": [[21, "gncpy.dynamics.aircraft.simple_multirotor.MassParams.__init__"]], "cg_m (massparams attribute)": [[21, "gncpy.dynamics.aircraft.simple_multirotor.MassParams.cg_m"]], "inertia_kgm2 (massparams attribute)": [[21, "gncpy.dynamics.aircraft.simple_multirotor.MassParams.inertia_kgm2"]], "mass_kg (massparams attribute)": [[21, "gncpy.dynamics.aircraft.simple_multirotor.MassParams.mass_kg"]], "motorparams (class in gncpy.dynamics.aircraft.simple_multirotor)": [[22, "gncpy.dynamics.aircraft.simple_multirotor.MotorParams"]], "__init__() (motorparams method)": [[22, "gncpy.dynamics.aircraft.simple_multirotor.MotorParams.__init__"]], "dir (motorparams attribute)": [[22, "gncpy.dynamics.aircraft.simple_multirotor.MotorParams.dir"]], "num_motors (motorparams property)": [[22, "gncpy.dynamics.aircraft.simple_multirotor.MotorParams.num_motors"]], "pos_m (motorparams attribute)": [[22, "gncpy.dynamics.aircraft.simple_multirotor.MotorParams.pos_m"]], "propparams (class in gncpy.dynamics.aircraft.simple_multirotor)": [[23, "gncpy.dynamics.aircraft.simple_multirotor.PropParams"]], "__init__() (propparams method)": [[23, "gncpy.dynamics.aircraft.simple_multirotor.PropParams.__init__"]], "poly_thrust (propparams attribute)": [[23, "gncpy.dynamics.aircraft.simple_multirotor.PropParams.poly_thrust"]], "poly_torque (propparams attribute)": [[23, "gncpy.dynamics.aircraft.simple_multirotor.PropParams.poly_torque"]], "simplemultirotor (class in gncpy.dynamics.aircraft.simple_multirotor)": [[24, "gncpy.dynamics.aircraft.simple_multirotor.SimpleMultirotor"]], "__init__() (simplemultirotor method)": [[24, "gncpy.dynamics.aircraft.simple_multirotor.SimpleMultirotor.__init__"]], "effector (simplemultirotor attribute)": [[24, "gncpy.dynamics.aircraft.simple_multirotor.SimpleMultirotor.effector"]], "env (simplemultirotor attribute)": [[24, "gncpy.dynamics.aircraft.simple_multirotor.SimpleMultirotor.env"]], "get_input_mat() (simplemultirotor method)": [[24, "gncpy.dynamics.aircraft.simple_multirotor.SimpleMultirotor.get_input_mat"]], "get_state_mat() (simplemultirotor method)": [[24, "gncpy.dynamics.aircraft.simple_multirotor.SimpleMultirotor.get_state_mat"]], "propagate_state() (simplemultirotor method)": [[24, "gncpy.dynamics.aircraft.simple_multirotor.SimpleMultirotor.propagate_state"]], "set_initial_conditions() (simplemultirotor method)": [[24, "gncpy.dynamics.aircraft.simple_multirotor.SimpleMultirotor.set_initial_conditions"]], "state_map (simplemultirotor attribute)": [[24, "gncpy.dynamics.aircraft.simple_multirotor.SimpleMultirotor.state_map"]], "state_names (simplemultirotor attribute)": [[24, "gncpy.dynamics.aircraft.simple_multirotor.SimpleMultirotor.state_names"]], "state_units (simplemultirotor attribute)": [[24, "gncpy.dynamics.aircraft.simple_multirotor.SimpleMultirotor.state_units"]], "validate_params_file() (simplemultirotor method)": [[24, "gncpy.dynamics.aircraft.simple_multirotor.SimpleMultirotor.validate_params_file"]], "vehicle (simplemultirotor attribute)": [[24, "gncpy.dynamics.aircraft.simple_multirotor.SimpleMultirotor.vehicle"]], "vehicle (class in gncpy.dynamics.aircraft.simple_multirotor)": [[25, "gncpy.dynamics.aircraft.simple_multirotor.Vehicle"]], "__init__() (vehicle method)": [[25, "gncpy.dynamics.aircraft.simple_multirotor.Vehicle.__init__"]], "calc_derived_states() (vehicle method)": [[25, "gncpy.dynamics.aircraft.simple_multirotor.Vehicle.calc_derived_states"]], "eul_to_dcm() (vehicle method)": [[25, "gncpy.dynamics.aircraft.simple_multirotor.Vehicle.eul_to_dcm"]], "params (vehicle attribute)": [[25, "gncpy.dynamics.aircraft.simple_multirotor.Vehicle.params"]], "ref_lat (vehicle attribute)": [[25, "gncpy.dynamics.aircraft.simple_multirotor.Vehicle.ref_lat"]], "ref_lon (vehicle attribute)": [[25, "gncpy.dynamics.aircraft.simple_multirotor.Vehicle.ref_lon"]], "set_dcm_earth2body() (vehicle method)": [[25, "gncpy.dynamics.aircraft.simple_multirotor.Vehicle.set_dcm_earth2body"]], "state (vehicle attribute)": [[25, "gncpy.dynamics.aircraft.simple_multirotor.Vehicle.state"]], "step() (vehicle method)": [[25, "gncpy.dynamics.aircraft.simple_multirotor.Vehicle.step"]], "takenoff (vehicle attribute)": [[25, "gncpy.dynamics.aircraft.simple_multirotor.Vehicle.takenoff"]], "clohessywiltshireorbit (class in gncpy.dynamics.basic)": [[26, "gncpy.dynamics.basic.ClohessyWiltshireOrbit"]], "__init__() (clohessywiltshireorbit method)": [[26, "gncpy.dynamics.basic.ClohessyWiltshireOrbit.__init__"]], "get_dis_process_noise_mat() (clohessywiltshireorbit method)": [[26, "gncpy.dynamics.basic.ClohessyWiltshireOrbit.get_dis_process_noise_mat"]], "get_input_mat() (clohessywiltshireorbit method)": [[26, "gncpy.dynamics.basic.ClohessyWiltshireOrbit.get_input_mat"]], "get_state_mat() (clohessywiltshireorbit method)": [[26, "gncpy.dynamics.basic.ClohessyWiltshireOrbit.get_state_mat"]], "mean_motion (clohessywiltshireorbit attribute)": [[26, "gncpy.dynamics.basic.ClohessyWiltshireOrbit.mean_motion"]], "propagate_state() (clohessywiltshireorbit method)": [[26, "gncpy.dynamics.basic.ClohessyWiltshireOrbit.propagate_state"]], "state_names (clohessywiltshireorbit attribute)": [[26, "gncpy.dynamics.basic.ClohessyWiltshireOrbit.state_names"]], "clohessywiltshireorbit2d (class in gncpy.dynamics.basic)": [[27, "gncpy.dynamics.basic.ClohessyWiltshireOrbit2d"]], "__init__() (clohessywiltshireorbit2d method)": [[27, "gncpy.dynamics.basic.ClohessyWiltshireOrbit2d.__init__"]], "get_dis_process_noise_mat() (clohessywiltshireorbit2d method)": [[27, "gncpy.dynamics.basic.ClohessyWiltshireOrbit2d.get_dis_process_noise_mat"]], "get_input_mat() (clohessywiltshireorbit2d method)": [[27, "gncpy.dynamics.basic.ClohessyWiltshireOrbit2d.get_input_mat"]], "get_state_mat() (clohessywiltshireorbit2d method)": [[27, "gncpy.dynamics.basic.ClohessyWiltshireOrbit2d.get_state_mat"]], "mean_motion (clohessywiltshireorbit2d attribute)": [[27, "gncpy.dynamics.basic.ClohessyWiltshireOrbit2d.mean_motion"]], "propagate_state() (clohessywiltshireorbit2d method)": [[27, "gncpy.dynamics.basic.ClohessyWiltshireOrbit2d.propagate_state"]], "state_names (clohessywiltshireorbit2d attribute)": [[27, "gncpy.dynamics.basic.ClohessyWiltshireOrbit2d.state_names"]], "coordinatedturnknown (class in gncpy.dynamics.basic)": [[28, "gncpy.dynamics.basic.CoordinatedTurnKnown"]], "__init__() (coordinatedturnknown method)": [[28, "gncpy.dynamics.basic.CoordinatedTurnKnown.__init__"]], "get_dis_process_noise_mat() (coordinatedturnknown method)": [[28, "gncpy.dynamics.basic.CoordinatedTurnKnown.get_dis_process_noise_mat"]], "get_input_mat() (coordinatedturnknown method)": [[28, "gncpy.dynamics.basic.CoordinatedTurnKnown.get_input_mat"]], "get_state_mat() (coordinatedturnknown method)": [[28, "gncpy.dynamics.basic.CoordinatedTurnKnown.get_state_mat"]], "propagate_state() (coordinatedturnknown method)": [[28, "gncpy.dynamics.basic.CoordinatedTurnKnown.propagate_state"]], "state_names (coordinatedturnknown attribute)": [[28, "gncpy.dynamics.basic.CoordinatedTurnKnown.state_names"]], "turn_rate (coordinatedturnknown attribute)": [[28, "gncpy.dynamics.basic.CoordinatedTurnKnown.turn_rate"]], "coordinatedturnunknown (class in gncpy.dynamics.basic)": [[29, "gncpy.dynamics.basic.CoordinatedTurnUnknown"]], "__init__() (coordinatedturnunknown method)": [[29, "gncpy.dynamics.basic.CoordinatedTurnUnknown.__init__"]], "alpha (coordinatedturnunknown property)": [[29, "gncpy.dynamics.basic.CoordinatedTurnUnknown.alpha"]], "beta (coordinatedturnunknown property)": [[29, "gncpy.dynamics.basic.CoordinatedTurnUnknown.beta"]], "cont_fnc_lst (coordinatedturnunknown property)": [[29, "gncpy.dynamics.basic.CoordinatedTurnUnknown.cont_fnc_lst"]], "get_input_mat() (coordinatedturnunknown method)": [[29, "gncpy.dynamics.basic.CoordinatedTurnUnknown.get_input_mat"]], "get_state_mat() (coordinatedturnunknown method)": [[29, "gncpy.dynamics.basic.CoordinatedTurnUnknown.get_state_mat"]], "propagate_state() (coordinatedturnunknown method)": [[29, "gncpy.dynamics.basic.CoordinatedTurnUnknown.propagate_state"]], "state_names (coordinatedturnunknown attribute)": [[29, "gncpy.dynamics.basic.CoordinatedTurnUnknown.state_names"]], "turn_rate_cor_time (coordinatedturnunknown attribute)": [[29, "gncpy.dynamics.basic.CoordinatedTurnUnknown.turn_rate_cor_time"]], "curvilinearmotion (class in gncpy.dynamics.basic)": [[30, "gncpy.dynamics.basic.CurvilinearMotion"]], "__init__() (curvilinearmotion method)": [[30, "gncpy.dynamics.basic.CurvilinearMotion.__init__"]], "cont_fnc_lst (curvilinearmotion property)": [[30, "gncpy.dynamics.basic.CurvilinearMotion.cont_fnc_lst"]], "get_input_mat() (curvilinearmotion method)": [[30, "gncpy.dynamics.basic.CurvilinearMotion.get_input_mat"]], "get_state_mat() (curvilinearmotion method)": [[30, "gncpy.dynamics.basic.CurvilinearMotion.get_state_mat"]], "propagate_state() (curvilinearmotion method)": [[30, "gncpy.dynamics.basic.CurvilinearMotion.propagate_state"]], "state_names (curvilinearmotion attribute)": [[30, "gncpy.dynamics.basic.CurvilinearMotion.state_names"]], "doubleintegrator (class in gncpy.dynamics.basic)": [[31, "gncpy.dynamics.basic.DoubleIntegrator"]], "__init__() (doubleintegrator method)": [[31, "gncpy.dynamics.basic.DoubleIntegrator.__init__"]], "get_dis_process_noise_mat() (doubleintegrator method)": [[31, "gncpy.dynamics.basic.DoubleIntegrator.get_dis_process_noise_mat"]], "get_input_mat() (doubleintegrator method)": [[31, "gncpy.dynamics.basic.DoubleIntegrator.get_input_mat"]], "get_state_mat() (doubleintegrator method)": [[31, "gncpy.dynamics.basic.DoubleIntegrator.get_state_mat"]], "propagate_state() (doubleintegrator method)": [[31, "gncpy.dynamics.basic.DoubleIntegrator.propagate_state"]], "state_names (doubleintegrator property)": [[31, "gncpy.dynamics.basic.DoubleIntegrator.state_names"]], "dynamicsbase (class in gncpy.dynamics.basic)": [[32, "gncpy.dynamics.basic.DynamicsBase"]], "__init__() (dynamicsbase method)": [[32, "gncpy.dynamics.basic.DynamicsBase.__init__"]], "control_model (dynamicsbase attribute)": [[32, "gncpy.dynamics.basic.DynamicsBase.control_model"]], "get_input_mat() (dynamicsbase method)": [[32, "gncpy.dynamics.basic.DynamicsBase.get_input_mat"]], "get_state_mat() (dynamicsbase method)": [[32, "gncpy.dynamics.basic.DynamicsBase.get_state_mat"]], "propagate_state() (dynamicsbase method)": [[32, "gncpy.dynamics.basic.DynamicsBase.propagate_state"]], "state_constraint (dynamicsbase attribute)": [[32, "gncpy.dynamics.basic.DynamicsBase.state_constraint"]], "state_names (dynamicsbase attribute)": [[32, "gncpy.dynamics.basic.DynamicsBase.state_names"]], "irobotcreate (class in gncpy.dynamics.basic)": [[33, "gncpy.dynamics.basic.IRobotCreate"]], "__init__() (irobotcreate method)": [[33, "gncpy.dynamics.basic.IRobotCreate.__init__"]], "cont_fnc_lst (irobotcreate property)": [[33, "gncpy.dynamics.basic.IRobotCreate.cont_fnc_lst"]], "get_input_mat() (irobotcreate method)": [[33, "gncpy.dynamics.basic.IRobotCreate.get_input_mat"]], "get_state_mat() (irobotcreate method)": [[33, "gncpy.dynamics.basic.IRobotCreate.get_state_mat"]], "propagate_state() (irobotcreate method)": [[33, "gncpy.dynamics.basic.IRobotCreate.propagate_state"]], "state_names (irobotcreate attribute)": [[33, "gncpy.dynamics.basic.IRobotCreate.state_names"]], "wheel_separation (irobotcreate property)": [[33, "gncpy.dynamics.basic.IRobotCreate.wheel_separation"]], "karlgaardorbit (class in gncpy.dynamics.basic)": [[34, "gncpy.dynamics.basic.KarlgaardOrbit"]], "__init__() (karlgaardorbit method)": [[34, "gncpy.dynamics.basic.KarlgaardOrbit.__init__"]], "cont_fnc_lst (karlgaardorbit property)": [[34, "gncpy.dynamics.basic.KarlgaardOrbit.cont_fnc_lst"]], "get_input_mat() (karlgaardorbit method)": [[34, "gncpy.dynamics.basic.KarlgaardOrbit.get_input_mat"]], "get_state_mat() (karlgaardorbit method)": [[34, "gncpy.dynamics.basic.KarlgaardOrbit.get_state_mat"]], "propagate_state() (karlgaardorbit method)": [[34, "gncpy.dynamics.basic.KarlgaardOrbit.propagate_state"]], "state_names (karlgaardorbit attribute)": [[34, "gncpy.dynamics.basic.KarlgaardOrbit.state_names"]], "lineardynamicsbase (class in gncpy.dynamics.basic)": [[35, "gncpy.dynamics.basic.LinearDynamicsBase"]], "__init__() (lineardynamicsbase method)": [[35, "gncpy.dynamics.basic.LinearDynamicsBase.__init__"]], "get_dis_process_noise_mat() (lineardynamicsbase method)": [[35, "gncpy.dynamics.basic.LinearDynamicsBase.get_dis_process_noise_mat"]], "get_input_mat() (lineardynamicsbase method)": [[35, "gncpy.dynamics.basic.LinearDynamicsBase.get_input_mat"]], "get_state_mat() (lineardynamicsbase method)": [[35, "gncpy.dynamics.basic.LinearDynamicsBase.get_state_mat"]], "propagate_state() (lineardynamicsbase method)": [[35, "gncpy.dynamics.basic.LinearDynamicsBase.propagate_state"]], "state_names (lineardynamicsbase attribute)": [[35, "gncpy.dynamics.basic.LinearDynamicsBase.state_names"]], "nonlineardynamicsbase (class in gncpy.dynamics.basic)": [[36, "gncpy.dynamics.basic.NonlinearDynamicsBase"]], "__init__() (nonlineardynamicsbase method)": [[36, "gncpy.dynamics.basic.NonlinearDynamicsBase.__init__"]], "cont_fnc_lst (nonlineardynamicsbase property)": [[36, "gncpy.dynamics.basic.NonlinearDynamicsBase.cont_fnc_lst"]], "dt (nonlineardynamicsbase attribute)": [[36, "gncpy.dynamics.basic.NonlinearDynamicsBase.dt"]], "get_input_mat() (nonlineardynamicsbase method)": [[36, "gncpy.dynamics.basic.NonlinearDynamicsBase.get_input_mat"]], "get_state_mat() (nonlineardynamicsbase method)": [[36, "gncpy.dynamics.basic.NonlinearDynamicsBase.get_state_mat"]], "integrator_params (nonlineardynamicsbase attribute)": [[36, "gncpy.dynamics.basic.NonlinearDynamicsBase.integrator_params"]], "integrator_type (nonlineardynamicsbase attribute)": [[36, "gncpy.dynamics.basic.NonlinearDynamicsBase.integrator_type"]], "propagate_state() (nonlineardynamicsbase method)": [[36, "gncpy.dynamics.basic.NonlinearDynamicsBase.propagate_state"]], "state_names (nonlineardynamicsbase attribute)": [[36, "gncpy.dynamics.basic.NonlinearDynamicsBase.state_names"]], "tschaunerhempelorbit (class in gncpy.dynamics.basic)": [[37, "gncpy.dynamics.basic.TschaunerHempelOrbit"]], "__init__() (tschaunerhempelorbit method)": [[37, "gncpy.dynamics.basic.TschaunerHempelOrbit.__init__"]], "cont_fnc_lst (tschaunerhempelorbit property)": [[37, "gncpy.dynamics.basic.TschaunerHempelOrbit.cont_fnc_lst"]], "eccentricity (tschaunerhempelorbit attribute)": [[37, "gncpy.dynamics.basic.TschaunerHempelOrbit.eccentricity"]], "get_input_mat() (tschaunerhempelorbit method)": [[37, "gncpy.dynamics.basic.TschaunerHempelOrbit.get_input_mat"]], "get_state_mat() (tschaunerhempelorbit method)": [[37, "gncpy.dynamics.basic.TschaunerHempelOrbit.get_state_mat"]], "mu (tschaunerhempelorbit attribute)": [[37, "gncpy.dynamics.basic.TschaunerHempelOrbit.mu"]], "propagate_state() (tschaunerhempelorbit method)": [[37, "gncpy.dynamics.basic.TschaunerHempelOrbit.propagate_state"]], "semi_major (tschaunerhempelorbit attribute)": [[37, "gncpy.dynamics.basic.TschaunerHempelOrbit.semi_major"]], "state_names (tschaunerhempelorbit attribute)": [[37, "gncpy.dynamics.basic.TschaunerHempelOrbit.state_names"]], "gncpy.dynamics.aircraft": [[38, "module-gncpy.dynamics.aircraft"]], "gncpy.dynamics.basic": [[39, "module-gncpy.dynamics.basic"]], "extrememeasurementnoiseerror": [[40, "gncpy.errors.ExtremeMeasurementNoiseError"]], "particledepletionerror": [[41, "gncpy.errors.ParticleDepletionError"]], "particleestimationdomainerror": [[42, "gncpy.errors.ParticleEstimationDomainError"]], "bayesfilter (class in gncpy.filters.bayes_filter)": [[43, "gncpy.filters.bayes_filter.BayesFilter"]], "__init__() (bayesfilter method)": [[43, "gncpy.filters.bayes_filter.BayesFilter.__init__"]], "correct() (bayesfilter method)": [[43, "gncpy.filters.bayes_filter.BayesFilter.correct"]], "load_filter_state() (bayesfilter method)": [[43, "gncpy.filters.bayes_filter.BayesFilter.load_filter_state"]], "predict() (bayesfilter method)": [[43, "gncpy.filters.bayes_filter.BayesFilter.predict"]], "save_filter_state() (bayesfilter method)": [[43, "gncpy.filters.bayes_filter.BayesFilter.save_filter_state"]], "set_measurement_model() (bayesfilter method)": [[43, "gncpy.filters.bayes_filter.BayesFilter.set_measurement_model"]], "set_state_model() (bayesfilter method)": [[43, "gncpy.filters.bayes_filter.BayesFilter.set_state_model"]], "use_cholesky_inverse (bayesfilter attribute)": [[43, "gncpy.filters.bayes_filter.BayesFilter.use_cholesky_inverse"]], "bootstrapfilter (class in gncpy.filters.bootstrap_filter)": [[44, "gncpy.filters.bootstrap_filter.BootstrapFilter"]], "__init__() (bootstrapfilter method)": [[44, "gncpy.filters.bootstrap_filter.BootstrapFilter.__init__"]], "correct() (bootstrapfilter method)": [[44, "gncpy.filters.bootstrap_filter.BootstrapFilter.correct"]], "filt_state (bootstrapfilter attribute)": [[44, "gncpy.filters.bootstrap_filter.BootstrapFilter.filt_state"]], "load_filter_state() (bootstrapfilter method)": [[44, "gncpy.filters.bootstrap_filter.BootstrapFilter.load_filter_state"]], "plot_particles() (bootstrapfilter method)": [[44, "gncpy.filters.bootstrap_filter.BootstrapFilter.plot_particles"]], "predict() (bootstrapfilter method)": [[44, "gncpy.filters.bootstrap_filter.BootstrapFilter.predict"]], "save_filter_state() (bootstrapfilter method)": [[44, "gncpy.filters.bootstrap_filter.BootstrapFilter.save_filter_state"]], "set_measurement_model() (bootstrapfilter method)": [[44, "gncpy.filters.bootstrap_filter.BootstrapFilter.set_measurement_model"]], "set_state_model() (bootstrapfilter method)": [[44, "gncpy.filters.bootstrap_filter.BootstrapFilter.set_state_model"]], "ekfgaussianscalemixturefilter (class in gncpy.filters.ekf_gaussian_scale_mixture_filter)": [[45, "gncpy.filters.ekf_gaussian_scale_mixture_filter.EKFGaussianScaleMixtureFilter"]], "__init__() (ekfgaussianscalemixturefilter method)": [[45, "gncpy.filters.ekf_gaussian_scale_mixture_filter.EKFGaussianScaleMixtureFilter.__init__"]], "cont_cov (ekfgaussianscalemixturefilter property)": [[45, "gncpy.filters.ekf_gaussian_scale_mixture_filter.EKFGaussianScaleMixtureFilter.cont_cov"]], "correct() (ekfgaussianscalemixturefilter method)": [[45, "gncpy.filters.ekf_gaussian_scale_mixture_filter.EKFGaussianScaleMixtureFilter.correct"]], "cov (ekfgaussianscalemixturefilter property)": [[45, "gncpy.filters.ekf_gaussian_scale_mixture_filter.EKFGaussianScaleMixtureFilter.cov"]], "dt (ekfgaussianscalemixturefilter property)": [[45, "gncpy.filters.ekf_gaussian_scale_mixture_filter.EKFGaussianScaleMixtureFilter.dt"]], "filt_state (ekfgaussianscalemixturefilter attribute)": [[45, "gncpy.filters.ekf_gaussian_scale_mixture_filter.EKFGaussianScaleMixtureFilter.filt_state"]], "integrator_params (ekfgaussianscalemixturefilter property)": [[45, "gncpy.filters.ekf_gaussian_scale_mixture_filter.EKFGaussianScaleMixtureFilter.integrator_params"]], "integrator_type (ekfgaussianscalemixturefilter property)": [[45, "gncpy.filters.ekf_gaussian_scale_mixture_filter.EKFGaussianScaleMixtureFilter.integrator_type"]], "load_filter_state() (ekfgaussianscalemixturefilter method)": [[45, "gncpy.filters.ekf_gaussian_scale_mixture_filter.EKFGaussianScaleMixtureFilter.load_filter_state"]], "meas_noise (ekfgaussianscalemixturefilter property)": [[45, "gncpy.filters.ekf_gaussian_scale_mixture_filter.EKFGaussianScaleMixtureFilter.meas_noise"]], "plot_particles() (ekfgaussianscalemixturefilter method)": [[45, "gncpy.filters.ekf_gaussian_scale_mixture_filter.EKFGaussianScaleMixtureFilter.plot_particles"]], "predict() (ekfgaussianscalemixturefilter method)": [[45, "gncpy.filters.ekf_gaussian_scale_mixture_filter.EKFGaussianScaleMixtureFilter.predict"]], "proc_noise (ekfgaussianscalemixturefilter property)": [[45, "gncpy.filters.ekf_gaussian_scale_mixture_filter.EKFGaussianScaleMixtureFilter.proc_noise"]], "save_filter_state() (ekfgaussianscalemixturefilter method)": [[45, "gncpy.filters.ekf_gaussian_scale_mixture_filter.EKFGaussianScaleMixtureFilter.save_filter_state"]], "set_meas_noise_model() (ekfgaussianscalemixturefilter method)": [[45, "gncpy.filters.ekf_gaussian_scale_mixture_filter.EKFGaussianScaleMixtureFilter.set_meas_noise_model"]], "set_measurement_model() (ekfgaussianscalemixturefilter method)": [[45, "gncpy.filters.ekf_gaussian_scale_mixture_filter.EKFGaussianScaleMixtureFilter.set_measurement_model"]], "set_process_noise_model() (ekfgaussianscalemixturefilter method)": [[45, "gncpy.filters.ekf_gaussian_scale_mixture_filter.EKFGaussianScaleMixtureFilter.set_process_noise_model"]], "set_state_model() (ekfgaussianscalemixturefilter method)": [[45, "gncpy.filters.ekf_gaussian_scale_mixture_filter.EKFGaussianScaleMixtureFilter.set_state_model"]], "extendedkalmanfilter (class in gncpy.filters.extended_kalman_filter)": [[46, "gncpy.filters.extended_kalman_filter.ExtendedKalmanFilter"]], "__init__() (extendedkalmanfilter method)": [[46, "gncpy.filters.extended_kalman_filter.ExtendedKalmanFilter.__init__"]], "cont_cov (extendedkalmanfilter attribute)": [[46, "gncpy.filters.extended_kalman_filter.ExtendedKalmanFilter.cont_cov"]], "correct() (extendedkalmanfilter method)": [[46, "gncpy.filters.extended_kalman_filter.ExtendedKalmanFilter.correct"]], "filt_state (extendedkalmanfilter attribute)": [[46, "gncpy.filters.extended_kalman_filter.ExtendedKalmanFilter.filt_state"]], "integrator_params (extendedkalmanfilter attribute)": [[46, "gncpy.filters.extended_kalman_filter.ExtendedKalmanFilter.integrator_params"]], "integrator_type (extendedkalmanfilter attribute)": [[46, "gncpy.filters.extended_kalman_filter.ExtendedKalmanFilter.integrator_type"]], "load_filter_state() (extendedkalmanfilter method)": [[46, "gncpy.filters.extended_kalman_filter.ExtendedKalmanFilter.load_filter_state"]], "predict() (extendedkalmanfilter method)": [[46, "gncpy.filters.extended_kalman_filter.ExtendedKalmanFilter.predict"]], "save_filter_state() (extendedkalmanfilter method)": [[46, "gncpy.filters.extended_kalman_filter.ExtendedKalmanFilter.save_filter_state"]], "set_measurement_model() (extendedkalmanfilter method)": [[46, "gncpy.filters.extended_kalman_filter.ExtendedKalmanFilter.set_measurement_model"]], "set_measurement_noise_estimator() (extendedkalmanfilter method)": [[46, "gncpy.filters.extended_kalman_filter.ExtendedKalmanFilter.set_measurement_noise_estimator"]], "set_state_model() (extendedkalmanfilter method)": [[46, "gncpy.filters.extended_kalman_filter.ExtendedKalmanFilter.set_state_model"]], "gcifilter (class in gncpy.filters.gci_filter)": [[47, "gncpy.filters.gci_filter.GCIFilter"]], "__init__() (gcifilter method)": [[47, "gncpy.filters.gci_filter.GCIFilter.__init__"]], "correct() (gcifilter method)": [[47, "gncpy.filters.gci_filter.GCIFilter.correct"]], "load_filter_state() (gcifilter method)": [[47, "gncpy.filters.gci_filter.GCIFilter.load_filter_state"]], "predict() (gcifilter method)": [[47, "gncpy.filters.gci_filter.GCIFilter.predict"]], "save_filter_state() (gcifilter method)": [[47, "gncpy.filters.gci_filter.GCIFilter.save_filter_state"]], "set_measurement_model() (gcifilter method)": [[47, "gncpy.filters.gci_filter.GCIFilter.set_measurement_model"]], "set_state_model() (gcifilter method)": [[47, "gncpy.filters.gci_filter.GCIFilter.set_state_model"]], "gncpy.filters.bayes_filter": [[48, "module-gncpy.filters.bayes_filter"]], "gncpy.filters.bootstrap_filter": [[49, "module-gncpy.filters.bootstrap_filter"]], "gncpy.filters.ekf_gaussian_scale_mixture_filter": [[50, "module-gncpy.filters.ekf_gaussian_scale_mixture_filter"]], "gncpy.filters.extended_kalman_filter": [[51, "module-gncpy.filters.extended_kalman_filter"]], "gncpy.filters.gci_filter": [[52, "module-gncpy.filters.gci_filter"]], "gncpy.filters.gsm_filter_base": [[53, "module-gncpy.filters.gsm_filter_base"]], "gncpy.filters.imm_gci_filter": [[54, "module-gncpy.filters.imm_gci_filter"]], "gncpy.filters.interacting_multiple_model": [[55, "module-gncpy.filters.interacting_multiple_model"]], "gncpy.filters.kalman_filter": [[56, "module-gncpy.filters.kalman_filter"]], "gncpy.filters.kf_gaussian_scale_mixture_filter": [[57, "module-gncpy.filters.kf_gaussian_scale_mixture_filter"]], "gncpy.filters.max_corr_ent_ukf": [[58, "module-gncpy.filters.max_corr_ent_ukf"]], "gncpy.filters.max_corr_ent_upf": [[59, "module-gncpy.filters.max_corr_ent_upf"]], "gncpy.filters.mcmc_particle_filter_base": [[60, "module-gncpy.filters.mcmc_particle_filter_base"]], "gncpy.filters.particle_filter": [[61, "module-gncpy.filters.particle_filter"]], "gncpy.filters.qkf_gaussian_scale_mixture_filter": [[62, "module-gncpy.filters.qkf_gaussian_scale_mixture_filter"]], "gncpy.filters.quadrature_kalman_filter": [[63, "module-gncpy.filters.quadrature_kalman_filter"]], "gncpy.filters.sqkf_gaussian_scale_mixture_filter": [[64, "module-gncpy.filters.sqkf_gaussian_scale_mixture_filter"]], "gncpy.filters.square_root_qkf": [[65, "module-gncpy.filters.square_root_qkf"]], "gncpy.filters.students_t_filter": [[66, "module-gncpy.filters.students_t_filter"]], "gncpy.filters.ukf_gaussian_scale_mixture_filter": [[67, "module-gncpy.filters.ukf_gaussian_scale_mixture_filter"]], "gncpy.filters.unscented_kalman_filter": [[68, "module-gncpy.filters.unscented_kalman_filter"]], "gncpy.filters.unscented_particle_filter": [[69, "module-gncpy.filters.unscented_particle_filter"]], "gsmfilterbase (class in gncpy.filters.gsm_filter_base)": [[70, "gncpy.filters.gsm_filter_base.GSMFilterBase"]], "__init__() (gsmfilterbase method)": [[70, "gncpy.filters.gsm_filter_base.GSMFilterBase.__init__"]], "correct() (gsmfilterbase method)": [[70, "gncpy.filters.gsm_filter_base.GSMFilterBase.correct"]], "cov (gsmfilterbase property)": [[70, "gncpy.filters.gsm_filter_base.GSMFilterBase.cov"]], "enable_proc_noise_estimation (gsmfilterbase attribute)": [[70, "gncpy.filters.gsm_filter_base.GSMFilterBase.enable_proc_noise_estimation"]], "filt_state (gsmfilterbase attribute)": [[70, "gncpy.filters.gsm_filter_base.GSMFilterBase.filt_state"]], "load_filter_state() (gsmfilterbase method)": [[70, "gncpy.filters.gsm_filter_base.GSMFilterBase.load_filter_state"]], "meas_noise (gsmfilterbase property)": [[70, "gncpy.filters.gsm_filter_base.GSMFilterBase.meas_noise"]], "plot_particles() (gsmfilterbase method)": [[70, "gncpy.filters.gsm_filter_base.GSMFilterBase.plot_particles"]], "predict() (gsmfilterbase method)": [[70, "gncpy.filters.gsm_filter_base.GSMFilterBase.predict"]], "proc_noise (gsmfilterbase property)": [[70, "gncpy.filters.gsm_filter_base.GSMFilterBase.proc_noise"]], "save_filter_state() (gsmfilterbase method)": [[70, "gncpy.filters.gsm_filter_base.GSMFilterBase.save_filter_state"]], "set_meas_noise_model() (gsmfilterbase method)": [[70, "gncpy.filters.gsm_filter_base.GSMFilterBase.set_meas_noise_model"]], "set_measurement_model() (gsmfilterbase method)": [[70, "gncpy.filters.gsm_filter_base.GSMFilterBase.set_measurement_model"]], "set_process_noise_model() (gsmfilterbase method)": [[70, "gncpy.filters.gsm_filter_base.GSMFilterBase.set_process_noise_model"]], "set_state_model() (gsmfilterbase method)": [[70, "gncpy.filters.gsm_filter_base.GSMFilterBase.set_state_model"]], "immgcifilter (class in gncpy.filters.imm_gci_filter)": [[71, "gncpy.filters.imm_gci_filter.IMMGCIFilter"]], "__init__() (immgcifilter method)": [[71, "gncpy.filters.imm_gci_filter.IMMGCIFilter.__init__"]], "correct() (immgcifilter method)": [[71, "gncpy.filters.imm_gci_filter.IMMGCIFilter.correct"]], "cov (immgcifilter property)": [[71, "gncpy.filters.imm_gci_filter.IMMGCIFilter.cov"]], "filt_state (immgcifilter attribute)": [[71, "gncpy.filters.imm_gci_filter.IMMGCIFilter.filt_state"]], "load_filter_state() (immgcifilter method)": [[71, "gncpy.filters.imm_gci_filter.IMMGCIFilter.load_filter_state"]], "predict() (immgcifilter method)": [[71, "gncpy.filters.imm_gci_filter.IMMGCIFilter.predict"]], "save_filter_state() (immgcifilter method)": [[71, "gncpy.filters.imm_gci_filter.IMMGCIFilter.save_filter_state"]], "set_measurement_model() (immgcifilter method)": [[71, "gncpy.filters.imm_gci_filter.IMMGCIFilter.set_measurement_model"]], "set_models() (immgcifilter method)": [[71, "gncpy.filters.imm_gci_filter.IMMGCIFilter.set_models"]], "set_state_model() (immgcifilter method)": [[71, "gncpy.filters.imm_gci_filter.IMMGCIFilter.set_state_model"]], "interactingmultiplemodel (class in gncpy.filters.interacting_multiple_model)": [[72, "gncpy.filters.interacting_multiple_model.InteractingMultipleModel"]], "__init__() (interactingmultiplemodel method)": [[72, "gncpy.filters.interacting_multiple_model.InteractingMultipleModel.__init__"]], "correct() (interactingmultiplemodel method)": [[72, "gncpy.filters.interacting_multiple_model.InteractingMultipleModel.correct"]], "cov (interactingmultiplemodel property)": [[72, "gncpy.filters.interacting_multiple_model.InteractingMultipleModel.cov"]], "filt_state (interactingmultiplemodel attribute)": [[72, "gncpy.filters.interacting_multiple_model.InteractingMultipleModel.filt_state"]], "load_filter_state() (interactingmultiplemodel method)": [[72, "gncpy.filters.interacting_multiple_model.InteractingMultipleModel.load_filter_state"]], "predict() (interactingmultiplemodel method)": [[72, "gncpy.filters.interacting_multiple_model.InteractingMultipleModel.predict"]], "save_filter_state() (interactingmultiplemodel method)": [[72, "gncpy.filters.interacting_multiple_model.InteractingMultipleModel.save_filter_state"]], "set_models() (interactingmultiplemodel method)": [[72, "gncpy.filters.interacting_multiple_model.InteractingMultipleModel.set_models"]], "kalmanfilter (class in gncpy.filters.kalman_filter)": [[73, "gncpy.filters.kalman_filter.KalmanFilter"]], "__init__() (kalmanfilter method)": [[73, "gncpy.filters.kalman_filter.KalmanFilter.__init__"]], "correct() (kalmanfilter method)": [[73, "gncpy.filters.kalman_filter.KalmanFilter.correct"]], "cov (kalmanfilter attribute)": [[73, "gncpy.filters.kalman_filter.KalmanFilter.cov"]], "dt (kalmanfilter attribute)": [[73, "gncpy.filters.kalman_filter.KalmanFilter.dt"]], "filt_state (kalmanfilter attribute)": [[73, "gncpy.filters.kalman_filter.KalmanFilter.filt_state"]], "load_filter_state() (kalmanfilter method)": [[73, "gncpy.filters.kalman_filter.KalmanFilter.load_filter_state"]], "meas_noise (kalmanfilter attribute)": [[73, "gncpy.filters.kalman_filter.KalmanFilter.meas_noise"]], "predict() (kalmanfilter method)": [[73, "gncpy.filters.kalman_filter.KalmanFilter.predict"]], "proc_noise (kalmanfilter attribute)": [[73, "gncpy.filters.kalman_filter.KalmanFilter.proc_noise"]], "save_filter_state() (kalmanfilter method)": [[73, "gncpy.filters.kalman_filter.KalmanFilter.save_filter_state"]], "set_measurement_model() (kalmanfilter method)": [[73, "gncpy.filters.kalman_filter.KalmanFilter.set_measurement_model"]], "set_measurement_noise_estimator() (kalmanfilter method)": [[73, "gncpy.filters.kalman_filter.KalmanFilter.set_measurement_noise_estimator"]], "set_state_model() (kalmanfilter method)": [[73, "gncpy.filters.kalman_filter.KalmanFilter.set_state_model"]], "kfgaussianscalemixturefilter (class in gncpy.filters.kf_gaussian_scale_mixture_filter)": [[74, "gncpy.filters.kf_gaussian_scale_mixture_filter.KFGaussianScaleMixtureFilter"]], "__init__() (kfgaussianscalemixturefilter method)": [[74, "gncpy.filters.kf_gaussian_scale_mixture_filter.KFGaussianScaleMixtureFilter.__init__"]], "correct() (kfgaussianscalemixturefilter method)": [[74, "gncpy.filters.kf_gaussian_scale_mixture_filter.KFGaussianScaleMixtureFilter.correct"]], "cov (kfgaussianscalemixturefilter property)": [[74, "gncpy.filters.kf_gaussian_scale_mixture_filter.KFGaussianScaleMixtureFilter.cov"]], "dt (kfgaussianscalemixturefilter property)": [[74, "gncpy.filters.kf_gaussian_scale_mixture_filter.KFGaussianScaleMixtureFilter.dt"]], "filt_state (kfgaussianscalemixturefilter attribute)": [[74, "gncpy.filters.kf_gaussian_scale_mixture_filter.KFGaussianScaleMixtureFilter.filt_state"]], "load_filter_state() (kfgaussianscalemixturefilter method)": [[74, "gncpy.filters.kf_gaussian_scale_mixture_filter.KFGaussianScaleMixtureFilter.load_filter_state"]], "meas_noise (kfgaussianscalemixturefilter property)": [[74, "gncpy.filters.kf_gaussian_scale_mixture_filter.KFGaussianScaleMixtureFilter.meas_noise"]], "plot_particles() (kfgaussianscalemixturefilter method)": [[74, "gncpy.filters.kf_gaussian_scale_mixture_filter.KFGaussianScaleMixtureFilter.plot_particles"]], "predict() (kfgaussianscalemixturefilter method)": [[74, "gncpy.filters.kf_gaussian_scale_mixture_filter.KFGaussianScaleMixtureFilter.predict"]], "proc_noise (kfgaussianscalemixturefilter property)": [[74, "gncpy.filters.kf_gaussian_scale_mixture_filter.KFGaussianScaleMixtureFilter.proc_noise"]], "save_filter_state() (kfgaussianscalemixturefilter method)": [[74, "gncpy.filters.kf_gaussian_scale_mixture_filter.KFGaussianScaleMixtureFilter.save_filter_state"]], "set_meas_noise_model() (kfgaussianscalemixturefilter method)": [[74, "gncpy.filters.kf_gaussian_scale_mixture_filter.KFGaussianScaleMixtureFilter.set_meas_noise_model"]], "set_measurement_model() (kfgaussianscalemixturefilter method)": [[74, "gncpy.filters.kf_gaussian_scale_mixture_filter.KFGaussianScaleMixtureFilter.set_measurement_model"]], "set_process_noise_model() (kfgaussianscalemixturefilter method)": [[74, "gncpy.filters.kf_gaussian_scale_mixture_filter.KFGaussianScaleMixtureFilter.set_process_noise_model"]], "set_state_model() (kfgaussianscalemixturefilter method)": [[74, "gncpy.filters.kf_gaussian_scale_mixture_filter.KFGaussianScaleMixtureFilter.set_state_model"]], "maxcorrentukf (class in gncpy.filters.max_corr_ent_ukf)": [[75, "gncpy.filters.max_corr_ent_ukf.MaxCorrEntUKF"]], "__init__() (maxcorrentukf method)": [[75, "gncpy.filters.max_corr_ent_ukf.MaxCorrEntUKF.__init__"]], "correct() (maxcorrentukf method)": [[75, "gncpy.filters.max_corr_ent_ukf.MaxCorrEntUKF.correct"]], "filt_state (maxcorrentukf attribute)": [[75, "gncpy.filters.max_corr_ent_ukf.MaxCorrEntUKF.filt_state"]], "init_sigma_points() (maxcorrentukf method)": [[75, "gncpy.filters.max_corr_ent_ukf.MaxCorrEntUKF.init_sigma_points"]], "kernel_bandwidth (maxcorrentukf attribute)": [[75, "gncpy.filters.max_corr_ent_ukf.MaxCorrEntUKF.kernel_bandwidth"]], "load_filter_state() (maxcorrentukf method)": [[75, "gncpy.filters.max_corr_ent_ukf.MaxCorrEntUKF.load_filter_state"]], "predict() (maxcorrentukf method)": [[75, "gncpy.filters.max_corr_ent_ukf.MaxCorrEntUKF.predict"]], "save_filter_state() (maxcorrentukf method)": [[75, "gncpy.filters.max_corr_ent_ukf.MaxCorrEntUKF.save_filter_state"]], "set_measurement_model() (maxcorrentukf method)": [[75, "gncpy.filters.max_corr_ent_ukf.MaxCorrEntUKF.set_measurement_model"]], "set_measurement_noise_estimator() (maxcorrentukf method)": [[75, "gncpy.filters.max_corr_ent_ukf.MaxCorrEntUKF.set_measurement_noise_estimator"]], "set_state_model() (maxcorrentukf method)": [[75, "gncpy.filters.max_corr_ent_ukf.MaxCorrEntUKF.set_state_model"]], "maxcorrentupf (class in gncpy.filters.max_corr_ent_upf)": [[76, "gncpy.filters.max_corr_ent_upf.MaxCorrEntUPF"]], "__init__() (maxcorrentupf method)": [[76, "gncpy.filters.max_corr_ent_upf.MaxCorrEntUPF.__init__"]], "correct() (maxcorrentupf method)": [[76, "gncpy.filters.max_corr_ent_upf.MaxCorrEntUPF.correct"]], "cov (maxcorrentupf property)": [[76, "gncpy.filters.max_corr_ent_upf.MaxCorrEntUPF.cov"]], "extract_dist() (maxcorrentupf method)": [[76, "gncpy.filters.max_corr_ent_upf.MaxCorrEntUPF.extract_dist"]], "filt_state (maxcorrentupf attribute)": [[76, "gncpy.filters.max_corr_ent_upf.MaxCorrEntUPF.filt_state"]], "init_from_dist() (maxcorrentupf method)": [[76, "gncpy.filters.max_corr_ent_upf.MaxCorrEntUPF.init_from_dist"]], "init_particles() (maxcorrentupf method)": [[76, "gncpy.filters.max_corr_ent_upf.MaxCorrEntUPF.init_particles"]], "kernel_bandwidth (maxcorrentupf property)": [[76, "gncpy.filters.max_corr_ent_upf.MaxCorrEntUPF.kernel_bandwidth"]], "load_filter_state() (maxcorrentupf method)": [[76, "gncpy.filters.max_corr_ent_upf.MaxCorrEntUPF.load_filter_state"]], "meas_likelihood_fnc (maxcorrentupf property)": [[76, "gncpy.filters.max_corr_ent_upf.MaxCorrEntUPF.meas_likelihood_fnc"]], "meas_noise (maxcorrentupf property)": [[76, "gncpy.filters.max_corr_ent_upf.MaxCorrEntUPF.meas_noise"]], "move_particles() (maxcorrentupf method)": [[76, "gncpy.filters.max_corr_ent_upf.MaxCorrEntUPF.move_particles"]], "num_particles (maxcorrentupf property)": [[76, "gncpy.filters.max_corr_ent_upf.MaxCorrEntUPF.num_particles"]], "plot_particles() (maxcorrentupf method)": [[76, "gncpy.filters.max_corr_ent_upf.MaxCorrEntUPF.plot_particles"]], "plot_weighted_particles() (maxcorrentupf method)": [[76, "gncpy.filters.max_corr_ent_upf.MaxCorrEntUPF.plot_weighted_particles"]], "predict() (maxcorrentupf method)": [[76, "gncpy.filters.max_corr_ent_upf.MaxCorrEntUPF.predict"]], "proc_noise (maxcorrentupf property)": [[76, "gncpy.filters.max_corr_ent_upf.MaxCorrEntUPF.proc_noise"]], "proposal_fnc (maxcorrentupf property)": [[76, "gncpy.filters.max_corr_ent_upf.MaxCorrEntUPF.proposal_fnc"]], "proposal_sampling_fnc (maxcorrentupf property)": [[76, "gncpy.filters.max_corr_ent_upf.MaxCorrEntUPF.proposal_sampling_fnc"]], "save_filter_state() (maxcorrentupf method)": [[76, "gncpy.filters.max_corr_ent_upf.MaxCorrEntUPF.save_filter_state"]], "set_measurement_model() (maxcorrentupf method)": [[76, "gncpy.filters.max_corr_ent_upf.MaxCorrEntUPF.set_measurement_model"]], "set_state_model() (maxcorrentupf method)": [[76, "gncpy.filters.max_corr_ent_upf.MaxCorrEntUPF.set_state_model"]], "transition_prob_fnc (maxcorrentupf property)": [[76, "gncpy.filters.max_corr_ent_upf.MaxCorrEntUPF.transition_prob_fnc"]], "mcmcparticlefilterbase (class in gncpy.filters.mcmc_particle_filter_base)": [[77, "gncpy.filters.mcmc_particle_filter_base.MCMCParticleFilterBase"]], "__init__() (mcmcparticlefilterbase method)": [[77, "gncpy.filters.mcmc_particle_filter_base.MCMCParticleFilterBase.__init__"]], "correct() (mcmcparticlefilterbase method)": [[77, "gncpy.filters.mcmc_particle_filter_base.MCMCParticleFilterBase.correct"]], "cov (mcmcparticlefilterbase property)": [[77, "gncpy.filters.mcmc_particle_filter_base.MCMCParticleFilterBase.cov"]], "extract_dist() (mcmcparticlefilterbase method)": [[77, "gncpy.filters.mcmc_particle_filter_base.MCMCParticleFilterBase.extract_dist"]], "filt_state (mcmcparticlefilterbase attribute)": [[77, "gncpy.filters.mcmc_particle_filter_base.MCMCParticleFilterBase.filt_state"]], "init_from_dist() (mcmcparticlefilterbase method)": [[77, "gncpy.filters.mcmc_particle_filter_base.MCMCParticleFilterBase.init_from_dist"]], "init_particles() (mcmcparticlefilterbase method)": [[77, "gncpy.filters.mcmc_particle_filter_base.MCMCParticleFilterBase.init_particles"]], "load_filter_state() (mcmcparticlefilterbase method)": [[77, "gncpy.filters.mcmc_particle_filter_base.MCMCParticleFilterBase.load_filter_state"]], "meas_likelihood_fnc (mcmcparticlefilterbase property)": [[77, "gncpy.filters.mcmc_particle_filter_base.MCMCParticleFilterBase.meas_likelihood_fnc"]], "move_particles() (mcmcparticlefilterbase method)": [[77, "gncpy.filters.mcmc_particle_filter_base.MCMCParticleFilterBase.move_particles"]], "num_particles (mcmcparticlefilterbase property)": [[77, "gncpy.filters.mcmc_particle_filter_base.MCMCParticleFilterBase.num_particles"]], "plot_particles() (mcmcparticlefilterbase method)": [[77, "gncpy.filters.mcmc_particle_filter_base.MCMCParticleFilterBase.plot_particles"]], "plot_weighted_particles() (mcmcparticlefilterbase method)": [[77, "gncpy.filters.mcmc_particle_filter_base.MCMCParticleFilterBase.plot_weighted_particles"]], "predict() (mcmcparticlefilterbase method)": [[77, "gncpy.filters.mcmc_particle_filter_base.MCMCParticleFilterBase.predict"]], "proposal_fnc (mcmcparticlefilterbase property)": [[77, "gncpy.filters.mcmc_particle_filter_base.MCMCParticleFilterBase.proposal_fnc"]], "proposal_sampling_fnc (mcmcparticlefilterbase property)": [[77, "gncpy.filters.mcmc_particle_filter_base.MCMCParticleFilterBase.proposal_sampling_fnc"]], "save_filter_state() (mcmcparticlefilterbase method)": [[77, "gncpy.filters.mcmc_particle_filter_base.MCMCParticleFilterBase.save_filter_state"]], "set_measurement_model() (mcmcparticlefilterbase method)": [[77, "gncpy.filters.mcmc_particle_filter_base.MCMCParticleFilterBase.set_measurement_model"]], "set_state_model() (mcmcparticlefilterbase method)": [[77, "gncpy.filters.mcmc_particle_filter_base.MCMCParticleFilterBase.set_state_model"]], "transition_prob_fnc (mcmcparticlefilterbase property)": [[77, "gncpy.filters.mcmc_particle_filter_base.MCMCParticleFilterBase.transition_prob_fnc"]], "use_mcmc (mcmcparticlefilterbase attribute)": [[77, "gncpy.filters.mcmc_particle_filter_base.MCMCParticleFilterBase.use_MCMC"]], "particlefilter (class in gncpy.filters.particle_filter)": [[78, "gncpy.filters.particle_filter.ParticleFilter"]], "__init__() (particlefilter method)": [[78, "gncpy.filters.particle_filter.ParticleFilter.__init__"]], "correct() (particlefilter method)": [[78, "gncpy.filters.particle_filter.ParticleFilter.correct"]], "cov (particlefilter property)": [[78, "gncpy.filters.particle_filter.ParticleFilter.cov"]], "extract_dist() (particlefilter method)": [[78, "gncpy.filters.particle_filter.ParticleFilter.extract_dist"]], "filt_state (particlefilter attribute)": [[78, "gncpy.filters.particle_filter.ParticleFilter.filt_state"]], "init_from_dist() (particlefilter method)": [[78, "gncpy.filters.particle_filter.ParticleFilter.init_from_dist"]], "init_particles() (particlefilter method)": [[78, "gncpy.filters.particle_filter.ParticleFilter.init_particles"]], "load_filter_state() (particlefilter method)": [[78, "gncpy.filters.particle_filter.ParticleFilter.load_filter_state"]], "meas_likelihood_fnc (particlefilter property)": [[78, "gncpy.filters.particle_filter.ParticleFilter.meas_likelihood_fnc"]], "num_particles (particlefilter property)": [[78, "gncpy.filters.particle_filter.ParticleFilter.num_particles"]], "plot_particles() (particlefilter method)": [[78, "gncpy.filters.particle_filter.ParticleFilter.plot_particles"]], "plot_weighted_particles() (particlefilter method)": [[78, "gncpy.filters.particle_filter.ParticleFilter.plot_weighted_particles"]], "predict() (particlefilter method)": [[78, "gncpy.filters.particle_filter.ParticleFilter.predict"]], "proposal_fnc (particlefilter property)": [[78, "gncpy.filters.particle_filter.ParticleFilter.proposal_fnc"]], "proposal_sampling_fnc (particlefilter property)": [[78, "gncpy.filters.particle_filter.ParticleFilter.proposal_sampling_fnc"]], "require_copy_can_dist (particlefilter attribute)": [[78, "gncpy.filters.particle_filter.ParticleFilter.require_copy_can_dist"]], "require_copy_prop_parts (particlefilter attribute)": [[78, "gncpy.filters.particle_filter.ParticleFilter.require_copy_prop_parts"]], "save_filter_state() (particlefilter method)": [[78, "gncpy.filters.particle_filter.ParticleFilter.save_filter_state"]], "set_measurement_model() (particlefilter method)": [[78, "gncpy.filters.particle_filter.ParticleFilter.set_measurement_model"]], "set_state_model() (particlefilter method)": [[78, "gncpy.filters.particle_filter.ParticleFilter.set_state_model"]], "transition_prob_fnc (particlefilter property)": [[78, "gncpy.filters.particle_filter.ParticleFilter.transition_prob_fnc"]], "qkfgaussianscalemixturefilter (class in gncpy.filters.qkf_gaussian_scale_mixture_filter)": [[79, "gncpy.filters.qkf_gaussian_scale_mixture_filter.QKFGaussianScaleMixtureFilter"]], "__init__() (qkfgaussianscalemixturefilter method)": [[79, "gncpy.filters.qkf_gaussian_scale_mixture_filter.QKFGaussianScaleMixtureFilter.__init__"]], "correct() (qkfgaussianscalemixturefilter method)": [[79, "gncpy.filters.qkf_gaussian_scale_mixture_filter.QKFGaussianScaleMixtureFilter.correct"]], "cov (qkfgaussianscalemixturefilter property)": [[79, "gncpy.filters.qkf_gaussian_scale_mixture_filter.QKFGaussianScaleMixtureFilter.cov"]], "filt_state (qkfgaussianscalemixturefilter attribute)": [[79, "gncpy.filters.qkf_gaussian_scale_mixture_filter.QKFGaussianScaleMixtureFilter.filt_state"]], "load_filter_state() (qkfgaussianscalemixturefilter method)": [[79, "gncpy.filters.qkf_gaussian_scale_mixture_filter.QKFGaussianScaleMixtureFilter.load_filter_state"]], "meas_noise (qkfgaussianscalemixturefilter property)": [[79, "gncpy.filters.qkf_gaussian_scale_mixture_filter.QKFGaussianScaleMixtureFilter.meas_noise"]], "plot_particles() (qkfgaussianscalemixturefilter method)": [[79, "gncpy.filters.qkf_gaussian_scale_mixture_filter.QKFGaussianScaleMixtureFilter.plot_particles"]], "points_per_axis (qkfgaussianscalemixturefilter property)": [[79, "gncpy.filters.qkf_gaussian_scale_mixture_filter.QKFGaussianScaleMixtureFilter.points_per_axis"]], "predict() (qkfgaussianscalemixturefilter method)": [[79, "gncpy.filters.qkf_gaussian_scale_mixture_filter.QKFGaussianScaleMixtureFilter.predict"]], "proc_noise (qkfgaussianscalemixturefilter property)": [[79, "gncpy.filters.qkf_gaussian_scale_mixture_filter.QKFGaussianScaleMixtureFilter.proc_noise"]], "save_filter_state() (qkfgaussianscalemixturefilter method)": [[79, "gncpy.filters.qkf_gaussian_scale_mixture_filter.QKFGaussianScaleMixtureFilter.save_filter_state"]], "set_meas_noise_model() (qkfgaussianscalemixturefilter method)": [[79, "gncpy.filters.qkf_gaussian_scale_mixture_filter.QKFGaussianScaleMixtureFilter.set_meas_noise_model"]], "set_measurement_model() (qkfgaussianscalemixturefilter method)": [[79, "gncpy.filters.qkf_gaussian_scale_mixture_filter.QKFGaussianScaleMixtureFilter.set_measurement_model"]], "set_process_noise_model() (qkfgaussianscalemixturefilter method)": [[79, "gncpy.filters.qkf_gaussian_scale_mixture_filter.QKFGaussianScaleMixtureFilter.set_process_noise_model"]], "set_state_model() (qkfgaussianscalemixturefilter method)": [[79, "gncpy.filters.qkf_gaussian_scale_mixture_filter.QKFGaussianScaleMixtureFilter.set_state_model"]], "quadraturekalmanfilter (class in gncpy.filters.quadrature_kalman_filter)": [[80, "gncpy.filters.quadrature_kalman_filter.QuadratureKalmanFilter"]], "__init__() (quadraturekalmanfilter method)": [[80, "gncpy.filters.quadrature_kalman_filter.QuadratureKalmanFilter.__init__"]], "correct() (quadraturekalmanfilter method)": [[80, "gncpy.filters.quadrature_kalman_filter.QuadratureKalmanFilter.correct"]], "filt_state (quadraturekalmanfilter attribute)": [[80, "gncpy.filters.quadrature_kalman_filter.QuadratureKalmanFilter.filt_state"]], "load_filter_state() (quadraturekalmanfilter method)": [[80, "gncpy.filters.quadrature_kalman_filter.QuadratureKalmanFilter.load_filter_state"]], "plot_quadrature() (quadraturekalmanfilter method)": [[80, "gncpy.filters.quadrature_kalman_filter.QuadratureKalmanFilter.plot_quadrature"]], "points_per_axis (quadraturekalmanfilter property)": [[80, "gncpy.filters.quadrature_kalman_filter.QuadratureKalmanFilter.points_per_axis"]], "predict() (quadraturekalmanfilter method)": [[80, "gncpy.filters.quadrature_kalman_filter.QuadratureKalmanFilter.predict"]], "quadpoints (quadraturekalmanfilter attribute)": [[80, "gncpy.filters.quadrature_kalman_filter.QuadratureKalmanFilter.quadPoints"]], "save_filter_state() (quadraturekalmanfilter method)": [[80, "gncpy.filters.quadrature_kalman_filter.QuadratureKalmanFilter.save_filter_state"]], "set_measurement_model() (quadraturekalmanfilter method)": [[80, "gncpy.filters.quadrature_kalman_filter.QuadratureKalmanFilter.set_measurement_model"]], "set_measurement_noise_estimator() (quadraturekalmanfilter method)": [[80, "gncpy.filters.quadrature_kalman_filter.QuadratureKalmanFilter.set_measurement_noise_estimator"]], "set_state_model() (quadraturekalmanfilter method)": [[80, "gncpy.filters.quadrature_kalman_filter.QuadratureKalmanFilter.set_state_model"]], "sqkfgaussianscalemixturefilter (class in gncpy.filters.sqkf_gaussian_scale_mixture_filter)": [[81, "gncpy.filters.sqkf_gaussian_scale_mixture_filter.SQKFGaussianScaleMixtureFilter"]], "__init__() (sqkfgaussianscalemixturefilter method)": [[81, "gncpy.filters.sqkf_gaussian_scale_mixture_filter.SQKFGaussianScaleMixtureFilter.__init__"]], "correct() (sqkfgaussianscalemixturefilter method)": [[81, "gncpy.filters.sqkf_gaussian_scale_mixture_filter.SQKFGaussianScaleMixtureFilter.correct"]], "cov (sqkfgaussianscalemixturefilter property)": [[81, "gncpy.filters.sqkf_gaussian_scale_mixture_filter.SQKFGaussianScaleMixtureFilter.cov"]], "filt_state (sqkfgaussianscalemixturefilter attribute)": [[81, "gncpy.filters.sqkf_gaussian_scale_mixture_filter.SQKFGaussianScaleMixtureFilter.filt_state"]], "load_filter_state() (sqkfgaussianscalemixturefilter method)": [[81, "gncpy.filters.sqkf_gaussian_scale_mixture_filter.SQKFGaussianScaleMixtureFilter.load_filter_state"]], "meas_noise (sqkfgaussianscalemixturefilter property)": [[81, "gncpy.filters.sqkf_gaussian_scale_mixture_filter.SQKFGaussianScaleMixtureFilter.meas_noise"]], "plot_particles() (sqkfgaussianscalemixturefilter method)": [[81, "gncpy.filters.sqkf_gaussian_scale_mixture_filter.SQKFGaussianScaleMixtureFilter.plot_particles"]], "points_per_axis (sqkfgaussianscalemixturefilter property)": [[81, "gncpy.filters.sqkf_gaussian_scale_mixture_filter.SQKFGaussianScaleMixtureFilter.points_per_axis"]], "predict() (sqkfgaussianscalemixturefilter method)": [[81, "gncpy.filters.sqkf_gaussian_scale_mixture_filter.SQKFGaussianScaleMixtureFilter.predict"]], "proc_noise (sqkfgaussianscalemixturefilter property)": [[81, "gncpy.filters.sqkf_gaussian_scale_mixture_filter.SQKFGaussianScaleMixtureFilter.proc_noise"]], "save_filter_state() (sqkfgaussianscalemixturefilter method)": [[81, "gncpy.filters.sqkf_gaussian_scale_mixture_filter.SQKFGaussianScaleMixtureFilter.save_filter_state"]], "set_meas_noise_model() (sqkfgaussianscalemixturefilter method)": [[81, "gncpy.filters.sqkf_gaussian_scale_mixture_filter.SQKFGaussianScaleMixtureFilter.set_meas_noise_model"]], "set_measurement_model() (sqkfgaussianscalemixturefilter method)": [[81, "gncpy.filters.sqkf_gaussian_scale_mixture_filter.SQKFGaussianScaleMixtureFilter.set_measurement_model"]], "set_process_noise_model() (sqkfgaussianscalemixturefilter method)": [[81, "gncpy.filters.sqkf_gaussian_scale_mixture_filter.SQKFGaussianScaleMixtureFilter.set_process_noise_model"]], "set_state_model() (sqkfgaussianscalemixturefilter method)": [[81, "gncpy.filters.sqkf_gaussian_scale_mixture_filter.SQKFGaussianScaleMixtureFilter.set_state_model"]], "squarerootqkf (class in gncpy.filters.square_root_qkf)": [[82, "gncpy.filters.square_root_qkf.SquareRootQKF"]], "__init__() (squarerootqkf method)": [[82, "gncpy.filters.square_root_qkf.SquareRootQKF.__init__"]], "correct() (squarerootqkf method)": [[82, "gncpy.filters.square_root_qkf.SquareRootQKF.correct"]], "cov (squarerootqkf property)": [[82, "gncpy.filters.square_root_qkf.SquareRootQKF.cov"]], "filt_state (squarerootqkf attribute)": [[82, "gncpy.filters.square_root_qkf.SquareRootQKF.filt_state"]], "load_filter_state() (squarerootqkf method)": [[82, "gncpy.filters.square_root_qkf.SquareRootQKF.load_filter_state"]], "meas_noise (squarerootqkf property)": [[82, "gncpy.filters.square_root_qkf.SquareRootQKF.meas_noise"]], "plot_quadrature() (squarerootqkf method)": [[82, "gncpy.filters.square_root_qkf.SquareRootQKF.plot_quadrature"]], "points_per_axis (squarerootqkf property)": [[82, "gncpy.filters.square_root_qkf.SquareRootQKF.points_per_axis"]], "predict() (squarerootqkf method)": [[82, "gncpy.filters.square_root_qkf.SquareRootQKF.predict"]], "proc_noise (squarerootqkf property)": [[82, "gncpy.filters.square_root_qkf.SquareRootQKF.proc_noise"]], "save_filter_state() (squarerootqkf method)": [[82, "gncpy.filters.square_root_qkf.SquareRootQKF.save_filter_state"]], "set_measurement_model() (squarerootqkf method)": [[82, "gncpy.filters.square_root_qkf.SquareRootQKF.set_measurement_model"]], "set_measurement_noise_estimator() (squarerootqkf method)": [[82, "gncpy.filters.square_root_qkf.SquareRootQKF.set_measurement_noise_estimator"]], "set_state_model() (squarerootqkf method)": [[82, "gncpy.filters.square_root_qkf.SquareRootQKF.set_state_model"]], "studentstfilter (class in gncpy.filters.students_t_filter)": [[83, "gncpy.filters.students_t_filter.StudentsTFilter"]], "__init__() (studentstfilter method)": [[83, "gncpy.filters.students_t_filter.StudentsTFilter.__init__"]], "correct() (studentstfilter method)": [[83, "gncpy.filters.students_t_filter.StudentsTFilter.correct"]], "cov (studentstfilter property)": [[83, "gncpy.filters.students_t_filter.StudentsTFilter.cov"]], "dof (studentstfilter attribute)": [[83, "gncpy.filters.students_t_filter.StudentsTFilter.dof"]], "filt_state (studentstfilter attribute)": [[83, "gncpy.filters.students_t_filter.StudentsTFilter.filt_state"]], "load_filter_state() (studentstfilter method)": [[83, "gncpy.filters.students_t_filter.StudentsTFilter.load_filter_state"]], "meas_noise_dof (studentstfilter attribute)": [[83, "gncpy.filters.students_t_filter.StudentsTFilter.meas_noise_dof"]], "predict() (studentstfilter method)": [[83, "gncpy.filters.students_t_filter.StudentsTFilter.predict"]], "proc_noise_dof (studentstfilter attribute)": [[83, "gncpy.filters.students_t_filter.StudentsTFilter.proc_noise_dof"]], "save_filter_state() (studentstfilter method)": [[83, "gncpy.filters.students_t_filter.StudentsTFilter.save_filter_state"]], "scale (studentstfilter attribute)": [[83, "gncpy.filters.students_t_filter.StudentsTFilter.scale"]], "set_measurement_model() (studentstfilter method)": [[83, "gncpy.filters.students_t_filter.StudentsTFilter.set_measurement_model"]], "set_measurement_noise_estimator() (studentstfilter method)": [[83, "gncpy.filters.students_t_filter.StudentsTFilter.set_measurement_noise_estimator"]], "set_state_model() (studentstfilter method)": [[83, "gncpy.filters.students_t_filter.StudentsTFilter.set_state_model"]], "use_moment_matching (studentstfilter attribute)": [[83, "gncpy.filters.students_t_filter.StudentsTFilter.use_moment_matching"]], "ukfgaussianscalemixturefilter (class in gncpy.filters.ukf_gaussian_scale_mixture_filter)": [[84, "gncpy.filters.ukf_gaussian_scale_mixture_filter.UKFGaussianScaleMixtureFilter"]], "__init__() (ukfgaussianscalemixturefilter method)": [[84, "gncpy.filters.ukf_gaussian_scale_mixture_filter.UKFGaussianScaleMixtureFilter.__init__"]], "alpha (ukfgaussianscalemixturefilter property)": [[84, "gncpy.filters.ukf_gaussian_scale_mixture_filter.UKFGaussianScaleMixtureFilter.alpha"]], "beta (ukfgaussianscalemixturefilter property)": [[84, "gncpy.filters.ukf_gaussian_scale_mixture_filter.UKFGaussianScaleMixtureFilter.beta"]], "correct() (ukfgaussianscalemixturefilter method)": [[84, "gncpy.filters.ukf_gaussian_scale_mixture_filter.UKFGaussianScaleMixtureFilter.correct"]], "cov (ukfgaussianscalemixturefilter property)": [[84, "gncpy.filters.ukf_gaussian_scale_mixture_filter.UKFGaussianScaleMixtureFilter.cov"]], "dt (ukfgaussianscalemixturefilter property)": [[84, "gncpy.filters.ukf_gaussian_scale_mixture_filter.UKFGaussianScaleMixtureFilter.dt"]], "filt_state (ukfgaussianscalemixturefilter attribute)": [[84, "gncpy.filters.ukf_gaussian_scale_mixture_filter.UKFGaussianScaleMixtureFilter.filt_state"]], "init_sigma_points() (ukfgaussianscalemixturefilter method)": [[84, "gncpy.filters.ukf_gaussian_scale_mixture_filter.UKFGaussianScaleMixtureFilter.init_sigma_points"]], "kappa (ukfgaussianscalemixturefilter property)": [[84, "gncpy.filters.ukf_gaussian_scale_mixture_filter.UKFGaussianScaleMixtureFilter.kappa"]], "load_filter_state() (ukfgaussianscalemixturefilter method)": [[84, "gncpy.filters.ukf_gaussian_scale_mixture_filter.UKFGaussianScaleMixtureFilter.load_filter_state"]], "meas_noise (ukfgaussianscalemixturefilter property)": [[84, "gncpy.filters.ukf_gaussian_scale_mixture_filter.UKFGaussianScaleMixtureFilter.meas_noise"]], "plot_particles() (ukfgaussianscalemixturefilter method)": [[84, "gncpy.filters.ukf_gaussian_scale_mixture_filter.UKFGaussianScaleMixtureFilter.plot_particles"]], "predict() (ukfgaussianscalemixturefilter method)": [[84, "gncpy.filters.ukf_gaussian_scale_mixture_filter.UKFGaussianScaleMixtureFilter.predict"]], "proc_noise (ukfgaussianscalemixturefilter property)": [[84, "gncpy.filters.ukf_gaussian_scale_mixture_filter.UKFGaussianScaleMixtureFilter.proc_noise"]], "save_filter_state() (ukfgaussianscalemixturefilter method)": [[84, "gncpy.filters.ukf_gaussian_scale_mixture_filter.UKFGaussianScaleMixtureFilter.save_filter_state"]], "set_meas_noise_model() (ukfgaussianscalemixturefilter method)": [[84, "gncpy.filters.ukf_gaussian_scale_mixture_filter.UKFGaussianScaleMixtureFilter.set_meas_noise_model"]], "set_measurement_model() (ukfgaussianscalemixturefilter method)": [[84, "gncpy.filters.ukf_gaussian_scale_mixture_filter.UKFGaussianScaleMixtureFilter.set_measurement_model"]], "set_process_noise_model() (ukfgaussianscalemixturefilter method)": [[84, "gncpy.filters.ukf_gaussian_scale_mixture_filter.UKFGaussianScaleMixtureFilter.set_process_noise_model"]], "set_state_model() (ukfgaussianscalemixturefilter method)": [[84, "gncpy.filters.ukf_gaussian_scale_mixture_filter.UKFGaussianScaleMixtureFilter.set_state_model"]], "unscentedkalmanfilter (class in gncpy.filters.unscented_kalman_filter)": [[85, "gncpy.filters.unscented_kalman_filter.UnscentedKalmanFilter"]], "__init__() (unscentedkalmanfilter method)": [[85, "gncpy.filters.unscented_kalman_filter.UnscentedKalmanFilter.__init__"]], "alpha (unscentedkalmanfilter attribute)": [[85, "gncpy.filters.unscented_kalman_filter.UnscentedKalmanFilter.alpha"]], "beta (unscentedkalmanfilter attribute)": [[85, "gncpy.filters.unscented_kalman_filter.UnscentedKalmanFilter.beta"]], "correct() (unscentedkalmanfilter method)": [[85, "gncpy.filters.unscented_kalman_filter.UnscentedKalmanFilter.correct"]], "filt_state (unscentedkalmanfilter attribute)": [[85, "gncpy.filters.unscented_kalman_filter.UnscentedKalmanFilter.filt_state"]], "init_sigma_points() (unscentedkalmanfilter method)": [[85, "gncpy.filters.unscented_kalman_filter.UnscentedKalmanFilter.init_sigma_points"]], "kappa (unscentedkalmanfilter attribute)": [[85, "gncpy.filters.unscented_kalman_filter.UnscentedKalmanFilter.kappa"]], "load_filter_state() (unscentedkalmanfilter method)": [[85, "gncpy.filters.unscented_kalman_filter.UnscentedKalmanFilter.load_filter_state"]], "predict() (unscentedkalmanfilter method)": [[85, "gncpy.filters.unscented_kalman_filter.UnscentedKalmanFilter.predict"]], "save_filter_state() (unscentedkalmanfilter method)": [[85, "gncpy.filters.unscented_kalman_filter.UnscentedKalmanFilter.save_filter_state"]], "set_measurement_model() (unscentedkalmanfilter method)": [[85, "gncpy.filters.unscented_kalman_filter.UnscentedKalmanFilter.set_measurement_model"]], "set_measurement_noise_estimator() (unscentedkalmanfilter method)": [[85, "gncpy.filters.unscented_kalman_filter.UnscentedKalmanFilter.set_measurement_noise_estimator"]], "set_state_model() (unscentedkalmanfilter method)": [[85, "gncpy.filters.unscented_kalman_filter.UnscentedKalmanFilter.set_state_model"]], "unscentedparticlefilter (class in gncpy.filters.unscented_particle_filter)": [[86, "gncpy.filters.unscented_particle_filter.UnscentedParticleFilter"]], "__init__() (unscentedparticlefilter method)": [[86, "gncpy.filters.unscented_particle_filter.UnscentedParticleFilter.__init__"]], "correct() (unscentedparticlefilter method)": [[86, "gncpy.filters.unscented_particle_filter.UnscentedParticleFilter.correct"]], "cov (unscentedparticlefilter property)": [[86, "gncpy.filters.unscented_particle_filter.UnscentedParticleFilter.cov"]], "extract_dist() (unscentedparticlefilter method)": [[86, "gncpy.filters.unscented_particle_filter.UnscentedParticleFilter.extract_dist"]], "filt_state (unscentedparticlefilter attribute)": [[86, "gncpy.filters.unscented_particle_filter.UnscentedParticleFilter.filt_state"]], "init_from_dist() (unscentedparticlefilter method)": [[86, "gncpy.filters.unscented_particle_filter.UnscentedParticleFilter.init_from_dist"]], "init_particles() (unscentedparticlefilter method)": [[86, "gncpy.filters.unscented_particle_filter.UnscentedParticleFilter.init_particles"]], "load_filter_state() (unscentedparticlefilter method)": [[86, "gncpy.filters.unscented_particle_filter.UnscentedParticleFilter.load_filter_state"]], "meas_likelihood_fnc (unscentedparticlefilter property)": [[86, "gncpy.filters.unscented_particle_filter.UnscentedParticleFilter.meas_likelihood_fnc"]], "meas_noise (unscentedparticlefilter property)": [[86, "gncpy.filters.unscented_particle_filter.UnscentedParticleFilter.meas_noise"]], "move_particles() (unscentedparticlefilter method)": [[86, "gncpy.filters.unscented_particle_filter.UnscentedParticleFilter.move_particles"]], "num_particles (unscentedparticlefilter property)": [[86, "gncpy.filters.unscented_particle_filter.UnscentedParticleFilter.num_particles"]], "plot_particles() (unscentedparticlefilter method)": [[86, "gncpy.filters.unscented_particle_filter.UnscentedParticleFilter.plot_particles"]], "plot_weighted_particles() (unscentedparticlefilter method)": [[86, "gncpy.filters.unscented_particle_filter.UnscentedParticleFilter.plot_weighted_particles"]], "predict() (unscentedparticlefilter method)": [[86, "gncpy.filters.unscented_particle_filter.UnscentedParticleFilter.predict"]], "proc_noise (unscentedparticlefilter property)": [[86, "gncpy.filters.unscented_particle_filter.UnscentedParticleFilter.proc_noise"]], "proposal_fnc (unscentedparticlefilter property)": [[86, "gncpy.filters.unscented_particle_filter.UnscentedParticleFilter.proposal_fnc"]], "proposal_sampling_fnc (unscentedparticlefilter property)": [[86, "gncpy.filters.unscented_particle_filter.UnscentedParticleFilter.proposal_sampling_fnc"]], "save_filter_state() (unscentedparticlefilter method)": [[86, "gncpy.filters.unscented_particle_filter.UnscentedParticleFilter.save_filter_state"]], "set_measurement_model() (unscentedparticlefilter method)": [[86, "gncpy.filters.unscented_particle_filter.UnscentedParticleFilter.set_measurement_model"]], "set_state_model() (unscentedparticlefilter method)": [[86, "gncpy.filters.unscented_particle_filter.UnscentedParticleFilter.set_state_model"]], "transition_prob_fnc (unscentedparticlefilter property)": [[86, "gncpy.filters.unscented_particle_filter.UnscentedParticleFilter.transition_prob_fnc"]], "base2dparams (class in gncpy.game_engine.base_game)": [[87, "gncpy.game_engine.base_game.Base2dParams"]], "__init__() (base2dparams method)": [[87, "gncpy.game_engine.base_game.Base2dParams.__init__"]], "max_time (base2dparams attribute)": [[87, "gncpy.game_engine.base_game.Base2dParams.max_time"]], "physics (base2dparams attribute)": [[87, "gncpy.game_engine.base_game.Base2dParams.physics"]], "start_time (base2dparams attribute)": [[87, "gncpy.game_engine.base_game.Base2dParams.start_time"]], "basegame (class in gncpy.game_engine.base_game)": [[88, "gncpy.game_engine.base_game.BaseGame"]], "__init__() (basegame method)": [[88, "gncpy.game_engine.base_game.BaseGame.__init__"]], "config_file (basegame attribute)": [[88, "gncpy.game_engine.base_game.BaseGame.config_file"]], "current_frame (basegame attribute)": [[88, "gncpy.game_engine.base_game.BaseGame.current_frame"]], "entitymanager (basegame attribute)": [[88, "gncpy.game_engine.base_game.BaseGame.entityManager"]], "game_over (basegame attribute)": [[88, "gncpy.game_engine.base_game.BaseGame.game_over"]], "library_dir (basegame attribute)": [[88, "gncpy.game_engine.base_game.BaseGame.library_dir"]], "params (basegame attribute)": [[88, "gncpy.game_engine.base_game.BaseGame.params"]], "parse_config_file() (basegame method)": [[88, "gncpy.game_engine.base_game.BaseGame.parse_config_file"]], "register_params() (basegame method)": [[88, "gncpy.game_engine.base_game.BaseGame.register_params"]], "render_fps (basegame attribute)": [[88, "gncpy.game_engine.base_game.BaseGame.render_fps"]], "render_mode (basegame attribute)": [[88, "gncpy.game_engine.base_game.BaseGame.render_mode"]], "reset() (basegame method)": [[88, "gncpy.game_engine.base_game.BaseGame.reset"]], "rng (basegame attribute)": [[88, "gncpy.game_engine.base_game.BaseGame.rng"]], "s_collision() (basegame method)": [[88, "gncpy.game_engine.base_game.BaseGame.s_collision"]], "s_game_over() (basegame method)": [[88, "gncpy.game_engine.base_game.BaseGame.s_game_over"]], "s_input() (basegame method)": [[88, "gncpy.game_engine.base_game.BaseGame.s_input"]], "s_movement() (basegame method)": [[88, "gncpy.game_engine.base_game.BaseGame.s_movement"]], "s_score() (basegame method)": [[88, "gncpy.game_engine.base_game.BaseGame.s_score"]], "score (basegame attribute)": [[88, "gncpy.game_engine.base_game.BaseGame.score"]], "seed_val (basegame attribute)": [[88, "gncpy.game_engine.base_game.BaseGame.seed_val"]], "setup() (basegame method)": [[88, "gncpy.game_engine.base_game.BaseGame.setup"]], "step() (basegame method)": [[88, "gncpy.game_engine.base_game.BaseGame.step"]], "validate_config_file() (basegame method)": [[88, "gncpy.game_engine.base_game.BaseGame.validate_config_file"]], "basegame2d (class in gncpy.game_engine.base_game)": [[89, "gncpy.game_engine.base_game.BaseGame2d"]], "__init__() (basegame2d method)": [[89, "gncpy.game_engine.base_game.BaseGame2d.__init__"]], "append_name_to_keys() (basegame2d method)": [[89, "gncpy.game_engine.base_game.BaseGame2d.append_name_to_keys"]], "clock (basegame2d attribute)": [[89, "gncpy.game_engine.base_game.BaseGame2d.clock"]], "close() (basegame2d method)": [[89, "gncpy.game_engine.base_game.BaseGame2d.close"]], "current_time (basegame2d property)": [[89, "gncpy.game_engine.base_game.BaseGame2d.current_time"]], "current_update_count (basegame2d attribute)": [[89, "gncpy.game_engine.base_game.BaseGame2d.current_update_count"]], "dist_per_pix (basegame2d attribute)": [[89, "gncpy.game_engine.base_game.BaseGame2d.dist_per_pix"]], "elapsed_time (basegame2d property)": [[89, "gncpy.game_engine.base_game.BaseGame2d.elapsed_time"]], "get_image_size() (basegame2d method)": [[89, "gncpy.game_engine.base_game.BaseGame2d.get_image_size"]], "img (basegame2d attribute)": [[89, "gncpy.game_engine.base_game.BaseGame2d.img"]], "parse_config_file() (basegame2d method)": [[89, "gncpy.game_engine.base_game.BaseGame2d.parse_config_file"]], "register_params() (basegame2d method)": [[89, "gncpy.game_engine.base_game.BaseGame2d.register_params"]], "reset() (basegame2d method)": [[89, "gncpy.game_engine.base_game.BaseGame2d.reset"]], "s_collision() (basegame2d method)": [[89, "gncpy.game_engine.base_game.BaseGame2d.s_collision"]], "s_game_over() (basegame2d method)": [[89, "gncpy.game_engine.base_game.BaseGame2d.s_game_over"]], "s_input() (basegame2d method)": [[89, "gncpy.game_engine.base_game.BaseGame2d.s_input"]], "s_movement() (basegame2d method)": [[89, "gncpy.game_engine.base_game.BaseGame2d.s_movement"]], "s_render() (basegame2d method)": [[89, "gncpy.game_engine.base_game.BaseGame2d.s_render"]], "s_score() (basegame2d method)": [[89, "gncpy.game_engine.base_game.BaseGame2d.s_score"]], "setup() (basegame2d method)": [[89, "gncpy.game_engine.base_game.BaseGame2d.setup"]], "step() (basegame2d method)": [[89, "gncpy.game_engine.base_game.BaseGame2d.step"]], "validate_config_file() (basegame2d method)": [[89, "gncpy.game_engine.base_game.BaseGame2d.validate_config_file"]], "window (basegame2d attribute)": [[89, "gncpy.game_engine.base_game.BaseGame2d.window"]], "baseparams (class in gncpy.game_engine.base_game)": [[90, "gncpy.game_engine.base_game.BaseParams"]], "__init__() (baseparams method)": [[90, "gncpy.game_engine.base_game.BaseParams.__init__"]], "window (baseparams attribute)": [[90, "gncpy.game_engine.base_game.BaseParams.window"]], "windowparams (class in gncpy.game_engine.base_game)": [[91, "gncpy.game_engine.base_game.WindowParams"]], "__init__() (windowparams method)": [[91, "gncpy.game_engine.base_game.WindowParams.__init__"]], "height (windowparams attribute)": [[91, "gncpy.game_engine.base_game.WindowParams.height"]], "width (windowparams attribute)": [[91, "gncpy.game_engine.base_game.WindowParams.width"]], "ndarray_representer() (in module gncpy.game_engine.base_game)": [[92, "gncpy.game_engine.base_game.ndarray_representer"]], "yaml (in module gncpy.game_engine.base_game)": [[93, "gncpy.game_engine.base_game.yaml"]], "cbirth (class in gncpy.game_engine.components)": [[94, "gncpy.game_engine.components.CBirth"]], "__init__() (cbirth method)": [[94, "gncpy.game_engine.components.CBirth.__init__"]], "loc (cbirth attribute)": [[94, "gncpy.game_engine.components.CBirth.loc"]], "randomize (cbirth attribute)": [[94, "gncpy.game_engine.components.CBirth.randomize"]], "sample() (cbirth method)": [[94, "gncpy.game_engine.components.CBirth.sample"]], "ccapabilities (class in gncpy.game_engine.components)": [[95, "gncpy.game_engine.components.CCapabilities"]], "__init__() (ccapabilities method)": [[95, "gncpy.game_engine.components.CCapabilities.__init__"]], "capabilities (ccapabilities attribute)": [[95, "gncpy.game_engine.components.CCapabilities.capabilities"]], "ccollision (class in gncpy.game_engine.components)": [[96, "gncpy.game_engine.components.CCollision"]], "__init__() (ccollision method)": [[96, "gncpy.game_engine.components.CCollision.__init__"]], "aabb (ccollision attribute)": [[96, "gncpy.game_engine.components.CCollision.aabb"]], "cdynamics (class in gncpy.game_engine.components)": [[97, "gncpy.game_engine.components.CDynamics"]], "__init__() (cdynamics method)": [[97, "gncpy.game_engine.components.CDynamics.__init__"]], "ctrl_args (cdynamics attribute)": [[97, "gncpy.game_engine.components.CDynamics.ctrl_args"]], "dynobj (cdynamics attribute)": [[97, "gncpy.game_engine.components.CDynamics.dynObj"]], "last_state (cdynamics attribute)": [[97, "gncpy.game_engine.components.CDynamics.last_state"]], "pos_inds (cdynamics attribute)": [[97, "gncpy.game_engine.components.CDynamics.pos_inds"]], "state_args (cdynamics attribute)": [[97, "gncpy.game_engine.components.CDynamics.state_args"]], "state_high (cdynamics attribute)": [[97, "gncpy.game_engine.components.CDynamics.state_high"]], "state_low (cdynamics attribute)": [[97, "gncpy.game_engine.components.CDynamics.state_low"]], "vel_inds (cdynamics attribute)": [[97, "gncpy.game_engine.components.CDynamics.vel_inds"]], "cevents (class in gncpy.game_engine.components)": [[98, "gncpy.game_engine.components.CEvents"]], "__init__() (cevents method)": [[98, "gncpy.game_engine.components.CEvents.__init__"]], "events (cevents attribute)": [[98, "gncpy.game_engine.components.CEvents.events"]], "chazard (class in gncpy.game_engine.components)": [[99, "gncpy.game_engine.components.CHazard"]], "__init__() (chazard method)": [[99, "gncpy.game_engine.components.CHazard.__init__"]], "entrance_times (chazard attribute)": [[99, "gncpy.game_engine.components.CHazard.entrance_times"]], "prob_of_death (chazard attribute)": [[99, "gncpy.game_engine.components.CHazard.prob_of_death"]], "cpriority (class in gncpy.game_engine.components)": [[100, "gncpy.game_engine.components.CPriority"]], "__init__() (cpriority method)": [[100, "gncpy.game_engine.components.CPriority.__init__"]], "priority (cpriority attribute)": [[100, "gncpy.game_engine.components.CPriority.priority"]], "cshape (class in gncpy.game_engine.components)": [[101, "gncpy.game_engine.components.CShape"]], "__init__() (cshape method)": [[101, "gncpy.game_engine.components.CShape.__init__"]], "color (cshape attribute)": [[101, "gncpy.game_engine.components.CShape.color"]], "shape (cshape attribute)": [[101, "gncpy.game_engine.components.CShape.shape"]], "type (cshape attribute)": [[101, "gncpy.game_engine.components.CShape.type"]], "zorder (cshape attribute)": [[101, "gncpy.game_engine.components.CShape.zorder"]], "ctransform (class in gncpy.game_engine.components)": [[102, "gncpy.game_engine.components.CTransform"]], "__init__() (ctransform method)": [[102, "gncpy.game_engine.components.CTransform.__init__"]], "last_pos (ctransform attribute)": [[102, "gncpy.game_engine.components.CTransform.last_pos"]], "pos (ctransform attribute)": [[102, "gncpy.game_engine.components.CTransform.pos"]], "library_asset_dir (in module gncpy.game_engine.components)": [[103, "gncpy.game_engine.components.library_asset_dir"]], "entity (class in gncpy.game_engine.entities)": [[104, "gncpy.game_engine.entities.Entity"]], "__init__() (entity method)": [[104, "gncpy.game_engine.entities.Entity.__init__"]], "active (entity property)": [[104, "gncpy.game_engine.entities.Entity.active"]], "add_component() (entity method)": [[104, "gncpy.game_engine.entities.Entity.add_component"]], "destroy() (entity method)": [[104, "gncpy.game_engine.entities.Entity.destroy"]], "get_component() (entity method)": [[104, "gncpy.game_engine.entities.Entity.get_component"]], "has_component() (entity method)": [[104, "gncpy.game_engine.entities.Entity.has_component"]], "id (entity property)": [[104, "gncpy.game_engine.entities.Entity.id"]], "tag (entity property)": [[104, "gncpy.game_engine.entities.Entity.tag"]], "entitymanager (class in gncpy.game_engine.entities)": [[105, "gncpy.game_engine.entities.EntityManager"]], "__init__() (entitymanager method)": [[105, "gncpy.game_engine.entities.EntityManager.__init__"]], "add_entity() (entitymanager method)": [[105, "gncpy.game_engine.entities.EntityManager.add_entity"]], "get_entities() (entitymanager method)": [[105, "gncpy.game_engine.entities.EntityManager.get_entities"]], "get_entity_ids() (entitymanager method)": [[105, "gncpy.game_engine.entities.EntityManager.get_entity_ids"]], "update() (entitymanager method)": [[105, "gncpy.game_engine.entities.EntityManager.update"]], "gncpy.game_engine.base_game": [[106, "module-gncpy.game_engine.base_game"]], "gncpy.game_engine.components": [[107, "module-gncpy.game_engine.components"]], "gncpy.game_engine.entities": [[108, "module-gncpy.game_engine.entities"]], "gncpy.game_engine.physics2d": [[109, "module-gncpy.game_engine.physics2d"]], "gncpy.game_engine.rendering2d": [[110, "module-gncpy.game_engine.rendering2d"]], "collision2dparams (class in gncpy.game_engine.physics2d)": [[111, "gncpy.game_engine.physics2d.Collision2dParams"]], "__init__() (collision2dparams method)": [[111, "gncpy.game_engine.physics2d.Collision2dParams.__init__"]], "height (collision2dparams attribute)": [[111, "gncpy.game_engine.physics2d.Collision2dParams.height"]], "width (collision2dparams attribute)": [[111, "gncpy.game_engine.physics2d.Collision2dParams.width"]], "physics2dparams (class in gncpy.game_engine.physics2d)": [[112, "gncpy.game_engine.physics2d.Physics2dParams"]], "__init__() (physics2dparams method)": [[112, "gncpy.game_engine.physics2d.Physics2dParams.__init__"]], "dist_height (physics2dparams attribute)": [[112, "gncpy.game_engine.physics2d.Physics2dParams.dist_height"]], "dist_width (physics2dparams attribute)": [[112, "gncpy.game_engine.physics2d.Physics2dParams.dist_width"]], "dt (physics2dparams attribute)": [[112, "gncpy.game_engine.physics2d.Physics2dParams.dt"]], "min_pos (physics2dparams attribute)": [[112, "gncpy.game_engine.physics2d.Physics2dParams.min_pos"]], "step_factor (physics2dparams attribute)": [[112, "gncpy.game_engine.physics2d.Physics2dParams.step_factor"]], "update_dt (physics2dparams property)": [[112, "gncpy.game_engine.physics2d.Physics2dParams.update_dt"]], "check_collision2d() (in module gncpy.game_engine.physics2d)": [[113, "gncpy.game_engine.physics2d.check_collision2d"]], "clamp_window_bounds2d() (in module gncpy.game_engine.physics2d)": [[114, "gncpy.game_engine.physics2d.clamp_window_bounds2d"]], "dist_to_pixels() (in module gncpy.game_engine.physics2d)": [[115, "gncpy.game_engine.physics2d.dist_to_pixels"]], "pixels_to_dist() (in module gncpy.game_engine.physics2d)": [[116, "gncpy.game_engine.physics2d.pixels_to_dist"]], "resolve_collision2d() (in module gncpy.game_engine.physics2d)": [[117, "gncpy.game_engine.physics2d.resolve_collision2d"]], "shape2dparams (class in gncpy.game_engine.rendering2d)": [[118, "gncpy.game_engine.rendering2d.Shape2dParams"]], "__init__() (shape2dparams method)": [[118, "gncpy.game_engine.rendering2d.Shape2dParams.__init__"]], "color (shape2dparams attribute)": [[118, "gncpy.game_engine.rendering2d.Shape2dParams.color"]], "file (shape2dparams attribute)": [[118, "gncpy.game_engine.rendering2d.Shape2dParams.file"]], "height (shape2dparams attribute)": [[118, "gncpy.game_engine.rendering2d.Shape2dParams.height"]], "type (shape2dparams attribute)": [[118, "gncpy.game_engine.rendering2d.Shape2dParams.type"]], "width (shape2dparams attribute)": [[118, "gncpy.game_engine.rendering2d.Shape2dParams.width"]], "get_drawable_entities() (in module gncpy.game_engine.rendering2d)": [[119, "gncpy.game_engine.rendering2d.get_drawable_entities"]], "init_rendering_system() (in module gncpy.game_engine.rendering2d)": [[120, "gncpy.game_engine.rendering2d.init_rendering_system"]], "init_window() (in module gncpy.game_engine.rendering2d)": [[121, "gncpy.game_engine.rendering2d.init_window"]], "render() (in module gncpy.game_engine.rendering2d)": [[122, "gncpy.game_engine.rendering2d.render"]], "shutdown() (in module gncpy.game_engine.rendering2d)": [[123, "gncpy.game_engine.rendering2d.shutdown"]], "birthmodelparams (class in gncpy.games.simpleuav2d)": [[124, "gncpy.games.SimpleUAV2d.BirthModelParams"]], "__init__() (birthmodelparams method)": [[124, "gncpy.games.SimpleUAV2d.BirthModelParams.__init__"]], "extra_params (birthmodelparams attribute)": [[124, "gncpy.games.SimpleUAV2d.BirthModelParams.extra_params"]], "location (birthmodelparams attribute)": [[124, "gncpy.games.SimpleUAV2d.BirthModelParams.location"]], "prob (birthmodelparams attribute)": [[124, "gncpy.games.SimpleUAV2d.BirthModelParams.prob"]], "randomize (birthmodelparams attribute)": [[124, "gncpy.games.SimpleUAV2d.BirthModelParams.randomize"]], "scale (birthmodelparams attribute)": [[124, "gncpy.games.SimpleUAV2d.BirthModelParams.scale"]], "times (birthmodelparams attribute)": [[124, "gncpy.games.SimpleUAV2d.BirthModelParams.times"]], "type (birthmodelparams attribute)": [[124, "gncpy.games.SimpleUAV2d.BirthModelParams.type"]], "controlmodelparams (class in gncpy.games.simpleuav2d)": [[125, "gncpy.games.SimpleUAV2d.ControlModelParams"]], "__init__() (controlmodelparams method)": [[125, "gncpy.games.SimpleUAV2d.ControlModelParams.__init__"]], "max_turn_rate (controlmodelparams attribute)": [[125, "gncpy.games.SimpleUAV2d.ControlModelParams.max_turn_rate"]], "max_vel (controlmodelparams attribute)": [[125, "gncpy.games.SimpleUAV2d.ControlModelParams.max_vel"]], "max_vel_x (controlmodelparams attribute)": [[125, "gncpy.games.SimpleUAV2d.ControlModelParams.max_vel_x"]], "max_vel_y (controlmodelparams attribute)": [[125, "gncpy.games.SimpleUAV2d.ControlModelParams.max_vel_y"]], "type (controlmodelparams attribute)": [[125, "gncpy.games.SimpleUAV2d.ControlModelParams.type"]], "dynamicsparams (class in gncpy.games.simpleuav2d)": [[126, "gncpy.games.SimpleUAV2d.DynamicsParams"]], "__init__() (dynamicsparams method)": [[126, "gncpy.games.SimpleUAV2d.DynamicsParams.__init__"]], "controlmodel (dynamicsparams attribute)": [[126, "gncpy.games.SimpleUAV2d.DynamicsParams.controlModel"]], "extra_params (dynamicsparams attribute)": [[126, "gncpy.games.SimpleUAV2d.DynamicsParams.extra_params"]], "stateconstraint (dynamicsparams attribute)": [[126, "gncpy.games.SimpleUAV2d.DynamicsParams.stateConstraint"]], "type (dynamicsparams attribute)": [[126, "gncpy.games.SimpleUAV2d.DynamicsParams.type"]], "eventtype (class in gncpy.games.simpleuav2d)": [[127, "gncpy.games.SimpleUAV2d.EventType"]], "__init__() (eventtype method)": [[127, "gncpy.games.SimpleUAV2d.EventType.__init__"]], "hazardparams (class in gncpy.games.simpleuav2d)": [[128, "gncpy.games.SimpleUAV2d.HazardParams"]], "__init__() (hazardparams method)": [[128, "gncpy.games.SimpleUAV2d.HazardParams.__init__"]], "collision (hazardparams attribute)": [[128, "gncpy.games.SimpleUAV2d.HazardParams.collision"]], "loc_x (hazardparams attribute)": [[128, "gncpy.games.SimpleUAV2d.HazardParams.loc_x"]], "loc_y (hazardparams attribute)": [[128, "gncpy.games.SimpleUAV2d.HazardParams.loc_y"]], "prob_of_death (hazardparams attribute)": [[128, "gncpy.games.SimpleUAV2d.HazardParams.prob_of_death"]], "shape (hazardparams attribute)": [[128, "gncpy.games.SimpleUAV2d.HazardParams.shape"]], "obstacleparams (class in gncpy.games.simpleuav2d)": [[129, "gncpy.games.SimpleUAV2d.ObstacleParams"]], "__init__() (obstacleparams method)": [[129, "gncpy.games.SimpleUAV2d.ObstacleParams.__init__"]], "collision (obstacleparams attribute)": [[129, "gncpy.games.SimpleUAV2d.ObstacleParams.collision"]], "loc_x (obstacleparams attribute)": [[129, "gncpy.games.SimpleUAV2d.ObstacleParams.loc_x"]], "loc_y (obstacleparams attribute)": [[129, "gncpy.games.SimpleUAV2d.ObstacleParams.loc_y"]], "shape (obstacleparams attribute)": [[129, "gncpy.games.SimpleUAV2d.ObstacleParams.shape"]], "params (class in gncpy.games.simpleuav2d)": [[130, "gncpy.games.SimpleUAV2d.Params"]], "__init__() (params method)": [[130, "gncpy.games.SimpleUAV2d.Params.__init__"]], "hazards (params attribute)": [[130, "gncpy.games.SimpleUAV2d.Params.hazards"]], "obstacles (params attribute)": [[130, "gncpy.games.SimpleUAV2d.Params.obstacles"]], "players (params attribute)": [[130, "gncpy.games.SimpleUAV2d.Params.players"]], "score (params attribute)": [[130, "gncpy.games.SimpleUAV2d.Params.score"]], "targets (params attribute)": [[130, "gncpy.games.SimpleUAV2d.Params.targets"]], "playerparams (class in gncpy.games.simpleuav2d)": [[131, "gncpy.games.SimpleUAV2d.PlayerParams"]], "__init__() (playerparams method)": [[131, "gncpy.games.SimpleUAV2d.PlayerParams.__init__"]], "birth (playerparams attribute)": [[131, "gncpy.games.SimpleUAV2d.PlayerParams.birth"]], "capabilities (playerparams attribute)": [[131, "gncpy.games.SimpleUAV2d.PlayerParams.capabilities"]], "collision (playerparams attribute)": [[131, "gncpy.games.SimpleUAV2d.PlayerParams.collision"]], "dynamics (playerparams attribute)": [[131, "gncpy.games.SimpleUAV2d.PlayerParams.dynamics"]], "shape (playerparams attribute)": [[131, "gncpy.games.SimpleUAV2d.PlayerParams.shape"]], "scoreparams (class in gncpy.games.simpleuav2d)": [[132, "gncpy.games.SimpleUAV2d.ScoreParams"]], "__init__() (scoreparams method)": [[132, "gncpy.games.SimpleUAV2d.ScoreParams.__init__"]], "death_decay (scoreparams attribute)": [[132, "gncpy.games.SimpleUAV2d.ScoreParams.death_decay"]], "death_penalty (scoreparams attribute)": [[132, "gncpy.games.SimpleUAV2d.ScoreParams.death_penalty"]], "death_scale (scoreparams attribute)": [[132, "gncpy.games.SimpleUAV2d.ScoreParams.death_scale"]], "hazard_multiplier (scoreparams attribute)": [[132, "gncpy.games.SimpleUAV2d.ScoreParams.hazard_multiplier"]], "min_vel_per (scoreparams attribute)": [[132, "gncpy.games.SimpleUAV2d.ScoreParams.min_vel_per"]], "missed_multiplier (scoreparams attribute)": [[132, "gncpy.games.SimpleUAV2d.ScoreParams.missed_multiplier"]], "time_penalty (scoreparams attribute)": [[132, "gncpy.games.SimpleUAV2d.ScoreParams.time_penalty"]], "type (scoreparams attribute)": [[132, "gncpy.games.SimpleUAV2d.ScoreParams.type"]], "vel_penalty (scoreparams attribute)": [[132, "gncpy.games.SimpleUAV2d.ScoreParams.vel_penalty"]], "wall_penalty (scoreparams attribute)": [[132, "gncpy.games.SimpleUAV2d.ScoreParams.wall_penalty"]], "simpleuav2d (class in gncpy.games.simpleuav2d)": [[133, "gncpy.games.SimpleUAV2d.SimpleUAV2d"]], "__init__() (simpleuav2d method)": [[133, "gncpy.games.SimpleUAV2d.SimpleUAV2d.__init__"], [178, "gncpy.planning.reinforcement_learning.envs.simple2d.simpleUAV2d.SimpleUAV2d.__init__"]], "all_capabilities (simpleuav2d attribute)": [[133, "gncpy.games.SimpleUAV2d.SimpleUAV2d.all_capabilities"]], "append_name_to_keys() (simpleuav2d method)": [[133, "gncpy.games.SimpleUAV2d.SimpleUAV2d.append_name_to_keys"]], "basic_reward() (simpleuav2d method)": [[133, "gncpy.games.SimpleUAV2d.SimpleUAV2d.basic_reward"]], "close() (simpleuav2d method)": [[133, "gncpy.games.SimpleUAV2d.SimpleUAV2d.close"], [178, "gncpy.planning.reinforcement_learning.envs.simple2d.simpleUAV2d.SimpleUAV2d.close"]], "create_dynamics() (simpleuav2d method)": [[133, "gncpy.games.SimpleUAV2d.SimpleUAV2d.create_dynamics"]], "create_hazards() (simpleuav2d method)": [[133, "gncpy.games.SimpleUAV2d.SimpleUAV2d.create_hazards"]], "create_obstacles() (simpleuav2d method)": [[133, "gncpy.games.SimpleUAV2d.SimpleUAV2d.create_obstacles"]], "create_player() (simpleuav2d method)": [[133, "gncpy.games.SimpleUAV2d.SimpleUAV2d.create_player"]], "create_targets() (simpleuav2d method)": [[133, "gncpy.games.SimpleUAV2d.SimpleUAV2d.create_targets"]], "cur_target_seq (simpleuav2d attribute)": [[133, "gncpy.games.SimpleUAV2d.SimpleUAV2d.cur_target_seq"]], "current_time (simpleuav2d property)": [[133, "gncpy.games.SimpleUAV2d.SimpleUAV2d.current_time"]], "elapsed_time (simpleuav2d property)": [[133, "gncpy.games.SimpleUAV2d.SimpleUAV2d.elapsed_time"]], "get_image_size() (simpleuav2d method)": [[133, "gncpy.games.SimpleUAV2d.SimpleUAV2d.get_image_size"]], "get_player_ids() (simpleuav2d method)": [[133, "gncpy.games.SimpleUAV2d.SimpleUAV2d.get_player_ids"]], "get_player_pos_vel_inds() (simpleuav2d method)": [[133, "gncpy.games.SimpleUAV2d.SimpleUAV2d.get_player_pos_vel_inds"]], "get_player_state_bounds() (simpleuav2d method)": [[133, "gncpy.games.SimpleUAV2d.SimpleUAV2d.get_player_state_bounds"]], "get_players_state() (simpleuav2d method)": [[133, "gncpy.games.SimpleUAV2d.SimpleUAV2d.get_players_state"]], "has_random_player_birth_times (simpleuav2d attribute)": [[133, "gncpy.games.SimpleUAV2d.SimpleUAV2d.has_random_player_birth_times"]], "max_player_birth_time (simpleuav2d attribute)": [[133, "gncpy.games.SimpleUAV2d.SimpleUAV2d.max_player_birth_time"]], "parse_config_file() (simpleuav2d method)": [[133, "gncpy.games.SimpleUAV2d.SimpleUAV2d.parse_config_file"]], "propagate_dynamics() (simpleuav2d method)": [[133, "gncpy.games.SimpleUAV2d.SimpleUAV2d.propagate_dynamics"]], "register_params() (simpleuav2d method)": [[133, "gncpy.games.SimpleUAV2d.SimpleUAV2d.register_params"]], "reset() (simpleuav2d method)": [[133, "gncpy.games.SimpleUAV2d.SimpleUAV2d.reset"], [178, "gncpy.planning.reinforcement_learning.envs.simple2d.simpleUAV2d.SimpleUAV2d.reset"]], "s_collision() (simpleuav2d method)": [[133, "gncpy.games.SimpleUAV2d.SimpleUAV2d.s_collision"]], "s_game_over() (simpleuav2d method)": [[133, "gncpy.games.SimpleUAV2d.SimpleUAV2d.s_game_over"]], "s_input() (simpleuav2d method)": [[133, "gncpy.games.SimpleUAV2d.SimpleUAV2d.s_input"]], "s_movement() (simpleuav2d method)": [[133, "gncpy.games.SimpleUAV2d.SimpleUAV2d.s_movement"]], "s_render() (simpleuav2d method)": [[133, "gncpy.games.SimpleUAV2d.SimpleUAV2d.s_render"]], "s_score() (simpleuav2d method)": [[133, "gncpy.games.SimpleUAV2d.SimpleUAV2d.s_score"]], "setup() (simpleuav2d method)": [[133, "gncpy.games.SimpleUAV2d.SimpleUAV2d.setup"]], "spawn_players() (simpleuav2d method)": [[133, "gncpy.games.SimpleUAV2d.SimpleUAV2d.spawn_players"]], "step() (simpleuav2d method)": [[133, "gncpy.games.SimpleUAV2d.SimpleUAV2d.step"], [178, "gncpy.planning.reinforcement_learning.envs.simple2d.simpleUAV2d.SimpleUAV2d.step"]], "target_seq (simpleuav2d attribute)": [[133, "gncpy.games.SimpleUAV2d.SimpleUAV2d.target_seq"]], "validate_config_file() (simpleuav2d method)": [[133, "gncpy.games.SimpleUAV2d.SimpleUAV2d.validate_config_file"]], "stateconstraintparams (class in gncpy.games.simpleuav2d)": [[134, "gncpy.games.SimpleUAV2d.StateConstraintParams"]], "__init__() (stateconstraintparams method)": [[134, "gncpy.games.SimpleUAV2d.StateConstraintParams.__init__"]], "max_vels (stateconstraintparams attribute)": [[134, "gncpy.games.SimpleUAV2d.StateConstraintParams.max_vels"]], "min_vels (stateconstraintparams attribute)": [[134, "gncpy.games.SimpleUAV2d.StateConstraintParams.min_vels"]], "type (stateconstraintparams attribute)": [[134, "gncpy.games.SimpleUAV2d.StateConstraintParams.type"]], "targetparams (class in gncpy.games.simpleuav2d)": [[135, "gncpy.games.SimpleUAV2d.TargetParams"]], "__init__() (targetparams method)": [[135, "gncpy.games.SimpleUAV2d.TargetParams.__init__"]], "capabilities (targetparams attribute)": [[135, "gncpy.games.SimpleUAV2d.TargetParams.capabilities"]], "collision (targetparams attribute)": [[135, "gncpy.games.SimpleUAV2d.TargetParams.collision"]], "loc_x (targetparams attribute)": [[135, "gncpy.games.SimpleUAV2d.TargetParams.loc_x"]], "loc_y (targetparams attribute)": [[135, "gncpy.games.SimpleUAV2d.TargetParams.loc_y"]], "order (targetparams attribute)": [[135, "gncpy.games.SimpleUAV2d.TargetParams.order"]], "priority (targetparams attribute)": [[135, "gncpy.games.SimpleUAV2d.TargetParams.priority"]], "shape (targetparams attribute)": [[135, "gncpy.games.SimpleUAV2d.TargetParams.shape"]], "gncpy.games.simpleuav2d": [[136, "module-gncpy.games.SimpleUAV2d"]], "gncpy.control": [[137, "module-gncpy.control"]], "gncpy.coordinate_transforms": [[138, "module-gncpy.coordinate_transforms"]], "gncpy.data_fusion": [[139, "module-gncpy.data_fusion"]], "gncpy.distributions": [[140, "module-gncpy.distributions"]], "gncpy.dynamics": [[141, "module-gncpy.dynamics"]], "gncpy.errors": [[142, "module-gncpy.errors"]], "gncpy.filters": [[143, "module-gncpy.filters"]], "gncpy.game_engine": [[144, "module-gncpy.game_engine"]], "gncpy.games": [[145, "module-gncpy.games"]], "gncpy.math": [[146, "module-gncpy.math"]], "gncpy.measurements": [[147, "module-gncpy.measurements"]], "gncpy.orbital_mechanics": [[148, "module-gncpy.orbital_mechanics"]], "gncpy.planning": [[149, "module-gncpy.planning"]], "gncpy.plotting": [[150, "module-gncpy.plotting"]], "gncpy.sampling": [[151, "module-gncpy.sampling"]], "gncpy.utilities": [[152, "module-gncpy.utilities"]], "gncpy.wgs84": [[153, "module-gncpy.wgs84"]], "epanechnikov_kernel() (in module gncpy.math)": [[154, "gncpy.math.epanechnikov_kernel"]], "gamma_fnc() (in module gncpy.math)": [[155, "gncpy.math.gamma_fnc"]], "gaussian_kernel() (in module gncpy.math)": [[156, "gncpy.math.gaussian_kernel"]], "get_elem_sym_fnc() (in module gncpy.math)": [[157, "gncpy.math.get_elem_sym_fnc"]], "get_hessian() (in module gncpy.math)": [[158, "gncpy.math.get_hessian"]], "get_input_jacobian() (in module gncpy.math)": [[159, "gncpy.math.get_input_jacobian"]], "get_jacobian() (in module gncpy.math)": [[160, "gncpy.math.get_jacobian"]], "get_state_jacobian() (in module gncpy.math)": [[161, "gncpy.math.get_state_jacobian"]], "log_sum_exp() (in module gncpy.math)": [[162, "gncpy.math.log_sum_exp"]], "rk4() (in module gncpy.math)": [[163, "gncpy.math.rk4"]], "rk4_backward() (in module gncpy.math)": [[164, "gncpy.math.rk4_backward"]], "weighted_sum_mat() (in module gncpy.math)": [[165, "gncpy.math.weighted_sum_mat"]], "weighted_sum_vec() (in module gncpy.math)": [[166, "gncpy.math.weighted_sum_vec"]], "correct_lon_ascend() (in module gncpy.orbital_mechanics)": [[167, "gncpy.orbital_mechanics.correct_lon_ascend"]], "ecc_anom_from_mean() (in module gncpy.orbital_mechanics)": [[168, "gncpy.orbital_mechanics.ecc_anom_from_mean"]], "ecef_from_orbit() (in module gncpy.orbital_mechanics)": [[169, "gncpy.orbital_mechanics.ecef_from_orbit"]], "true_anom_from_ecc() (in module gncpy.orbital_mechanics)": [[170, "gncpy.orbital_mechanics.true_anom_from_ecc"]], "astar (class in gncpy.planning.a_star)": [[171, "gncpy.planning.a_star.AStar"]], "__init__() (astar method)": [[171, "gncpy.planning.a_star.AStar.__init__"]], "beam_search_max_nodes (astar attribute)": [[171, "gncpy.planning.a_star.AStar.beam_search_max_nodes"]], "calc_heuristic() (astar method)": [[171, "gncpy.planning.a_star.AStar.calc_heuristic"]], "calc_weight() (astar method)": [[171, "gncpy.planning.a_star.AStar.calc_weight"]], "draw_end() (astar method)": [[171, "gncpy.planning.a_star.AStar.draw_end"]], "draw_map() (astar method)": [[171, "gncpy.planning.a_star.AStar.draw_map"]], "draw_start() (astar method)": [[171, "gncpy.planning.a_star.AStar.draw_start"]], "final_path() (astar method)": [[171, "gncpy.planning.a_star.AStar.final_path"]], "get_map_cost() (astar method)": [[171, "gncpy.planning.a_star.AStar.get_map_cost"]], "ind_to_pos() (astar method)": [[171, "gncpy.planning.a_star.AStar.ind_to_pos"]], "is_valid() (astar method)": [[171, "gncpy.planning.a_star.AStar.is_valid"]], "max (astar attribute)": [[171, "gncpy.planning.a_star.AStar.max"]], "min (astar attribute)": [[171, "gncpy.planning.a_star.AStar.min"]], "motion (astar attribute)": [[171, "gncpy.planning.a_star.AStar.motion"]], "plan() (astar method)": [[171, "gncpy.planning.a_star.AStar.plan"]], "pos_to_ind() (astar method)": [[171, "gncpy.planning.a_star.AStar.pos_to_ind"]], "ravel_ind() (astar method)": [[171, "gncpy.planning.a_star.AStar.ravel_ind"]], "resolution (astar attribute)": [[171, "gncpy.planning.a_star.AStar.resolution"]], "set_map() (astar method)": [[171, "gncpy.planning.a_star.AStar.set_map"]], "use_beam_search (astar attribute)": [[171, "gncpy.planning.a_star.AStar.use_beam_search"]], "weight (astar attribute)": [[171, "gncpy.planning.a_star.AStar.weight"]], "node (class in gncpy.planning.a_star)": [[172, "gncpy.planning.a_star.Node"]], "__init__() (node method)": [[172, "gncpy.planning.a_star.Node.__init__"], [190, "gncpy.planning.rrt_star.Node.__init__"]], "cost (node attribute)": [[172, "gncpy.planning.a_star.Node.cost"], [190, "gncpy.planning.rrt_star.Node.cost"]], "indices (node attribute)": [[172, "gncpy.planning.a_star.Node.indices"]], "parent_idx (node attribute)": [[172, "gncpy.planning.a_star.Node.parent_idx"]], "gncpy.planning.a_star": [[173, "module-gncpy.planning.a_star"]], "gncpy.planning.reinforcement_learning": [[174, "module-gncpy.planning.reinforcement_learning"]], "gncpy.planning.rrt_star": [[175, "module-gncpy.planning.rrt_star"]], "gncpy.planning.reinforcement_learning.envs.simple2d": [[176, "module-gncpy.planning.reinforcement_learning.envs.simple2d"]], "gncpy.planning.reinforcement_learning.envs.simple2d.simpleuav2d": [[177, "module-gncpy.planning.reinforcement_learning.envs.simple2d.simpleUAV2d"]], "simpleuav2d (class in gncpy.planning.reinforcement_learning.envs.simple2d.simpleuav2d)": [[178, "gncpy.planning.reinforcement_learning.envs.simple2d.simpleUAV2d.SimpleUAV2d"]], "action_space (simpleuav2d attribute)": [[178, "gncpy.planning.reinforcement_learning.envs.simple2d.simpleUAV2d.SimpleUAV2d.action_space"]], "aux_use_n_targets (simpleuav2d attribute)": [[178, "gncpy.planning.reinforcement_learning.envs.simple2d.simpleUAV2d.SimpleUAV2d.aux_use_n_targets"]], "aux_use_time (simpleuav2d attribute)": [[178, "gncpy.planning.reinforcement_learning.envs.simple2d.simpleUAV2d.SimpleUAV2d.aux_use_time"]], "calc_obs_space() (simpleuav2d method)": [[178, "gncpy.planning.reinforcement_learning.envs.simple2d.simpleUAV2d.SimpleUAV2d.calc_obs_space"]], "fig (simpleuav2d attribute)": [[178, "gncpy.planning.reinforcement_learning.envs.simple2d.simpleUAV2d.SimpleUAV2d.fig"]], "game (simpleuav2d attribute)": [[178, "gncpy.planning.reinforcement_learning.envs.simple2d.simpleUAV2d.SimpleUAV2d.game"]], "gen_act_map() (simpleuav2d method)": [[178, "gncpy.planning.reinforcement_learning.envs.simple2d.simpleUAV2d.SimpleUAV2d.gen_act_map"]], "max_time (simpleuav2d attribute)": [[178, "gncpy.planning.reinforcement_learning.envs.simple2d.simpleUAV2d.SimpleUAV2d.max_time"]], "metadata (simpleuav2d attribute)": [[178, "gncpy.planning.reinforcement_learning.envs.simple2d.simpleUAV2d.SimpleUAV2d.metadata"]], "np_random (simpleuav2d property)": [[178, "gncpy.planning.reinforcement_learning.envs.simple2d.simpleUAV2d.SimpleUAV2d.np_random"]], "obs_type (simpleuav2d attribute)": [[178, "gncpy.planning.reinforcement_learning.envs.simple2d.simpleUAV2d.SimpleUAV2d.obs_type"]], "observation_space (simpleuav2d attribute)": [[178, "gncpy.planning.reinforcement_learning.envs.simple2d.simpleUAV2d.SimpleUAV2d.observation_space"]], "render_mode (simpleuav2d attribute)": [[178, "gncpy.planning.reinforcement_learning.envs.simple2d.simpleUAV2d.SimpleUAV2d.render_mode"]], "seed() (simpleuav2d method)": [[178, "gncpy.planning.reinforcement_learning.envs.simple2d.simpleUAV2d.SimpleUAV2d.seed"]], "unwrapped (simpleuav2d property)": [[178, "gncpy.planning.reinforcement_learning.envs.simple2d.simpleUAV2d.SimpleUAV2d.unwrapped"]], "simpleuavhazards2d (class in gncpy.planning.reinforcement_learning.envs.simple2d.simpleuav2d)": [[179, "gncpy.planning.reinforcement_learning.envs.simple2d.simpleUAV2d.SimpleUAVHazards2d"]], "__init__() (simpleuavhazards2d method)": [[179, "gncpy.planning.reinforcement_learning.envs.simple2d.simpleUAV2d.SimpleUAVHazards2d.__init__"]], "action_space (simpleuavhazards2d attribute)": [[179, "gncpy.planning.reinforcement_learning.envs.simple2d.simpleUAV2d.SimpleUAVHazards2d.action_space"]], "calc_obs_space() (simpleuavhazards2d method)": [[179, "gncpy.planning.reinforcement_learning.envs.simple2d.simpleUAV2d.SimpleUAVHazards2d.calc_obs_space"]], "close() (simpleuavhazards2d method)": [[179, "gncpy.planning.reinforcement_learning.envs.simple2d.simpleUAV2d.SimpleUAVHazards2d.close"]], "gen_act_map() (simpleuavhazards2d method)": [[179, "gncpy.planning.reinforcement_learning.envs.simple2d.simpleUAV2d.SimpleUAVHazards2d.gen_act_map"]], "metadata (simpleuavhazards2d attribute)": [[179, "gncpy.planning.reinforcement_learning.envs.simple2d.simpleUAV2d.SimpleUAVHazards2d.metadata"]], "np_random (simpleuavhazards2d property)": [[179, "gncpy.planning.reinforcement_learning.envs.simple2d.simpleUAV2d.SimpleUAVHazards2d.np_random"]], "reset() (simpleuavhazards2d method)": [[179, "gncpy.planning.reinforcement_learning.envs.simple2d.simpleUAV2d.SimpleUAVHazards2d.reset"]], "seed() (simpleuavhazards2d method)": [[179, "gncpy.planning.reinforcement_learning.envs.simple2d.simpleUAV2d.SimpleUAVHazards2d.seed"]], "step() (simpleuavhazards2d method)": [[179, "gncpy.planning.reinforcement_learning.envs.simple2d.simpleUAV2d.SimpleUAVHazards2d.step"]], "unwrapped (simpleuavhazards2d property)": [[179, "gncpy.planning.reinforcement_learning.envs.simple2d.simpleUAV2d.SimpleUAVHazards2d.unwrapped"]], "gncpy.planning.reinforcement_learning.envs": [[180, "module-gncpy.planning.reinforcement_learning.envs"]], "gncpy.planning.reinforcement_learning.wrappers": [[181, "module-gncpy.planning.reinforcement_learning.wrappers"]], "bufferfames (class in gncpy.planning.reinforcement_learning.wrappers)": [[182, "gncpy.planning.reinforcement_learning.wrappers.BufferFames"]], "__init__() (bufferfames method)": [[182, "gncpy.planning.reinforcement_learning.wrappers.BufferFames.__init__"]], "action_space (bufferfames property)": [[182, "gncpy.planning.reinforcement_learning.wrappers.BufferFames.action_space"]], "class_name() (bufferfames class method)": [[182, "gncpy.planning.reinforcement_learning.wrappers.BufferFames.class_name"]], "close() (bufferfames method)": [[182, "gncpy.planning.reinforcement_learning.wrappers.BufferFames.close"]], "metadata (bufferfames property)": [[182, "gncpy.planning.reinforcement_learning.wrappers.BufferFames.metadata"]], "np_random (bufferfames property)": [[182, "gncpy.planning.reinforcement_learning.wrappers.BufferFames.np_random"]], "observation() (bufferfames method)": [[182, "gncpy.planning.reinforcement_learning.wrappers.BufferFames.observation"]], "observation_space (bufferfames property)": [[182, "gncpy.planning.reinforcement_learning.wrappers.BufferFames.observation_space"]], "render_mode (bufferfames property)": [[182, "gncpy.planning.reinforcement_learning.wrappers.BufferFames.render_mode"]], "reset() (bufferfames method)": [[182, "gncpy.planning.reinforcement_learning.wrappers.BufferFames.reset"]], "reward_range (bufferfames property)": [[182, "gncpy.planning.reinforcement_learning.wrappers.BufferFames.reward_range"]], "seed() (bufferfames method)": [[182, "gncpy.planning.reinforcement_learning.wrappers.BufferFames.seed"]], "spec (bufferfames property)": [[182, "gncpy.planning.reinforcement_learning.wrappers.BufferFames.spec"]], "step() (bufferfames method)": [[182, "gncpy.planning.reinforcement_learning.wrappers.BufferFames.step"]], "unwrapped (bufferfames property)": [[182, "gncpy.planning.reinforcement_learning.wrappers.BufferFames.unwrapped"]], "grayscaleobservation (class in gncpy.planning.reinforcement_learning.wrappers)": [[183, "gncpy.planning.reinforcement_learning.wrappers.GrayScaleObservation"]], "__init__() (grayscaleobservation method)": [[183, "gncpy.planning.reinforcement_learning.wrappers.GrayScaleObservation.__init__"]], "action_space (grayscaleobservation property)": [[183, "gncpy.planning.reinforcement_learning.wrappers.GrayScaleObservation.action_space"]], "class_name() (grayscaleobservation class method)": [[183, "gncpy.planning.reinforcement_learning.wrappers.GrayScaleObservation.class_name"]], "close() (grayscaleobservation method)": [[183, "gncpy.planning.reinforcement_learning.wrappers.GrayScaleObservation.close"]], "metadata (grayscaleobservation property)": [[183, "gncpy.planning.reinforcement_learning.wrappers.GrayScaleObservation.metadata"]], "np_random (grayscaleobservation property)": [[183, "gncpy.planning.reinforcement_learning.wrappers.GrayScaleObservation.np_random"]], "observation() (grayscaleobservation method)": [[183, "gncpy.planning.reinforcement_learning.wrappers.GrayScaleObservation.observation"]], "observation_space (grayscaleobservation property)": [[183, "gncpy.planning.reinforcement_learning.wrappers.GrayScaleObservation.observation_space"]], "render_mode (grayscaleobservation property)": [[183, "gncpy.planning.reinforcement_learning.wrappers.GrayScaleObservation.render_mode"]], "reset() (grayscaleobservation method)": [[183, "gncpy.planning.reinforcement_learning.wrappers.GrayScaleObservation.reset"]], "reward_range (grayscaleobservation property)": [[183, "gncpy.planning.reinforcement_learning.wrappers.GrayScaleObservation.reward_range"]], "seed() (grayscaleobservation method)": [[183, "gncpy.planning.reinforcement_learning.wrappers.GrayScaleObservation.seed"]], "spec (grayscaleobservation property)": [[183, "gncpy.planning.reinforcement_learning.wrappers.GrayScaleObservation.spec"]], "step() (grayscaleobservation method)": [[183, "gncpy.planning.reinforcement_learning.wrappers.GrayScaleObservation.step"]], "unwrapped (grayscaleobservation property)": [[183, "gncpy.planning.reinforcement_learning.wrappers.GrayScaleObservation.unwrapped"]], "maxframes (class in gncpy.planning.reinforcement_learning.wrappers)": [[184, "gncpy.planning.reinforcement_learning.wrappers.MaxFrames"]], "__init__() (maxframes method)": [[184, "gncpy.planning.reinforcement_learning.wrappers.MaxFrames.__init__"]], "action_space (maxframes property)": [[184, "gncpy.planning.reinforcement_learning.wrappers.MaxFrames.action_space"]], "class_name() (maxframes class method)": [[184, "gncpy.planning.reinforcement_learning.wrappers.MaxFrames.class_name"]], "close() (maxframes method)": [[184, "gncpy.planning.reinforcement_learning.wrappers.MaxFrames.close"]], "metadata (maxframes property)": [[184, "gncpy.planning.reinforcement_learning.wrappers.MaxFrames.metadata"]], "np_random (maxframes property)": [[184, "gncpy.planning.reinforcement_learning.wrappers.MaxFrames.np_random"]], "observation() (maxframes method)": [[184, "gncpy.planning.reinforcement_learning.wrappers.MaxFrames.observation"]], "observation_space (maxframes property)": [[184, "gncpy.planning.reinforcement_learning.wrappers.MaxFrames.observation_space"]], "render_mode (maxframes property)": [[184, "gncpy.planning.reinforcement_learning.wrappers.MaxFrames.render_mode"]], "reset() (maxframes method)": [[184, "gncpy.planning.reinforcement_learning.wrappers.MaxFrames.reset"]], "reward_range (maxframes property)": [[184, "gncpy.planning.reinforcement_learning.wrappers.MaxFrames.reward_range"]], "seed() (maxframes method)": [[184, "gncpy.planning.reinforcement_learning.wrappers.MaxFrames.seed"]], "spec (maxframes property)": [[184, "gncpy.planning.reinforcement_learning.wrappers.MaxFrames.spec"]], "step() (maxframes method)": [[184, "gncpy.planning.reinforcement_learning.wrappers.MaxFrames.step"]], "unwrapped (maxframes property)": [[184, "gncpy.planning.reinforcement_learning.wrappers.MaxFrames.unwrapped"]], "resizeimage (class in gncpy.planning.reinforcement_learning.wrappers)": [[185, "gncpy.planning.reinforcement_learning.wrappers.ResizeImage"]], "__init__() (resizeimage method)": [[185, "gncpy.planning.reinforcement_learning.wrappers.ResizeImage.__init__"]], "action_space (resizeimage property)": [[185, "gncpy.planning.reinforcement_learning.wrappers.ResizeImage.action_space"]], "class_name() (resizeimage class method)": [[185, "gncpy.planning.reinforcement_learning.wrappers.ResizeImage.class_name"]], "close() (resizeimage method)": [[185, "gncpy.planning.reinforcement_learning.wrappers.ResizeImage.close"]], "metadata (resizeimage property)": [[185, "gncpy.planning.reinforcement_learning.wrappers.ResizeImage.metadata"]], "np_random (resizeimage property)": [[185, "gncpy.planning.reinforcement_learning.wrappers.ResizeImage.np_random"]], "observation() (resizeimage method)": [[185, "gncpy.planning.reinforcement_learning.wrappers.ResizeImage.observation"]], "observation_space (resizeimage property)": [[185, "gncpy.planning.reinforcement_learning.wrappers.ResizeImage.observation_space"]], "render_mode (resizeimage property)": [[185, "gncpy.planning.reinforcement_learning.wrappers.ResizeImage.render_mode"]], "reset() (resizeimage method)": [[185, "gncpy.planning.reinforcement_learning.wrappers.ResizeImage.reset"]], "reward_range (resizeimage property)": [[185, "gncpy.planning.reinforcement_learning.wrappers.ResizeImage.reward_range"]], "seed() (resizeimage method)": [[185, "gncpy.planning.reinforcement_learning.wrappers.ResizeImage.seed"]], "spec (resizeimage property)": [[185, "gncpy.planning.reinforcement_learning.wrappers.ResizeImage.spec"]], "step() (resizeimage method)": [[185, "gncpy.planning.reinforcement_learning.wrappers.ResizeImage.step"]], "unwrapped (resizeimage property)": [[185, "gncpy.planning.reinforcement_learning.wrappers.ResizeImage.unwrapped"]], "skipframes (class in gncpy.planning.reinforcement_learning.wrappers)": [[186, "gncpy.planning.reinforcement_learning.wrappers.SkipFrames"]], "__init__() (skipframes method)": [[186, "gncpy.planning.reinforcement_learning.wrappers.SkipFrames.__init__"]], "action_space (skipframes property)": [[186, "gncpy.planning.reinforcement_learning.wrappers.SkipFrames.action_space"]], "class_name() (skipframes class method)": [[186, "gncpy.planning.reinforcement_learning.wrappers.SkipFrames.class_name"]], "close() (skipframes method)": [[186, "gncpy.planning.reinforcement_learning.wrappers.SkipFrames.close"]], "metadata (skipframes property)": [[186, "gncpy.planning.reinforcement_learning.wrappers.SkipFrames.metadata"]], "np_random (skipframes property)": [[186, "gncpy.planning.reinforcement_learning.wrappers.SkipFrames.np_random"]], "observation_space (skipframes property)": [[186, "gncpy.planning.reinforcement_learning.wrappers.SkipFrames.observation_space"]], "render_mode (skipframes property)": [[186, "gncpy.planning.reinforcement_learning.wrappers.SkipFrames.render_mode"]], "reset() (skipframes method)": [[186, "gncpy.planning.reinforcement_learning.wrappers.SkipFrames.reset"]], "reward_range (skipframes property)": [[186, "gncpy.planning.reinforcement_learning.wrappers.SkipFrames.reward_range"]], "seed() (skipframes method)": [[186, "gncpy.planning.reinforcement_learning.wrappers.SkipFrames.seed"]], "spec (skipframes property)": [[186, "gncpy.planning.reinforcement_learning.wrappers.SkipFrames.spec"]], "step() (skipframes method)": [[186, "gncpy.planning.reinforcement_learning.wrappers.SkipFrames.step"]], "unwrapped (skipframes property)": [[186, "gncpy.planning.reinforcement_learning.wrappers.SkipFrames.unwrapped"]], "stackframes (class in gncpy.planning.reinforcement_learning.wrappers)": [[187, "gncpy.planning.reinforcement_learning.wrappers.StackFrames"]], "__init__() (stackframes method)": [[187, "gncpy.planning.reinforcement_learning.wrappers.StackFrames.__init__"]], "action_space (stackframes property)": [[187, "gncpy.planning.reinforcement_learning.wrappers.StackFrames.action_space"]], "class_name() (stackframes class method)": [[187, "gncpy.planning.reinforcement_learning.wrappers.StackFrames.class_name"]], "close() (stackframes method)": [[187, "gncpy.planning.reinforcement_learning.wrappers.StackFrames.close"]], "metadata (stackframes property)": [[187, "gncpy.planning.reinforcement_learning.wrappers.StackFrames.metadata"]], "np_random (stackframes property)": [[187, "gncpy.planning.reinforcement_learning.wrappers.StackFrames.np_random"]], "observation() (stackframes method)": [[187, "gncpy.planning.reinforcement_learning.wrappers.StackFrames.observation"]], "observation_space (stackframes property)": [[187, "gncpy.planning.reinforcement_learning.wrappers.StackFrames.observation_space"]], "render_mode (stackframes property)": [[187, "gncpy.planning.reinforcement_learning.wrappers.StackFrames.render_mode"]], "reset() (stackframes method)": [[187, "gncpy.planning.reinforcement_learning.wrappers.StackFrames.reset"]], "reward_range (stackframes property)": [[187, "gncpy.planning.reinforcement_learning.wrappers.StackFrames.reward_range"]], "seed() (stackframes method)": [[187, "gncpy.planning.reinforcement_learning.wrappers.StackFrames.seed"]], "spec (stackframes property)": [[187, "gncpy.planning.reinforcement_learning.wrappers.StackFrames.spec"]], "step() (stackframes method)": [[187, "gncpy.planning.reinforcement_learning.wrappers.StackFrames.step"]], "unwrapped (stackframes property)": [[187, "gncpy.planning.reinforcement_learning.wrappers.StackFrames.unwrapped"]], "extendedlqrrrtstar (class in gncpy.planning.rrt_star)": [[188, "gncpy.planning.rrt_star.ExtendedLQRRRTStar"]], "__init__() (extendedlqrrrtstar method)": [[188, "gncpy.planning.rrt_star.ExtendedLQRRRTStar.__init__"]], "lqrrrtstar (class in gncpy.planning.rrt_star)": [[189, "gncpy.planning.rrt_star.LQRRRTStar"]], "nobs (lqrrrtstar attribute)": [[189, "gncpy.planning.rrt_star.LQRRRTStar.Nobs"]], "p (lqrrrtstar attribute)": [[189, "gncpy.planning.rrt_star.LQRRRTStar.P"]], "s (lqrrrtstar attribute)": [[189, "gncpy.planning.rrt_star.LQRRRTStar.S"]], "__init__() (lqrrrtstar method)": [[189, "gncpy.planning.rrt_star.LQRRRTStar.__init__"]], "connect_circle_dist (lqrrrtstar attribute)": [[189, "gncpy.planning.rrt_star.LQRRRTStar.connect_circle_dist"]], "ell_con (lqrrrtstar attribute)": [[189, "gncpy.planning.rrt_star.LQRRRTStar.ell_con"]], "end (lqrrrtstar attribute)": [[189, "gncpy.planning.rrt_star.LQRRRTStar.end"]], "expand_dis (lqrrrtstar attribute)": [[189, "gncpy.planning.rrt_star.LQRRRTStar.expand_dis"]], "goal_sample_rate (lqrrrtstar attribute)": [[189, "gncpy.planning.rrt_star.LQRRRTStar.goal_sample_rate"]], "max_iter (lqrrrtstar attribute)": [[189, "gncpy.planning.rrt_star.LQRRRTStar.max_iter"]], "max_rand (lqrrrtstar attribute)": [[189, "gncpy.planning.rrt_star.LQRRRTStar.max_rand"]], "min_rand (lqrrrtstar attribute)": [[189, "gncpy.planning.rrt_star.LQRRRTStar.min_rand"]], "node_list (lqrrrtstar attribute)": [[189, "gncpy.planning.rrt_star.LQRRRTStar.node_list"]], "obstacle_list (lqrrrtstar attribute)": [[189, "gncpy.planning.rrt_star.LQRRRTStar.obstacle_list"]], "planner (lqrrrtstar attribute)": [[189, "gncpy.planning.rrt_star.LQRRRTStar.planner"]], "pos_inds (lqrrrtstar attribute)": [[189, "gncpy.planning.rrt_star.LQRRRTStar.pos_inds"]], "rng (lqrrrtstar attribute)": [[189, "gncpy.planning.rrt_star.LQRRRTStar.rng"]], "sampling_fun (lqrrrtstar attribute)": [[189, "gncpy.planning.rrt_star.LQRRRTStar.sampling_fun"]], "start (lqrrrtstar attribute)": [[189, "gncpy.planning.rrt_star.LQRRRTStar.start"]], "step_size (lqrrrtstar attribute)": [[189, "gncpy.planning.rrt_star.LQRRRTStar.step_size"]], "node (class in gncpy.planning.rrt_star)": [[190, "gncpy.planning.rrt_star.Node"]], "parent (node attribute)": [[190, "gncpy.planning.rrt_star.Node.parent"]], "path (node attribute)": [[190, "gncpy.planning.rrt_star.Node.path"]], "sv (node attribute)": [[190, "gncpy.planning.rrt_star.Node.sv"]], "u (node attribute)": [[190, "gncpy.planning.rrt_star.Node.u"]], "calc_error_ellipse() (in module gncpy.plotting)": [[191, "gncpy.plotting.calc_error_ellipse"]], "get_cmap() (in module gncpy.plotting)": [[192, "gncpy.plotting.get_cmap"]], "init_plotting_opts() (in module gncpy.plotting)": [[193, "gncpy.plotting.init_plotting_opts"]], "set_title_label() (in module gncpy.plotting)": [[194, "gncpy.plotting.set_title_label"]], "metropolishastings (class in gncpy.sampling)": [[195, "gncpy.sampling.MetropolisHastings"]], "__init__() (metropolishastings method)": [[195, "gncpy.sampling.MetropolisHastings.__init__"]], "classpropertydescriptor (class in gncpy.utilities)": [[196, "gncpy.utilities.ClassPropertyDescriptor"]], "__init__() (classpropertydescriptor method)": [[196, "gncpy.utilities.ClassPropertyDescriptor.__init__"]], "classpropertymetaclass (class in gncpy.utilities)": [[197, "gncpy.utilities.ClassPropertyMetaClass"]], "__init__() (classpropertymetaclass method)": [[197, "gncpy.utilities.ClassPropertyMetaClass.__init__"]], "mro() (classpropertymetaclass method)": [[197, "gncpy.utilities.ClassPropertyMetaClass.mro"]], "classproperty() (in module gncpy.utilities)": [[198, "gncpy.utilities.classproperty"]], "calc_earth_rate() (in module gncpy.wgs84)": [[199, "gncpy.wgs84.calc_earth_rate"]], "calc_ew_rad() (in module gncpy.wgs84)": [[200, "gncpy.wgs84.calc_ew_rad"]], "calc_gravity() (in module gncpy.wgs84)": [[201, "gncpy.wgs84.calc_gravity"]], "calc_ns_rad() (in module gncpy.wgs84)": [[202, "gncpy.wgs84.calc_ns_rad"]], "calc_transport_rate() (in module gncpy.wgs84)": [[203, "gncpy.wgs84.calc_transport_rate"]], "convert_msl_to_wgs() (in module gncpy.wgs84)": [[204, "gncpy.wgs84.convert_msl_to_wgs"]], "convert_wgs_to_msl() (in module gncpy.wgs84)": [[205, "gncpy.wgs84.convert_wgs_to_msl"]], "init_egm_lookup_table() (in module gncpy.wgs84)": [[206, "gncpy.wgs84.init_egm_lookup_table"]]}})